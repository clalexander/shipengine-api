/**
 * ShipEngine API
 * ShipEngine\'s easy-to-use REST API lets you manage all of your shipping needs without worrying about the complexities of different carrier APIs and protocols. We handle all the heavy lifting so you can focus on providing a first-class shipping experience for your customers at the best possible prices.  Each of ShipEngine\'s features can be used by itself or in conjunction with each other to build powerful shipping functionality into your application or service.  ## Getting Started If you\'re new to REST APIs then be sure to read our [introduction to REST](https://www.shipengine.com/docs/rest/) to understand the basics.  Learn how to [authenticate yourself to ShipEngine](https://www.shipengine.com/docs/auth/), and then use our [sandbox environment](https://www.shipengine.com/docs/sandbox/) to kick the tires and get familiar with our API. If you run into any problems, then be sure to check the [error handling guide](https://www.shipengine.com/docs/errors/) for tips.  Here are some step-by-step **tutorials** to get you started:    - [Learn how to create your first shipping label](https://www.shipengine.com/docs/labels/create-a-label/)   - [Calculate shipping costs and compare rates across carriers](https://www.shipengine.com/docs/rates/)   - [Track packages on-demand or in real time](https://www.shipengine.com/docs/tracking/)   - [Validate mailing addresses anywhere on Earth](https://www.shipengine.com/docs/addresses/validation/)   ## Shipping Labels for Every Major Carrier ShipEngine makes it easy to [create shipping labels for any carrier](https://www.shipengine.com/docs/labels/create-a-label/) and [download them](https://www.shipengine.com/docs/labels/downloading/) in a [variety of file formats](https://www.shipengine.com/docs/labels/formats/). You can even customize labels with your own [messages](https://www.shipengine.com/docs/labels/messages/) and [images](https://www.shipengine.com/docs/labels/branding/).   ## Real-Time Package Tracking With ShipEngine you can [get the current status of a package](https://www.shipengine.com/docs/tracking/) or [subscribe to real-time tracking updates](https://www.shipengine.com/docs/tracking/webhooks/) via webhooks. You can also create [custimized tracking pages](https://www.shipengine.com/docs/tracking/branded-tracking-page/) with your own branding so your customers will always know where their package is.   ## Compare Shipping Costs Across Carriers Make sure you ship as cost-effectively as possible by [comparing rates across carriers](https://www.shipengine.com/docs/rates/get-shipment-rates/) using the ShipEngine Rates API. Or if you don\'t know the full shipment details yet, then you can [get rate estimates](https://www.shipengine.com/docs/rates/estimate/) with limited address info.   ## Worldwide Address Validation ShipEngine supports [address validation](https://www.shipengine.com/docs/addresses/validation/) for virtually [every country on Earth](https://www.shipengine.com/docs/addresses/validation/countries/), including the United States, Canada, Great Britain, Australia, Germany, France, Norway, Spain, Sweden, Israel, Italy, and over 160 others.
 *
 * The version of the OpenAPI document: 1.1.202307171907
 * Contact: sales@shipengine.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from './configuration';
import type { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import type { RequestArgs } from './base';
import { BaseAPI } from './base';
/**
 * A ShipEngine account settings response body
 * @export
 * @interface AccountSettings
 */
export interface AccountSettings {
    /**
     *
     * @type {DefaultLabelLayout}
     * @memberof AccountSettings
     */
    'default_label_layout'?: DefaultLabelLayout;
}
/**
 * A ShipEngine account images body
 * @export
 * @interface AccountSettingsImages
 */
export interface AccountSettingsImages {
    /**
     * Used to identify an image resource.
     * @type {string}
     * @memberof AccountSettingsImages
     */
    'label_image_id'?: string;
    /**
     * A human readable name for the image.
     * @type {string}
     * @memberof AccountSettingsImages
     */
    'name'?: string;
    /**
     * Indicates whether this image is set as default.
     * @type {boolean}
     * @memberof AccountSettingsImages
     */
    'is_default'?: boolean;
    /**
     * The image type
     * @type {string}
     * @memberof AccountSettingsImages
     */
    'image_content_type'?: AccountSettingsImagesImageContentTypeEnum;
    /**
     * A base64 encoded string representation of the image.
     * @type {string}
     * @memberof AccountSettingsImages
     */
    'image_data'?: string;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date and time.
     * @type {string}
     * @memberof AccountSettingsImages
     */
    'created_at'?: string;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date and time.
     * @type {string}
     * @memberof AccountSettingsImages
     */
    'modified_at'?: string;
}
export declare const AccountSettingsImagesImageContentTypeEnum: {
    readonly Png: "image/png";
    readonly Jpeg: "image/jpeg";
};
export type AccountSettingsImagesImageContentTypeEnum = typeof AccountSettingsImagesImageContentTypeEnum[keyof typeof AccountSettingsImagesImageContentTypeEnum];
/**
 * An add funds to carrier request body
 * @export
 * @interface AddFundsToCarrierRequestBody
 */
export interface AddFundsToCarrierRequestBody {
    /**
     * The currencies that are supported by ShipEngine are the ones that specified by ISO 4217: https://www.iso.org/iso-4217-currency-codes.html
     * @type {string}
     * @memberof AddFundsToCarrierRequestBody
     */
    'currency': string;
    /**
     * The monetary amount, in the specified currency.
     * @type {number}
     * @memberof AddFundsToCarrierRequestBody
     */
    'amount': number;
}
/**
 * The current balance of the requested carrier account
 * @export
 * @interface AddFundsToCarrierResponseBody
 */
export interface AddFundsToCarrierResponseBody {
    /**
     *
     * @type {AddFundsToCarrierResponseBodyBalance}
     * @memberof AddFundsToCarrierResponseBody
     */
    'balance': AddFundsToCarrierResponseBodyBalance;
}
/**
 * The current balance of the account
 * @export
 * @interface AddFundsToCarrierResponseBodyBalance
 */
export interface AddFundsToCarrierResponseBodyBalance {
    /**
     * The currencies that are supported by ShipEngine are the ones that specified by ISO 4217: https://www.iso.org/iso-4217-currency-codes.html
     * @type {string}
     * @memberof AddFundsToCarrierResponseBodyBalance
     */
    'currency': string;
    /**
     * The monetary amount, in the specified currency.
     * @type {number}
     * @memberof AddFundsToCarrierResponseBodyBalance
     */
    'amount': number;
}
/**
 * An add funds to insurance request body
 * @export
 * @interface AddFundsToInsuranceRequestBody
 */
export interface AddFundsToInsuranceRequestBody {
    /**
     * The currencies that are supported by ShipEngine are the ones that specified by ISO 4217: https://www.iso.org/iso-4217-currency-codes.html
     * @type {string}
     * @memberof AddFundsToInsuranceRequestBody
     */
    'currency': string;
    /**
     * The monetary amount, in the specified currency.
     * @type {number}
     * @memberof AddFundsToInsuranceRequestBody
     */
    'amount': number;
}
/**
 * Add funds to insurance response body
 * @export
 * @interface AddFundsToInsuranceResponseBody
 */
export interface AddFundsToInsuranceResponseBody {
    /**
     * The currencies that are supported by ShipEngine are the ones that specified by ISO 4217: https://www.iso.org/iso-4217-currency-codes.html
     * @type {string}
     * @memberof AddFundsToInsuranceResponseBody
     */
    'currency': string;
    /**
     * The monetary amount, in the specified currency.
     * @type {number}
     * @memberof AddFundsToInsuranceResponseBody
     */
    'amount': number;
}
/**
 * An add to batch request body
 * @export
 * @interface AddToBatchRequestBody
 */
export interface AddToBatchRequestBody {
    /**
     * The Shipment Ids to be modified on the batch
     * @type {Array<string>}
     * @memberof AddToBatchRequestBody
     */
    'shipment_ids'?: Array<string>;
    /**
     * Array of Rate IDs to be modifed on the batch
     * @type {Array<string>}
     * @memberof AddToBatchRequestBody
     */
    'rate_ids'?: Array<string>;
}
/**
 * Any residential or business mailing address, anywhere in the world.  > **Note:** Either `name` or `company_name` must be set. Both may be specified, if relevant.
 * @export
 * @interface Address
 */
export interface Address {
    /**
     * The name of a contact person at this address.  This field may be set instead of - or in addition to - the `company_name` field.
     * @type {string}
     * @memberof Address
     */
    'name': string;
    /**
     * The phone number of a contact person at this address.  The format of this phone number varies depending on the country.
     * @type {string}
     * @memberof Address
     */
    'phone': string;
    /**
     * Email for the address owner.
     * @type {string}
     * @memberof Address
     */
    'email'?: string | null;
    /**
     * If this is a business address, then the company name should be specified here.
     * @type {string}
     * @memberof Address
     */
    'company_name'?: string | null;
    /**
     * The first line of the street address.  For some addresses, this may be the only line.  Other addresses may require 2 or 3 lines.
     * @type {string}
     * @memberof Address
     */
    'address_line1': string;
    /**
     * The second line of the street address.  For some addresses, this line may not be needed.
     * @type {string}
     * @memberof Address
     */
    'address_line2'?: string | null;
    /**
     * The third line of the street address.  For some addresses, this line may not be needed.
     * @type {string}
     * @memberof Address
     */
    'address_line3'?: string | null;
    /**
     * The name of the city or locality
     * @type {string}
     * @memberof Address
     */
    'city_locality': string;
    /**
     * The state or province.  For some countries (including the U.S.) only abbreviations are allowed.  Other countries allow the full name or abbreviation.
     * @type {string}
     * @memberof Address
     */
    'state_province': string;
    /**
     * postal code
     * @type {string}
     * @memberof Address
     */
    'postal_code': string;
    /**
     * A two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1)
     * @type {string}
     * @memberof Address
     */
    'country_code': string;
    /**
     *
     * @type {AddressResidentialIndicator}
     * @memberof Address
     */
    'address_residential_indicator': AddressResidentialIndicator;
}
/**
 * Indicates whether an address is residential.
 * @export
 * @enum {string}
 */
export declare const AddressResidentialIndicator: {
    readonly Unknown: "unknown";
    readonly Yes: "yes";
    readonly No: "no";
};
export type AddressResidentialIndicator = typeof AddressResidentialIndicator[keyof typeof AddressResidentialIndicator];
/**
 * Any residential or business mailing address, anywhere in the world.
 * @export
 * @interface AddressToValidate
 */
export interface AddressToValidate {
    /**
     * The name of a contact person at this address.  This field may be set instead of - or in addition to - the `company_name` field.
     * @type {string}
     * @memberof AddressToValidate
     */
    'name'?: string;
    /**
     * The phone number of a contact person at this address.  The format of this phone number varies depending on the country.
     * @type {string}
     * @memberof AddressToValidate
     */
    'phone'?: string;
    /**
     * Email for the address owner.
     * @type {string}
     * @memberof AddressToValidate
     */
    'email'?: string | null;
    /**
     * If this is a business address, then the company name should be specified here.
     * @type {string}
     * @memberof AddressToValidate
     */
    'company_name'?: string | null;
    /**
     * The first line of the street address.  For some addresses, this may be the only line.  Other addresses may require 2 or 3 lines.
     * @type {string}
     * @memberof AddressToValidate
     */
    'address_line1': string;
    /**
     * The second line of the street address.  For some addresses, this line may not be needed.
     * @type {string}
     * @memberof AddressToValidate
     */
    'address_line2'?: string | null;
    /**
     * The third line of the street address.  For some addresses, this line may not be needed.
     * @type {string}
     * @memberof AddressToValidate
     */
    'address_line3'?: string | null;
    /**
     * The name of the city or locality
     * @type {string}
     * @memberof AddressToValidate
     */
    'city_locality': string;
    /**
     * The state or province.  For some countries (including the U.S.) only abbreviations are allowed.  Other countries allow the full name or abbreviation.
     * @type {string}
     * @memberof AddressToValidate
     */
    'state_province': string;
    /**
     * postal code
     * @type {string}
     * @memberof AddressToValidate
     */
    'postal_code'?: string;
    /**
     * A two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1)
     * @type {string}
     * @memberof AddressToValidate
     */
    'country_code': string;
    /**
     *
     * @type {AddressResidentialIndicator}
     * @memberof AddressToValidate
     */
    'address_residential_indicator'?: AddressResidentialIndicator;
}
/**
 * An address validating shipment
 * @export
 * @interface AddressValidatingShipment
 */
export interface AddressValidatingShipment {
    /**
     *
     * @type {ValidateAddress}
     * @memberof AddressValidatingShipment
     */
    'validate_address'?: ValidateAddress;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof AddressValidatingShipment
     */
    'shipment_id': string;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof AddressValidatingShipment
     */
    'carrier_id': string;
    /**
     * A [carrier service](https://www.shipengine.com/docs/shipping/use-a-carrier-service/), such as `fedex_ground`, `usps_first_class_mail`, `flat_rate_envelope`, etc.
     * @type {string}
     * @memberof AddressValidatingShipment
     */
    'service_code': string;
    /**
     * ID that the Order Source assigned
     * @type {string}
     * @memberof AddressValidatingShipment
     */
    'external_order_id'?: string | null;
    /**
     * Describe the packages included in this shipment as related to potential metadata that was imported from external order sources
     * @type {Array<ShipmentItem>}
     * @memberof AddressValidatingShipment
     */
    'items'?: Array<ShipmentItem>;
    /**
     *
     * @type {Array<TaxIdentifier>}
     * @memberof AddressValidatingShipment
     */
    'tax_identifiers'?: Array<TaxIdentifier> | null;
    /**
     * A unique user-defined key to identify a shipment.  This can be used to retrieve the shipment.  > **Warning:** The `external_shipment_id` is limited to 50 characters. Any additional characters will be truncated.
     * @type {string}
     * @memberof AddressValidatingShipment
     */
    'external_shipment_id'?: string | null;
    /**
     * A non-unique user-defined number used to identify a shipment.  If undefined, this will match the external_shipment_id of the shipment.  > **Warning:** The `shipment_number` is limited to 50 characters. Any additional characters will be truncated.
     * @type {string}
     * @memberof AddressValidatingShipment
     */
    'shipment_number'?: string | null;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date, but not a specific time.  The value _may_ contain a time component, but it will be set to `00:00:00` UTC by ShipEngine.
     * @type {string}
     * @memberof AddressValidatingShipment
     */
    'ship_date'?: string;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date and time.
     * @type {string}
     * @memberof AddressValidatingShipment
     */
    'created_at'?: string;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date and time.
     * @type {string}
     * @memberof AddressValidatingShipment
     */
    'modified_at'?: string;
    /**
     *
     * @type {ShipmentStatus}
     * @memberof AddressValidatingShipment
     */
    'shipment_status'?: ShipmentStatus;
    /**
     *
     * @type {ShippingAddress}
     * @memberof AddressValidatingShipment
     */
    'ship_to': ShippingAddress;
    /**
     *
     * @type {ShippingAddress}
     * @memberof AddressValidatingShipment
     */
    'ship_from': ShippingAddress;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof AddressValidatingShipment
     */
    'warehouse_id'?: string | null;
    /**
     *
     * @type {ShippingAddress}
     * @memberof AddressValidatingShipment
     */
    'return_to'?: ShippingAddress;
    /**
     * An optional indicator if the shipment is intended to be a return. Defaults to false if not provided.
     * @type {boolean}
     * @memberof AddressValidatingShipment
     */
    'is_return'?: boolean | null;
    /**
     *
     * @type {DeliveryConfirmation}
     * @memberof AddressValidatingShipment
     */
    'confirmation'?: DeliveryConfirmation;
    /**
     *
     * @type {PartialShipmentCustoms}
     * @memberof AddressValidatingShipment
     */
    'customs'?: PartialShipmentCustoms | null;
    /**
     *
     * @type {AdvancedShipmentOptions}
     * @memberof AddressValidatingShipment
     */
    'advanced_options'?: AdvancedShipmentOptions;
    /**
     *
     * @type {InsuranceProvider}
     * @memberof AddressValidatingShipment
     */
    'insurance_provider'?: InsuranceProvider;
    /**
     * Arbitrary tags associated with this shipment.  Tags can be used to categorize shipments, and shipments can be queried by their tags.
     * @type {Array<Tag>}
     * @memberof AddressValidatingShipment
     */
    'tags'?: Array<Tag>;
    /**
     *
     * @type {OrderSourceName}
     * @memberof AddressValidatingShipment
     */
    'order_source_code'?: OrderSourceName;
    /**
     * The packages in the shipment.  > **Note:** Some carriers only allow one package per shipment.  If you attempt to create a multi-package shipment for a carrier that doesn\'t allow it, an error will be returned.
     * @type {Array<Package>}
     * @memberof AddressValidatingShipment
     */
    'packages'?: Array<Package>;
    /**
     *
     * @type {PartialShipmentTotalWeight}
     * @memberof AddressValidatingShipment
     */
    'total_weight'?: PartialShipmentTotalWeight;
}
/**
 * The error codes that can be returned by the address validation API
 * @export
 * @enum {string}
 */
export declare const AddressValidationCode: {
    readonly A1000: "a1000";
    readonly A1001: "a1001";
    readonly A1002: "a1002";
    readonly A1003: "a1003";
    readonly A1004: "a1004";
    readonly A1005: "a1005";
    readonly A1006: "a1006";
    readonly A1007: "a1007";
    readonly A1008: "a1008";
    readonly R1000: "r1000";
    readonly R1001: "r1001";
    readonly R1002: "r1002";
    readonly R1003: "r1003";
};
export type AddressValidationCode = typeof AddressValidationCode[keyof typeof AddressValidationCode];
/**
 * The detailed error codes that can be returned by the address validation API
 * @export
 * @enum {string}
 */
export declare const AddressValidationDetailCode: {
    readonly UnsupportedCountry: "unsupported_country";
    readonly NonSupportedCountry: "non_supported_country";
    readonly MinimumPostalCodeVerificationFailed: "minimum_postal_code_verification_failed";
    readonly StreetDoesNotMatchUniqueStreetName: "street_does_not_match_unique_street_name";
    readonly MultipleDirectionals: "multiple_directionals";
    readonly MultipleMatches: "multiple_matches";
    readonly SuiteNotValid: "suite_not_valid";
    readonly SuiteMissing: "suite_missing";
    readonly IncompatiblePairedLabels: "incompatible_paired_labels";
    readonly InvalidHouseNumber: "invalid_house_number";
    readonly MissingHouseNumber: "missing_house_number";
    readonly InvalidBoxNumber: "invalid_box_number";
    readonly InvalidChargeEvent: "invalid_charge_event";
    readonly MissingBoxNumber: "missing_box_number";
    readonly MissingCmraOrPrivateMailBoxNumber: "missing_cmra_or_private_mail_box_number";
    readonly SuiteHasNoSecondaries: "suite_has_no_secondaries";
    readonly PostalCodeChangedOrAdded: "postal_code_changed_or_added";
    readonly StateProvinceChangedOrAdded: "state_province_changed_or_added";
    readonly CityLocalityChangedOrAdded: "city_locality_changed_or_added";
    readonly UrbanizationChanged: "urbanization_changed";
    readonly StreetNameSpellingChangedOrAdded: "street_name_spelling_changed_or_added";
    readonly StreetNameTypeChangedOrAdded: "street_name_type_changed_or_added";
    readonly StreetDirectionChangedOrAdded: "street_direction_changed_or_added";
    readonly SuiteTypeChangedOrAdded: "suite_type_changed_or_added";
    readonly SuiteUnitNumberChangedOrAdded: "suite_unit_number_changed_or_added";
    readonly DoubleDependentLocalityChangedOrAdded: "double_dependent_locality_changed_or_added";
    readonly SubadministrativeAreaChangedOrAdded: "subadministrative_area_changed_or_added";
    readonly SubnationalAreaChangedOrAdded: "subnational_area_changed_or_added";
    readonly PoBoxChangedOrAdded: "po_box_changed_or_added";
    readonly PremiseTypeChangedOrAdded: "premise_type_changed_or_added";
    readonly HouseNumberChanged: "house_number_changed";
    readonly OrganizationChangedOrAdded: "organization_changed_or_added";
    readonly PartiallyVerifiedToStateLevel: "partially_verified_to_state_level";
    readonly PartiallyVerifiedToCityLevel: "partially_verified_to_city_level";
    readonly PartiallyVerifiedToStreetLevel: "partially_verified_to_street_level";
    readonly PartiallyVerifiedToPremiseLevel: "partially_verified_to_premise_level";
    readonly VerifiedToStateLevel: "verified_to_state_level";
    readonly VerifiedToCityLevel: "verified_to_city_level";
    readonly VerifiedToStreetLevel: "verified_to_street_level";
    readonly VerifiedToPremiseLevel: "verified_to_premise_level";
    readonly VerifiedToSuiteLevel: "verified_to_suite_level";
    readonly CodedToStreetLavel: "coded_to_street_lavel";
    readonly CodedToNeighborhoodLevel: "coded_to_neighborhood_level";
    readonly CodedToCommunityLevel: "coded_to_community_level";
    readonly CodedToStateLevel: "coded_to_state_level";
    readonly CodedToRooftopLevel: "coded_to_rooftop_level";
    readonly CodedToRooftopInterpolationLevel: "coded_to_rooftop_interpolation_level";
    readonly NameMaxLengthExceeded: "name_max_length_exceeded";
    readonly PhoneMaxLengthExceeded: "phone_max_length_exceeded";
    readonly CompanyNameMaxLengthExceeded: "company_name_max_length_exceeded";
    readonly Line1MinMaxLength: "line1_min_max_length";
    readonly Line2MaxLengthExceeded: "line2_max_length_exceeded";
    readonly Line3MaxLengthExceeded: "line3_max_length_exceeded";
    readonly CityLocalityMaxLengthExceeded: "city_locality_max_length_exceeded";
    readonly StateProvinceMaxLengthExceeded: "state_province_max_length_exceeded";
    readonly InvalidPostalCode: "invalid_postal_code";
    readonly CountryInvalidLength: "country_invalid_length";
    readonly AddressNotFound: "address_not_found";
};
export type AddressValidationDetailCode = typeof AddressValidationDetailCode[keyof typeof AddressValidationDetailCode];
/**
 * The different types of messages that can be returned by the address validation API
 * @export
 * @enum {string}
 */
export declare const AddressValidationMessageType: {
    readonly Error: "error";
    readonly Warning: "warning";
    readonly Info: "info";
};
export type AddressValidationMessageType = typeof AddressValidationMessageType[keyof typeof AddressValidationMessageType];
/**
 * An address validation result
 * @export
 * @interface AddressValidationResult
 */
export interface AddressValidationResult {
    /**
     *
     * @type {AddressValidationStatus}
     * @memberof AddressValidationResult
     */
    'status': AddressValidationStatus;
    /**
     *
     * @type {Address}
     * @memberof AddressValidationResult
     */
    'original_address': Address;
    /**
     *
     * @type {Address}
     * @memberof AddressValidationResult
     */
    'matched_address': Address | null;
    /**
     * The list of messages that were generated during the address validation request.
     * @type {Array<ResponseMessage>}
     * @memberof AddressValidationResult
     */
    'messages': Array<ResponseMessage>;
}
/**
 * The possible address validation status values
 * @export
 * @enum {string}
 */
export declare const AddressValidationStatus: {
    readonly Unverified: "unverified";
    readonly Verified: "verified";
    readonly Warning: "warning";
    readonly Error: "error";
};
export type AddressValidationStatus = typeof AddressValidationStatus[keyof typeof AddressValidationStatus];
/**
 * Advanced shipment options
 * @export
 * @interface AdvancedShipmentOptions
 */
export interface AdvancedShipmentOptions {
    /**
     * This field is used to [bill shipping costs to a third party](https://www.shipengine.com/docs/shipping/bill-to-third-party/).  This field must be used in conjunction with the `bill_to_country_code`, `bill_to_party`, and `bill_to_postal_code` fields.
     * @type {string}
     * @memberof AdvancedShipmentOptions
     */
    'bill_to_account'?: string | null;
    /**
     * A two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1)
     * @type {string}
     * @memberof AdvancedShipmentOptions
     */
    'bill_to_country_code'?: string | null;
    /**
     *
     * @type {BillToParty}
     * @memberof AdvancedShipmentOptions
     */
    'bill_to_party'?: BillToParty | null;
    /**
     * The postal code of the third-party that is responsible for shipping costs.
     * @type {string}
     * @memberof AdvancedShipmentOptions
     */
    'bill_to_postal_code'?: string | null;
    /**
     * Indicates that the shipment contains alcohol.
     * @type {boolean}
     * @memberof AdvancedShipmentOptions
     */
    'contains_alcohol'?: boolean;
    /**
     * Indicates that the shipper is paying the international delivery duties for this shipment.  This option is supported by UPS, FedEx, and DHL Express.
     * @type {boolean}
     * @memberof AdvancedShipmentOptions
     */
    'delivered_duty_paid'?: boolean;
    /**
     * Indicates if the shipment contain dry ice
     * @type {boolean}
     * @memberof AdvancedShipmentOptions
     */
    'dry_ice'?: boolean;
    /**
     *
     * @type {AdvancedShipmentOptionsDryIceWeight}
     * @memberof AdvancedShipmentOptions
     */
    'dry_ice_weight'?: AdvancedShipmentOptionsDryIceWeight | null;
    /**
     * Indicates that the package cannot be processed automatically because it is too large or irregularly shaped. This is primarily for USPS shipments.  See [Section 1.2 of the USPS parcel standards](https://pe.usps.com/text/dmm300/101.htm#ep1047495) for details.
     * @type {boolean}
     * @memberof AdvancedShipmentOptions
     */
    'non_machinable'?: boolean;
    /**
     * Enables Saturday delivery, if supported by the carrier.
     * @type {boolean}
     * @memberof AdvancedShipmentOptions
     */
    'saturday_delivery'?: boolean;
    /**
     *
     * @type {AdvancedShipmentOptionsFedexFreight}
     * @memberof AdvancedShipmentOptions
     */
    'fedex_freight'?: AdvancedShipmentOptionsFedexFreight;
    /**
     * Whether to use [UPS Ground Freight pricing](https://www.shipengine.com/docs/shipping/ups-ground-freight/).  If enabled, then a `freight_class` must also be specified.
     * @type {boolean}
     * @memberof AdvancedShipmentOptions
     */
    'use_ups_ground_freight_pricing'?: boolean | null;
    /**
     * The National Motor Freight Traffic Association [freight class](http://www.nmfta.org/pages/nmfc?AspxAutoDetectCookieSupport=1), such as \"77.5\", \"110\", or \"250\".
     * @type {string}
     * @memberof AdvancedShipmentOptions
     */
    'freight_class'?: string | null;
    /**
     * An arbitrary field that can be used to store information about the shipment.
     * @type {string}
     * @memberof AdvancedShipmentOptions
     */
    'custom_field1'?: string | null;
    /**
     * An arbitrary field that can be used to store information about the shipment.
     * @type {string}
     * @memberof AdvancedShipmentOptions
     */
    'custom_field2'?: string | null;
    /**
     * An arbitrary field that can be used to store information about the shipment.
     * @type {string}
     * @memberof AdvancedShipmentOptions
     */
    'custom_field3'?: string | null;
    /**
     *
     * @type {OriginType}
     * @memberof AdvancedShipmentOptions
     */
    'origin_type'?: OriginType | null;
    /**
     *
     * @type {boolean}
     * @memberof AdvancedShipmentOptions
     */
    'shipper_release'?: boolean | null;
    /**
     *
     * @type {CollectOnDelivery}
     * @memberof AdvancedShipmentOptions
     */
    'collect_on_delivery'?: CollectOnDelivery;
    /**
     * Third Party Consignee option is a value-added service that allows the shipper to supply goods without commercial invoices being attached
     * @type {boolean}
     * @memberof AdvancedShipmentOptions
     */
    'third_party_consignee'?: boolean;
}
/**
 * The weight of the dry ice in the shipment
 * @export
 * @interface AdvancedShipmentOptionsDryIceWeight
 */
export interface AdvancedShipmentOptionsDryIceWeight {
    /**
     * The weight, in the specified unit
     * @type {number}
     * @memberof AdvancedShipmentOptionsDryIceWeight
     */
    'value': number;
    /**
     *
     * @type {WeightUnit}
     * @memberof AdvancedShipmentOptionsDryIceWeight
     */
    'unit': WeightUnit;
}
/**
 * Provide details for the Fedex freight service
 * @export
 * @interface AdvancedShipmentOptionsFedexFreight
 */
export interface AdvancedShipmentOptionsFedexFreight {
    /**
     *
     * @type {string}
     * @memberof AdvancedShipmentOptionsFedexFreight
     */
    'shipper_load_and_count'?: string;
    /**
     *
     * @type {string}
     * @memberof AdvancedShipmentOptionsFedexFreight
     */
    'booking_confirmation'?: string;
}
/**
 *
 * @export
 * @enum {string}
 */
export declare const AllowedIncoterms: {
    readonly Exw: "exw";
    readonly Fca: "fca";
    readonly Cpt: "cpt";
    readonly Cip: "cip";
    readonly Dpu: "dpu";
    readonly Dap: "dap";
    readonly Ddp: "ddp";
    readonly Fas: "fas";
    readonly Fob: "fob";
    readonly Cfr: "cfr";
    readonly Cif: "cif";
    readonly Ddu: "ddu";
    readonly Daf: "daf";
    readonly Deq: "deq";
    readonly Des: "des";
};
export type AllowedIncoterms = typeof AllowedIncoterms[keyof typeof AllowedIncoterms];
/**
 * Additional information some carriers may provide by which to identify a given label in their system.
 * @export
 * @interface AlternativeIdentifier
 */
export interface AlternativeIdentifier {
    /**
     * The type of alternative_identifier that corresponds to the value.
     * @type {string}
     * @memberof AlternativeIdentifier
     */
    'type'?: string;
    /**
     * The value of the alternative_identifier.
     * @type {string}
     * @memberof AlternativeIdentifier
     */
    'value'?: string;
}
/**
 * [Ancillary service endorsements](https://pe.usps.com/text/qsg300/Q507.htm) are used by mailers to request an addressee\'s new address and to provide the carrier with instructions on how to handle packages that are undeliverable as addressed.  | Ancillary Service Endorsement  | Description |--------------------------------|----------------------------------------------------- | `none`                         | No ancillary service is requested. Depending on the carrier servive, the package may be forwarded, returned, or discarded. | `return_service_requested`     | The package is returned to the sender. If possible, notification of the new address is is included with the returned package. | `forwarding_service_requested` | Forward the package to the new address, if possible; otherwise, return it to the sender. | `address_service_requested`    | Forward the package to the new address, if possible; otherwise, return it to the sender. This is similar to `forwarding_service_requested`, but different restrictions and charges may apply. | `change_service_requested`     | The package is discarded. If possible, notification of the new address is sent to the sender. | `leave_if_no_response`         |
 * @export
 * @enum {string}
 */
export declare const AncillaryServiceEndorsement: {
    readonly None: "none";
    readonly ReturnServiceRequested: "return_service_requested";
    readonly ForwardingServiceRequested: "forwarding_service_requested";
    readonly AddressServiceRequested: "address_service_requested";
    readonly ChangeServiceRequested: "change_service_requested";
    readonly LeaveIfNoResponse: "leave_if_no_response";
};
export type AncillaryServiceEndorsement = typeof AncillaryServiceEndorsement[keyof typeof AncillaryServiceEndorsement];
/**
 * Batches are an advanced feature of ShipEngine designed for users who need to generate hundreds or thousands of labels at a time.
 * @export
 * @interface Batch
 */
export interface Batch {
    /**
     *
     * @type {LabelLayout}
     * @memberof Batch
     */
    'label_layout': LabelLayout;
    /**
     *
     * @type {LabelFormat}
     * @memberof Batch
     */
    'label_format': LabelFormat;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof Batch
     */
    'batch_id': string;
    /**
     * The batch number.
     * @type {string}
     * @memberof Batch
     */
    'batch_number': string;
    /**
     * A string that uniquely identifies the external batch
     * @type {string}
     * @memberof Batch
     */
    'external_batch_id': string | null;
    /**
     * Custom notes you can add for each created batch
     * @type {string}
     * @memberof Batch
     */
    'batch_notes': string | null;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date and time.
     * @type {string}
     * @memberof Batch
     */
    'created_at': string;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date and time.
     * @type {string}
     * @memberof Batch
     */
    'processed_at': string | null;
    /**
     * The number of errors that occurred while generating the batch
     * @type {number}
     * @memberof Batch
     */
    'errors': number;
    /**
     * The number of warnings that occurred while generating the batch
     * @type {number}
     * @memberof Batch
     */
    'warnings': number;
    /**
     * The number of labels generated in the batch
     * @type {number}
     * @memberof Batch
     */
    'completed': number;
    /**
     * The number of forms for customs that are available for download
     * @type {number}
     * @memberof Batch
     */
    'forms': number;
    /**
     * The total of errors, warnings, and completed properties
     * @type {number}
     * @memberof Batch
     */
    'count': number;
    /**
     *
     * @type {OptionalLink}
     * @memberof Batch
     */
    'batch_shipments_url': OptionalLink;
    /**
     *
     * @type {OptionalLink}
     * @memberof Batch
     */
    'batch_labels_url': OptionalLink;
    /**
     *
     * @type {BatchBatchErrorsUrl}
     * @memberof Batch
     */
    'batch_errors_url': BatchBatchErrorsUrl;
    /**
     *
     * @type {BatchLabelDownload}
     * @memberof Batch
     */
    'label_download': BatchLabelDownload;
    /**
     *
     * @type {BatchFormDownload}
     * @memberof Batch
     */
    'form_download': BatchFormDownload;
    /**
     *
     * @type {BatchStatus}
     * @memberof Batch
     */
    'status': BatchStatus;
}
/**
 * Link to batch errors endpoint
 * @export
 * @interface BatchBatchErrorsUrl
 */
export interface BatchBatchErrorsUrl {
    /**
     * A URL
     * @type {string}
     * @memberof BatchBatchErrorsUrl
     */
    'href'?: string;
    /**
     * The type of resource, or the type of relationship to the parent resource
     * @type {string}
     * @memberof BatchBatchErrorsUrl
     */
    'type'?: string;
}
/**
 * The form download for any customs that are needed
 * @export
 * @interface BatchFormDownload
 */
export interface BatchFormDownload {
    /**
     * A URL
     * @type {string}
     * @memberof BatchFormDownload
     */
    'href'?: string;
    /**
     * The type of resource, or the type of relationship to the parent resource
     * @type {string}
     * @memberof BatchFormDownload
     */
    'type'?: string;
}
/**
 * The label download for the batch
 * @export
 * @interface BatchLabelDownload
 */
export interface BatchLabelDownload {
    /**
     * A URL
     * @type {string}
     * @memberof BatchLabelDownload
     */
    'href'?: string;
    /**
     * A URL
     * @type {string}
     * @memberof BatchLabelDownload
     */
    'pdf'?: string;
    /**
     * A URL
     * @type {string}
     * @memberof BatchLabelDownload
     */
    'png'?: string;
    /**
     * A URL
     * @type {string}
     * @memberof BatchLabelDownload
     */
    'zpl'?: string;
}
/**
 * A batch response error
 * @export
 * @interface BatchResponseError
 */
export interface BatchResponseError {
    /**
     * Error message associated with the shipment.
     * @type {string}
     * @memberof BatchResponseError
     */
    'error'?: string;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof BatchResponseError
     */
    'shipment_id'?: string;
    /**
     * An external shipment id associated with the shipment
     * @type {string}
     * @memberof BatchResponseError
     */
    'external_shipment_id'?: string;
}
/**
 * The possible batch status values
 * @export
 * @enum {string}
 */
export declare const BatchStatus: {
    readonly Open: "open";
    readonly Queued: "queued";
    readonly Processing: "processing";
    readonly Completed: "completed";
    readonly CompletedWithErrors: "completed_with_errors";
    readonly Archived: "archived";
    readonly Notifying: "notifying";
    readonly Invalid: "invalid";
};
export type BatchStatus = typeof BatchStatus[keyof typeof BatchStatus];
/**
 * The possible batches sort by values
 * @export
 * @enum {string}
 */
export declare const BatchesSortBy: {
    readonly ShipDate: "ship_date";
    readonly ProcessedAt: "processed_at";
    readonly CreatedAt: "created_at";
};
export type BatchesSortBy = typeof BatchesSortBy[keyof typeof BatchesSortBy];
/**
 * The possible bill to party values
 * @export
 * @enum {string}
 */
export declare const BillToParty: {
    readonly Recipient: "recipient";
    readonly ThirdParty: "third_party";
};
export type BillToParty = typeof BillToParty[keyof typeof BillToParty];
/**
 * A bulk rate
 * @export
 * @interface BulkRate
 */
export interface BulkRate {
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof BulkRate
     */
    'rate_request_id': string;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof BulkRate
     */
    'shipment_id': string;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date and time.
     * @type {string}
     * @memberof BulkRate
     */
    'created_at': string;
    /**
     *
     * @type {RateResponseStatus}
     * @memberof BulkRate
     */
    'status': RateResponseStatus;
    /**
     * An array of errors that were returned while retrieving the bulk rate
     * @type {Array<BulkRateErrorsInner>}
     * @memberof BulkRate
     */
    'errors': Array<BulkRateErrorsInner>;
}
/**
 * An error that occurred while retrieving the bulk rate
 * @export
 * @interface BulkRateErrorsInner
 */
export interface BulkRateErrorsInner {
    /**
     *
     * @type {ErrorSource}
     * @memberof BulkRateErrorsInner
     */
    'error_source': ErrorSource;
    /**
     *
     * @type {ErrorType}
     * @memberof BulkRateErrorsInner
     */
    'error_type': ErrorType;
    /**
     *
     * @type {ErrorCode}
     * @memberof BulkRateErrorsInner
     */
    'error_code': ErrorCode;
    /**
     * An error message associated with the failed API call
     * @type {string}
     * @memberof BulkRateErrorsInner
     */
    'message': string;
}
/**
 * @type CalculateRatesRequestBody
 * A rate shipment request body
 * @export
 */
export type CalculateRatesRequestBody = RateRequestOptions;
/**
 * A rate shipment response body
 * @export
 * @interface CalculateRatesResponseBody
 */
export interface CalculateRatesResponseBody {
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof CalculateRatesResponseBody
     */
    'shipment_id': string;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof CalculateRatesResponseBody
     */
    'carrier_id'?: string;
    /**
     * A [carrier service](https://www.shipengine.com/docs/shipping/use-a-carrier-service/), such as `fedex_ground`, `usps_first_class_mail`, `flat_rate_envelope`, etc.
     * @type {string}
     * @memberof CalculateRatesResponseBody
     */
    'service_code'?: string;
    /**
     * ID that the Order Source assigned
     * @type {string}
     * @memberof CalculateRatesResponseBody
     */
    'external_order_id'?: string | null;
    /**
     * Describe the packages included in this shipment as related to potential metadata that was imported from external order sources
     * @type {Array<ShipmentItem>}
     * @memberof CalculateRatesResponseBody
     */
    'items'?: Array<ShipmentItem>;
    /**
     *
     * @type {Array<TaxIdentifier>}
     * @memberof CalculateRatesResponseBody
     */
    'tax_identifiers'?: Array<TaxIdentifier> | null;
    /**
     * A unique user-defined key to identify a shipment.  This can be used to retrieve the shipment.  > **Warning:** The `external_shipment_id` is limited to 50 characters. Any additional characters will be truncated.
     * @type {string}
     * @memberof CalculateRatesResponseBody
     */
    'external_shipment_id'?: string | null;
    /**
     * A non-unique user-defined number used to identify a shipment.  If undefined, this will match the external_shipment_id of the shipment.  > **Warning:** The `shipment_number` is limited to 50 characters. Any additional characters will be truncated.
     * @type {string}
     * @memberof CalculateRatesResponseBody
     */
    'shipment_number'?: string | null;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date, but not a specific time.  The value _may_ contain a time component, but it will be set to `00:00:00` UTC by ShipEngine.
     * @type {string}
     * @memberof CalculateRatesResponseBody
     */
    'ship_date': string;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date and time.
     * @type {string}
     * @memberof CalculateRatesResponseBody
     */
    'created_at': string;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date and time.
     * @type {string}
     * @memberof CalculateRatesResponseBody
     */
    'modified_at': string;
    /**
     *
     * @type {ShipmentStatus}
     * @memberof CalculateRatesResponseBody
     */
    'shipment_status': ShipmentStatus;
    /**
     *
     * @type {ShippingAddress}
     * @memberof CalculateRatesResponseBody
     */
    'ship_to'?: ShippingAddress;
    /**
     *
     * @type {ShippingAddress}
     * @memberof CalculateRatesResponseBody
     */
    'ship_from'?: ShippingAddress;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof CalculateRatesResponseBody
     */
    'warehouse_id'?: string | null;
    /**
     *
     * @type {ShippingAddress}
     * @memberof CalculateRatesResponseBody
     */
    'return_to': ShippingAddress;
    /**
     * An optional indicator if the shipment is intended to be a return. Defaults to false if not provided.
     * @type {boolean}
     * @memberof CalculateRatesResponseBody
     */
    'is_return'?: boolean | null;
    /**
     *
     * @type {DeliveryConfirmation}
     * @memberof CalculateRatesResponseBody
     */
    'confirmation': DeliveryConfirmation;
    /**
     *
     * @type {PartialShipmentCustoms}
     * @memberof CalculateRatesResponseBody
     */
    'customs': PartialShipmentCustoms | null;
    /**
     *
     * @type {AdvancedShipmentOptions}
     * @memberof CalculateRatesResponseBody
     */
    'advanced_options': AdvancedShipmentOptions;
    /**
     *
     * @type {InsuranceProvider}
     * @memberof CalculateRatesResponseBody
     */
    'insurance_provider': InsuranceProvider;
    /**
     * Arbitrary tags associated with this shipment.  Tags can be used to categorize shipments, and shipments can be queried by their tags.
     * @type {Array<Tag>}
     * @memberof CalculateRatesResponseBody
     */
    'tags': Array<Tag>;
    /**
     *
     * @type {OrderSourceName}
     * @memberof CalculateRatesResponseBody
     */
    'order_source_code'?: OrderSourceName;
    /**
     * The packages in the shipment.  > **Note:** Some carriers only allow one package per shipment.  If you attempt to create a multi-package shipment for a carrier that doesn\'t allow it, an error will be returned.
     * @type {Array<Package>}
     * @memberof CalculateRatesResponseBody
     */
    'packages': Array<Package>;
    /**
     *
     * @type {PartialShipmentTotalWeight}
     * @memberof CalculateRatesResponseBody
     */
    'total_weight': PartialShipmentTotalWeight;
    /**
     *
     * @type {RatesInformation}
     * @memberof CalculateRatesResponseBody
     */
    'rate_response': RatesInformation;
}
/**
 * A carrier object that represents a provider such as UPS, USPS, DHL, etc that has been tied to the current account.
 * @export
 * @interface Carrier
 */
export interface Carrier {
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof Carrier
     */
    'carrier_id'?: string;
    /**
     * A [shipping carrier](https://www.shipengine.com/docs/carriers/setup/), such as `fedex`, `dhl_express`, `stamps_com`, etc.
     * @type {string}
     * @memberof Carrier
     */
    'carrier_code'?: string;
    /**
     * The account number that the carrier is connected to.
     * @type {string}
     * @memberof Carrier
     */
    'account_number'?: string;
    /**
     * Indicates whether the carrier requires funding to use its services
     * @type {boolean}
     * @memberof Carrier
     */
    'requires_funded_amount'?: boolean;
    /**
     * Current available balance
     * @type {number}
     * @memberof Carrier
     */
    'balance'?: number;
    /**
     * Nickname given to the account when initially setting up the carrier.
     * @type {string}
     * @memberof Carrier
     */
    'nickname'?: string;
    /**
     * Screen readable name
     * @type {string}
     * @memberof Carrier
     */
    'friendly_name'?: string;
    /**
     * Is this the primary carrier that is used by default when no carrier is specified in label/shipment creation
     * @type {boolean}
     * @memberof Carrier
     */
    'primary'?: boolean;
    /**
     * Carrier supports multiple packages per shipment
     * @type {boolean}
     * @memberof Carrier
     */
    'has_multi_package_supporting_services'?: boolean;
    /**
     * The carrier supports adding custom label messages to an order.
     * @type {boolean}
     * @memberof Carrier
     */
    'supports_label_messages'?: boolean;
    /**
     * The carrier is disabled by the current ShipEngine account\'s billing plan.
     * @type {boolean}
     * @memberof Carrier
     */
    'disabled_by_billing_plan'?: boolean;
    /**
     * A list of services that are offered by the carrier
     * @type {Array<Service>}
     * @memberof Carrier
     */
    'services'?: Array<Service>;
    /**
     * A list of package types that are supported by the carrier
     * @type {Array<PackageType>}
     * @memberof Carrier
     */
    'packages'?: Array<PackageType>;
    /**
     * A list of options that are available to that carrier
     * @type {Array<CarrierAdvancedOption>}
     * @memberof Carrier
     */
    'options'?: Array<CarrierAdvancedOption>;
}
/**
 * Advanced options that are specific to the carrier
 * @export
 * @interface CarrierAdvancedOption
 */
export interface CarrierAdvancedOption {
    /**
     * Name of advanced option
     * @type {string}
     * @memberof CarrierAdvancedOption
     */
    'name'?: string;
    /**
     * Default value of option
     * @type {string}
     * @memberof CarrierAdvancedOption
     */
    'default_value'?: string;
    /**
     * Description of option
     * @type {string}
     * @memberof CarrierAdvancedOption
     */
    'description'?: string;
}
/**
 * The shipping carriers that are supported by ShipEngine
 * @export
 * @enum {string}
 */
export declare const CarrierName: {
    readonly AccessWorldwide: "access_worldwide";
    readonly AmazonBuyShipping: "amazon_buy_shipping";
    readonly AmazonShippingUk: "amazon_shipping_uk";
    readonly Apc: "apc";
    readonly Asendia: "asendia";
    readonly AustraliaPost: "australia_post";
    readonly CanadaPost: "canada_post";
    readonly DhlEcommerce: "dhl_ecommerce";
    readonly DhlExpress: "dhl_express";
    readonly DhlExpressAu: "dhl_express_au";
    readonly DhlExpressCa: "dhl_express_ca";
    readonly DhlExpressUk: "dhl_express_uk";
    readonly Dpd: "dpd";
    readonly Endicia: "endicia";
    readonly Fedex: "fedex";
    readonly FedexUk: "fedex_uk";
    readonly Firstmile: "firstmile";
    readonly Imex: "imex";
    readonly Newgistics: "newgistics";
    readonly Ontrac: "ontrac";
    readonly PurolatorCanada: "purolator_canada";
    readonly RoyalMail: "royal_mail";
    readonly RrDonnelley: "rr_donnelley";
    readonly Seko: "seko";
    readonly Sendle: "sendle";
    readonly StampsCom: "stamps_com";
    readonly Ups: "ups";
};
export type CarrierName = typeof CarrierName[keyof typeof CarrierName];
/**
 * The shipping carriers for which ShipEngine supports carrier settings
 * @export
 * @enum {string}
 */
export declare const CarrierNameWithSettings: {
    readonly DhlExpress: "dhl_express";
    readonly Fedex: "fedex";
    readonly Newgistics: "newgistics";
    readonly Ups: "ups";
};
export type CarrierNameWithSettings = typeof CarrierNameWithSettings[keyof typeof CarrierNameWithSettings];
/**
 * Defer payment until package is delivered, instead of when it is ordered.
 * @export
 * @interface CollectOnDelivery
 */
export interface CollectOnDelivery {
    /**
     *
     * @type {CollectOnDeliveryPaymentType}
     * @memberof CollectOnDelivery
     */
    'payment_type'?: CollectOnDeliveryPaymentType;
    /**
     *
     * @type {PaymentAmount}
     * @memberof CollectOnDelivery
     */
    'payment_amount'?: PaymentAmount;
}
/**
 * Types of payment that are supported
 * @export
 * @enum {string}
 */
export declare const CollectOnDeliveryPaymentType: {
    readonly Any: "any";
    readonly Cash: "cash";
    readonly CashEquivalent: "cash_equivalent";
    readonly None: "none";
};
export type CollectOnDeliveryPaymentType = typeof CollectOnDeliveryPaymentType[keyof typeof CollectOnDeliveryPaymentType];
/**
 * @type CompareBulkRatesRequestBody
 * A rate shipments request body
 * @export
 */
export type CompareBulkRatesRequestBody = RateRequestRateOptions;
/**
 * An Access Worldwide account information request body
 * @export
 * @interface ConnectAccessWorldwideRequestBody
 */
export interface ConnectAccessWorldwideRequestBody {
    /**
     * The nickname associated with the carrier connection
     * @type {string}
     * @memberof ConnectAccessWorldwideRequestBody
     */
    'nickname': string;
    /**
     * Access Worldwide Username
     * @type {string}
     * @memberof ConnectAccessWorldwideRequestBody
     */
    'username': string;
    /**
     * Access Worldwide Password
     * @type {string}
     * @memberof ConnectAccessWorldwideRequestBody
     */
    'password': string;
}
/**
 * An Amazon account information request body
 * @export
 * @interface ConnectAmazonBuyShippingRequestBody
 */
export interface ConnectAmazonBuyShippingRequestBody {
    /**
     * Nickname to be associated with the account connection
     * @type {string}
     * @memberof ConnectAmazonBuyShippingRequestBody
     */
    'nickname': string;
    /**
     *
     * @type {string}
     * @memberof ConnectAmazonBuyShippingRequestBody
     */
    'merchant_seller_id': string;
    /**
     *
     * @type {string}
     * @memberof ConnectAmazonBuyShippingRequestBody
     */
    'mws_auth_token': string;
    /**
     * An email address.
     * @type {string}
     * @memberof ConnectAmazonBuyShippingRequestBody
     */
    'email': string;
}
/**
 * An Amazon Shipping UK account information request body
 * @export
 * @interface ConnectAmazonShippingUk
 */
export interface ConnectAmazonShippingUk {
    /**
     * The nickname associated with the carrier connection
     * @type {string}
     * @memberof ConnectAmazonShippingUk
     */
    'nickname': string;
    /**
     * Amazon UK Shipping auth code.
     * @type {string}
     * @memberof ConnectAmazonShippingUk
     */
    'auth_code': string;
}
/**
 * An APC account information request body
 * @export
 * @interface ConnectApcRequestBody
 */
export interface ConnectApcRequestBody {
    /**
     * The nickname for the APC account
     * @type {string}
     * @memberof ConnectApcRequestBody
     */
    'nickname': string;
    /**
     * The username for the APC account
     * @type {string}
     * @memberof ConnectApcRequestBody
     */
    'username': string;
    /**
     * The password for the APC account
     * @type {string}
     * @memberof ConnectApcRequestBody
     */
    'password': string;
}
/**
 * An Asendia account information request body
 * @export
 * @interface ConnectAsendiaRequestBody
 */
export interface ConnectAsendiaRequestBody {
    /**
     * The nickname of the Asendia account
     * @type {string}
     * @memberof ConnectAsendiaRequestBody
     */
    'nickname': string;
    /**
     * Asendia account number
     * @type {string}
     * @memberof ConnectAsendiaRequestBody
     */
    'account_number': string;
    /**
     * FTP username
     * @type {string}
     * @memberof ConnectAsendiaRequestBody
     */
    'ftp_username': string;
    /**
     * FTP password
     * @type {string}
     * @memberof ConnectAsendiaRequestBody
     */
    'ftp_password': string;
}
/**
 * An Australia Post account information request body
 * @export
 * @interface ConnectAustraliaPostRequestBody
 */
export interface ConnectAustraliaPostRequestBody {
    /**
     * Account number
     * @type {string}
     * @memberof ConnectAustraliaPostRequestBody
     */
    'account_number': string;
    /**
     * API key
     * @type {string}
     * @memberof ConnectAustraliaPostRequestBody
     */
    'api_key': string;
    /**
     * API secret
     * @type {string}
     * @memberof ConnectAustraliaPostRequestBody
     */
    'api_secret': string;
    /**
     * Nickname
     * @type {string}
     * @memberof ConnectAustraliaPostRequestBody
     */
    'nickname': string;
}
/**
 * A Canada Post account information request body
 * @export
 * @interface ConnectCanadaPostRequestBody
 */
export interface ConnectCanadaPostRequestBody {
    /**
     * Nickname
     * @type {string}
     * @memberof ConnectCanadaPostRequestBody
     */
    'nickname': string;
    /**
     * Canada Post Account API Key
     * @type {string}
     * @memberof ConnectCanadaPostRequestBody
     */
    'api_key': string;
    /**
     * Canada Post Account API Secret
     * @type {string}
     * @memberof ConnectCanadaPostRequestBody
     */
    'api_secret': string;
    /**
     * Canada Post Account Number
     * @type {string}
     * @memberof ConnectCanadaPostRequestBody
     */
    'account_number': string;
    /**
     * Canada Post Account Contract ID
     * @type {string}
     * @memberof ConnectCanadaPostRequestBody
     */
    'contract_id': string;
}
/**
 * @type ConnectCarrierRequestBody
 * @export
 */
export type ConnectCarrierRequestBody = ConnectAccessWorldwideRequestBody | ConnectAmazonBuyShippingRequestBody | ConnectAmazonShippingUk | ConnectApcRequestBody | ConnectAsendiaRequestBody | ConnectAustraliaPostRequestBody | ConnectCanadaPostRequestBody | ConnectDhlEcommerceRequestBody | ConnectDhlExpressAuRequestBody | ConnectDhlExpressCaRequestBody | ConnectDhlExpressRequestBody | ConnectDhlExpressUkRequestBody | ConnectDpdRequestBody | ConnectEndiciaRequestBody | ConnectFedexRequestBody | ConnectFedexUkRequestBody | ConnectFirstmileRequestBody | ConnectImexRequestBody | ConnectNewgisticsRequestBody | ConnectOntracRequestBody | ConnectPurolatorRequestBody | ConnectRoyalMailRequestBody | ConnectRrDonnelleyRequestBody | ConnectSekoRequestBody | ConnectSendleRequestBody | ConnectStampsRequestBody | ConnectUpsRequestBody;
/**
 * A connect account response body
 * @export
 * @interface ConnectCarrierResponseBody
 */
export interface ConnectCarrierResponseBody {
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof ConnectCarrierResponseBody
     */
    'carrier_id': string;
}
/**
 * A DHL Ecommerce account information request body
 * @export
 * @interface ConnectDhlEcommerceRequestBody
 */
export interface ConnectDhlEcommerceRequestBody {
    /**
     * A nickname to help you identify this account
     * @type {string}
     * @memberof ConnectDhlEcommerceRequestBody
     */
    'nickname': string;
    /**
     * The client id
     * @type {string}
     * @memberof ConnectDhlEcommerceRequestBody
     */
    'client_id': string;
    /**
     * The account username
     * @type {string}
     * @memberof ConnectDhlEcommerceRequestBody
     */
    'username': string;
    /**
     * The account password
     * @type {string}
     * @memberof ConnectDhlEcommerceRequestBody
     */
    'password': string;
    /**
     * The pickup number
     * @type {string}
     * @memberof ConnectDhlEcommerceRequestBody
     */
    'pickup_number': string;
    /**
     * The distribution center
     * @type {string}
     * @memberof ConnectDhlEcommerceRequestBody
     */
    'distribution_center': string;
    /**
     * The DHL E-Commerce API key. This field is optional, but if not set you will not be able to get rates for this account.
     * @type {string}
     * @memberof ConnectDhlEcommerceRequestBody
     */
    'api_key'?: string;
    /**
     * The DHL E-Commerce API secret. This field is optional, but if not set you will not be able to get rates for this account.
     * @type {string}
     * @memberof ConnectDhlEcommerceRequestBody
     */
    'api_secret'?: string;
    /**
     *
     * @type {AncillaryServiceEndorsement}
     * @memberof ConnectDhlEcommerceRequestBody
     */
    'ancillary_endorsement'?: AncillaryServiceEndorsement;
    /**
     * Account number
     * @type {string}
     * @memberof ConnectDhlEcommerceRequestBody
     * @deprecated
     */
    'account_number'?: string;
    /**
     * FTP username
     * @type {string}
     * @memberof ConnectDhlEcommerceRequestBody
     * @deprecated
     */
    'ftp_username'?: string;
    /**
     * FTP password
     * @type {string}
     * @memberof ConnectDhlEcommerceRequestBody
     * @deprecated
     */
    'ftp_password'?: string;
    /**
     * Sold To field
     * @type {string}
     * @memberof ConnectDhlEcommerceRequestBody
     */
    'sold_to'?: string;
    /**
     *
     * @type {string}
     * @memberof ConnectDhlEcommerceRequestBody
     */
    'registration_id'?: string;
    /**
     *
     * @type {string}
     * @memberof ConnectDhlEcommerceRequestBody
     */
    'software_name'?: string;
}
/**
 * A DHL Express AU account information request body
 * @export
 * @interface ConnectDhlExpressAuRequestBody
 */
export interface ConnectDhlExpressAuRequestBody {
    /**
     * Nickname
     * @type {string}
     * @memberof ConnectDhlExpressAuRequestBody
     */
    'nickname': string;
    /**
     * Account number
     * @type {string}
     * @memberof ConnectDhlExpressAuRequestBody
     */
    'account_number': string;
}
/**
 * A DHL Express CA account information request body
 * @export
 * @interface ConnectDhlExpressCaRequestBody
 */
export interface ConnectDhlExpressCaRequestBody {
    /**
     * Nickname
     * @type {string}
     * @memberof ConnectDhlExpressCaRequestBody
     */
    'nickname': string;
    /**
     * Account number
     * @type {string}
     * @memberof ConnectDhlExpressCaRequestBody
     */
    'account_number': string;
}
/**
 * A DHL express account information request body
 * @export
 * @interface ConnectDhlExpressRequestBody
 */
export interface ConnectDhlExpressRequestBody {
    /**
     * Nickname
     * @type {string}
     * @memberof ConnectDhlExpressRequestBody
     */
    'nickname': string;
    /**
     * Account number
     * @type {string}
     * @memberof ConnectDhlExpressRequestBody
     */
    'account_number': string;
    /**
     * Required if password is provided
     * @type {string}
     * @memberof ConnectDhlExpressRequestBody
     */
    'site_id'?: string;
    /**
     * Required if site id is provided
     * @type {string}
     * @memberof ConnectDhlExpressRequestBody
     */
    'password'?: string;
    /**
     * A two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1)
     * @type {string}
     * @memberof ConnectDhlExpressRequestBody
     */
    'country_code'?: string;
}
/**
 * A DHL Express UK account information request body
 * @export
 * @interface ConnectDhlExpressUkRequestBody
 */
export interface ConnectDhlExpressUkRequestBody {
    /**
     * Account number
     * @type {string}
     * @memberof ConnectDhlExpressUkRequestBody
     */
    'account_number': string;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof ConnectDhlExpressUkRequestBody
     */
    'site_id': string;
    /**
     * Password
     * @type {string}
     * @memberof ConnectDhlExpressUkRequestBody
     */
    'password': string;
    /**
     * Nickname
     * @type {string}
     * @memberof ConnectDhlExpressUkRequestBody
     */
    'nickname': string;
}
/**
 * A DPD account information request body
 * @export
 * @interface ConnectDpdRequestBody
 */
export interface ConnectDpdRequestBody {
    /**
     * Account number
     * @type {string}
     * @memberof ConnectDpdRequestBody
     */
    'account_number': string;
    /**
     * Password
     * @type {string}
     * @memberof ConnectDpdRequestBody
     */
    'password': string;
    /**
     * Nickname
     * @type {string}
     * @memberof ConnectDpdRequestBody
     */
    'nickname': string;
}
/**
 * An Endicia account information request body
 * @export
 * @interface ConnectEndiciaRequestBody
 */
export interface ConnectEndiciaRequestBody {
    /**
     * Nickname
     * @type {string}
     * @memberof ConnectEndiciaRequestBody
     */
    'nickname': string;
    /**
     * Account
     * @type {string}
     * @memberof ConnectEndiciaRequestBody
     */
    'account': string;
    /**
     * Passphrase
     * @type {string}
     * @memberof ConnectEndiciaRequestBody
     */
    'passphrase': string;
}
/**
 * A Fedex account information request body
 * @export
 * @interface ConnectFedexRequestBody
 */
export interface ConnectFedexRequestBody {
    /**
     * Account number
     * @type {string}
     * @memberof ConnectFedexRequestBody
     */
    'account_number': string;
    /**
     * Address
     * @type {string}
     * @memberof ConnectFedexRequestBody
     */
    'address1': string;
    /**
     * Address
     * @type {string}
     * @memberof ConnectFedexRequestBody
     */
    'address2'?: string;
    /**
     * The city
     * @type {string}
     * @memberof ConnectFedexRequestBody
     */
    'city': string;
    /**
     * The company
     * @type {string}
     * @memberof ConnectFedexRequestBody
     */
    'company'?: string;
    /**
     * Country code
     * @type {string}
     * @memberof ConnectFedexRequestBody
     */
    'country_code': string;
    /**
     * An email address.
     * @type {string}
     * @memberof ConnectFedexRequestBody
     */
    'email': string;
    /**
     * First name
     * @type {string}
     * @memberof ConnectFedexRequestBody
     */
    'first_name': string;
    /**
     * Last name
     * @type {string}
     * @memberof ConnectFedexRequestBody
     */
    'last_name': string;
    /**
     * Phone number
     * @type {string}
     * @memberof ConnectFedexRequestBody
     */
    'phone': string;
    /**
     * Postal Code
     * @type {string}
     * @memberof ConnectFedexRequestBody
     */
    'postal_code': string;
    /**
     * State
     * @type {string}
     * @memberof ConnectFedexRequestBody
     */
    'state': string;
    /**
     * Nickname
     * @type {string}
     * @memberof ConnectFedexRequestBody
     */
    'nickname': string;
    /**
     * Boolean signaling agreement to the Fedex End User License Agreement
     * @type {boolean}
     * @memberof ConnectFedexRequestBody
     */
    'agree_to_eula': boolean;
    /**
     * Meter number
     * @type {string}
     * @memberof ConnectFedexRequestBody
     */
    'meter_number'?: string;
}
/**
 * A Fedex UK account information request body
 * @export
 * @interface ConnectFedexUkRequestBody
 */
export interface ConnectFedexUkRequestBody {
    /**
     * Account number
     * @type {string}
     * @memberof ConnectFedexUkRequestBody
     */
    'account_number': string;
    /**
     * Address
     * @type {string}
     * @memberof ConnectFedexUkRequestBody
     */
    'address1': string;
    /**
     * Address
     * @type {string}
     * @memberof ConnectFedexUkRequestBody
     */
    'address2'?: string;
    /**
     * The city
     * @type {string}
     * @memberof ConnectFedexUkRequestBody
     */
    'city': string;
    /**
     * The company
     * @type {string}
     * @memberof ConnectFedexUkRequestBody
     */
    'company'?: string;
    /**
     * Country code
     * @type {string}
     * @memberof ConnectFedexUkRequestBody
     */
    'country_code': string;
    /**
     * An email address.
     * @type {string}
     * @memberof ConnectFedexUkRequestBody
     */
    'email': string;
    /**
     * First name
     * @type {string}
     * @memberof ConnectFedexUkRequestBody
     */
    'first_name': string;
    /**
     * Last name
     * @type {string}
     * @memberof ConnectFedexUkRequestBody
     */
    'last_name': string;
    /**
     * Phone number
     * @type {string}
     * @memberof ConnectFedexUkRequestBody
     */
    'phone': string;
    /**
     * Postal Code
     * @type {string}
     * @memberof ConnectFedexUkRequestBody
     */
    'postal_code': string;
    /**
     * State
     * @type {string}
     * @memberof ConnectFedexUkRequestBody
     */
    'state': string;
    /**
     * Nickname
     * @type {string}
     * @memberof ConnectFedexUkRequestBody
     */
    'nickname': string;
    /**
     * Boolean signaling agreement to the Fedex End User License Agreement
     * @type {boolean}
     * @memberof ConnectFedexUkRequestBody
     */
    'agree_to_eula': boolean;
    /**
     * Meter number
     * @type {string}
     * @memberof ConnectFedexUkRequestBody
     */
    'meter_number'?: string;
}
/**
 * A First Mile account information request body
 * @export
 * @interface ConnectFirstmileRequestBody
 */
export interface ConnectFirstmileRequestBody {
    /**
     * Nickname
     * @type {string}
     * @memberof ConnectFirstmileRequestBody
     */
    'nickname': string;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof ConnectFirstmileRequestBody
     */
    'mailer_id': string;
    /**
     * Profile name
     * @type {string}
     * @memberof ConnectFirstmileRequestBody
     */
    'profile_name'?: string;
    /**
     * Password
     * @type {string}
     * @memberof ConnectFirstmileRequestBody
     */
    'password': string;
}
/**
 * An Imex account information request body
 * @export
 * @interface ConnectImexRequestBody
 */
export interface ConnectImexRequestBody {
    /**
     * Nickname
     * @type {string}
     * @memberof ConnectImexRequestBody
     */
    'nickname': string;
    /**
     * Username
     * @type {string}
     * @memberof ConnectImexRequestBody
     */
    'username': string;
    /**
     * Password
     * @type {string}
     * @memberof ConnectImexRequestBody
     */
    'password': string;
}
/**
 * A create shipsurance connection request body
 * @export
 * @interface ConnectInsurerRequestBody
 */
export interface ConnectInsurerRequestBody {
    /**
     * An email address.
     * @type {string}
     * @memberof ConnectInsurerRequestBody
     */
    'email': string;
    /**
     *
     * @type {string}
     * @memberof ConnectInsurerRequestBody
     */
    'policy_id': string;
}
/**
 * A Newgistics account information request body
 * @export
 * @interface ConnectNewgisticsRequestBody
 */
export interface ConnectNewgisticsRequestBody {
    /**
     * Merchant id
     * @type {number}
     * @memberof ConnectNewgisticsRequestBody
     */
    'merchant_id'?: number;
    /**
     * Mailer id
     * @type {number}
     * @memberof ConnectNewgisticsRequestBody
     */
    'mailer_id'?: number;
    /**
     * Induction site
     * @type {string}
     * @memberof ConnectNewgisticsRequestBody
     */
    'induction_site': string;
    /**
     * Nickname
     * @type {string}
     * @memberof ConnectNewgisticsRequestBody
     */
    'nickname': string;
}
/**
 * An Ontrac account information request body
 * @export
 * @interface ConnectOntracRequestBody
 */
export interface ConnectOntracRequestBody {
    /**
     * Nickname
     * @type {string}
     * @memberof ConnectOntracRequestBody
     */
    'nickname': string;
    /**
     * Account number
     * @type {string}
     * @memberof ConnectOntracRequestBody
     */
    'account_number': string;
    /**
     * Password
     * @type {string}
     * @memberof ConnectOntracRequestBody
     */
    'password': string;
}
/**
 * A Purolator account information request body
 * @export
 * @interface ConnectPurolatorRequestBody
 */
export interface ConnectPurolatorRequestBody {
    /**
     * Account number
     * @type {string}
     * @memberof ConnectPurolatorRequestBody
     */
    'account_number': string;
    /**
     * Activation key
     * @type {string}
     * @memberof ConnectPurolatorRequestBody
     */
    'activation_key': string;
    /**
     * Nickname
     * @type {string}
     * @memberof ConnectPurolatorRequestBody
     */
    'nickname': string;
}
/**
 * A Royal Mail account information request body
 * @export
 * @interface ConnectRoyalMailRequestBody
 */
export interface ConnectRoyalMailRequestBody {
    /**
     * Account number
     * @type {string}
     * @memberof ConnectRoyalMailRequestBody
     */
    'account_number': string;
    /**
     * An email address.
     * @type {string}
     * @memberof ConnectRoyalMailRequestBody
     */
    'oba_email'?: string;
    /**
     * Contact name
     * @type {string}
     * @memberof ConnectRoyalMailRequestBody
     */
    'contact_name': string;
    /**
     * An email address.
     * @type {string}
     * @memberof ConnectRoyalMailRequestBody
     */
    'email'?: string;
    /**
     * Company name
     * @type {string}
     * @memberof ConnectRoyalMailRequestBody
     */
    'company_name'?: string;
    /**
     * Street line1
     * @type {string}
     * @memberof ConnectRoyalMailRequestBody
     */
    'street_line1'?: string;
    /**
     * Street line2
     * @type {string}
     * @memberof ConnectRoyalMailRequestBody
     */
    'street_line2'?: string;
    /**
     * Street line3
     * @type {string}
     * @memberof ConnectRoyalMailRequestBody
     */
    'street_line3'?: string;
    /**
     * City
     * @type {string}
     * @memberof ConnectRoyalMailRequestBody
     */
    'city': string;
    /**
     * Postal code
     * @type {string}
     * @memberof ConnectRoyalMailRequestBody
     */
    'postal_code': string;
    /**
     * Phone
     * @type {string}
     * @memberof ConnectRoyalMailRequestBody
     */
    'phone'?: string;
    /**
     * Nickname
     * @type {string}
     * @memberof ConnectRoyalMailRequestBody
     */
    'nickname': string;
}
/**
 * A RR Donnelley account information request body
 * @export
 * @interface ConnectRrDonnelleyRequestBody
 */
export interface ConnectRrDonnelleyRequestBody {
    /**
     * Nickname
     * @type {string}
     * @memberof ConnectRrDonnelleyRequestBody
     */
    'nickname': string;
    /**
     * Username
     * @type {string}
     * @memberof ConnectRrDonnelleyRequestBody
     */
    'username': string;
    /**
     * Password
     * @type {string}
     * @memberof ConnectRrDonnelleyRequestBody
     */
    'password': string;
}
/**
 * A SEKO account information request body
 * @export
 * @interface ConnectSekoRequestBody
 */
export interface ConnectSekoRequestBody {
    /**
     * Nickname
     * @type {string}
     * @memberof ConnectSekoRequestBody
     */
    'nickname': string;
    /**
     * Seko Account Access Key
     * @type {string}
     * @memberof ConnectSekoRequestBody
     */
    'access_key': string;
}
/**
 * A Sendle account information request body
 * @export
 * @interface ConnectSendleRequestBody
 */
export interface ConnectSendleRequestBody {
    /**
     * Nickname
     * @type {string}
     * @memberof ConnectSendleRequestBody
     */
    'nickname': string;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof ConnectSendleRequestBody
     */
    'sendle_id': string;
    /**
     * API key
     * @type {string}
     * @memberof ConnectSendleRequestBody
     */
    'api_key': string;
}
/**
 * A Stamps account information request body
 * @export
 * @interface ConnectStampsRequestBody
 */
export interface ConnectStampsRequestBody {
    /**
     * Nickname
     * @type {string}
     * @memberof ConnectStampsRequestBody
     */
    'nickname': string;
    /**
     * Username
     * @type {string}
     * @memberof ConnectStampsRequestBody
     */
    'username': string;
    /**
     * Password
     * @type {string}
     * @memberof ConnectStampsRequestBody
     */
    'password': string;
}
/**
 * A UPS account information request body
 * @export
 * @interface ConnectUpsRequestBody
 */
export interface ConnectUpsRequestBody {
    /**
     * Nickname
     * @type {string}
     * @memberof ConnectUpsRequestBody
     */
    'nickname': string;
    /**
     * Account number
     * @type {string}
     * @memberof ConnectUpsRequestBody
     */
    'account_number': string;
    /**
     * Account country code
     * @type {string}
     * @memberof ConnectUpsRequestBody
     */
    'account_country_code': string;
    /**
     * Account postal code
     * @type {string}
     * @memberof ConnectUpsRequestBody
     */
    'account_postal_code': string;
    /**
     * Title
     * @type {string}
     * @memberof ConnectUpsRequestBody
     */
    'title'?: string;
    /**
     * First name
     * @type {string}
     * @memberof ConnectUpsRequestBody
     */
    'first_name': string;
    /**
     * Last name
     * @type {string}
     * @memberof ConnectUpsRequestBody
     */
    'last_name': string;
    /**
     * Company
     * @type {string}
     * @memberof ConnectUpsRequestBody
     */
    'company': string;
    /**
     * Address Line 1
     * @type {string}
     * @memberof ConnectUpsRequestBody
     */
    'address1': string;
    /**
     * Address Line 2
     * @type {string}
     * @memberof ConnectUpsRequestBody
     */
    'address2'?: string;
    /**
     * City
     * @type {string}
     * @memberof ConnectUpsRequestBody
     */
    'city': string;
    /**
     * State
     * @type {string}
     * @memberof ConnectUpsRequestBody
     */
    'state': string;
    /**
     * Postal code
     * @type {string}
     * @memberof ConnectUpsRequestBody
     */
    'postal_code': string;
    /**
     * Country code
     * @type {string}
     * @memberof ConnectUpsRequestBody
     */
    'country_code': string;
    /**
     * An email address.
     * @type {string}
     * @memberof ConnectUpsRequestBody
     */
    'email': string;
    /**
     * Phone
     * @type {string}
     * @memberof ConnectUpsRequestBody
     */
    'phone': string;
    /**
     *
     * @type {UpsInvoice}
     * @memberof ConnectUpsRequestBody
     */
    'invoice'?: UpsInvoice;
    /**
     * The invoice amount
     * @type {number}
     * @memberof ConnectUpsRequestBody
     */
    'invoice_amount'?: number;
    /**
     * The invoice currency code
     * @type {string}
     * @memberof ConnectUpsRequestBody
     */
    'invoice_currency_code'?: string;
    /**
     * The Agreement to the [UPS Technology Agreement](https://www.ups.com/assets/resources/media/UTA_with_EUR.pdf)
     * @type {boolean}
     * @memberof ConnectUpsRequestBody
     */
    'agree_to_technology_agreement': boolean;
}
/**
 *
 * @export
 * @interface ContactDetails
 */
export interface ContactDetails {
    /**
     *
     * @type {string}
     * @memberof ContactDetails
     */
    'name': string;
    /**
     * An email address.
     * @type {string}
     * @memberof ContactDetails
     */
    'email': string;
    /**
     * Phone number associated
     * @type {string}
     * @memberof ContactDetails
     */
    'phone': string;
}
/**
 * A ShipEngine account settings images request body
 * @export
 * @interface CreateAccountSettingsImageRequestBody
 */
export interface CreateAccountSettingsImageRequestBody {
    /**
     * Used to identify an image resource.
     * @type {string}
     * @memberof CreateAccountSettingsImageRequestBody
     */
    'label_image_id'?: string;
    /**
     * A human readable name for the image.
     * @type {string}
     * @memberof CreateAccountSettingsImageRequestBody
     */
    'name': string;
    /**
     * Indicates whether this image is set as default.
     * @type {boolean}
     * @memberof CreateAccountSettingsImageRequestBody
     */
    'is_default'?: boolean;
    /**
     * The image type
     * @type {string}
     * @memberof CreateAccountSettingsImageRequestBody
     */
    'image_content_type': CreateAccountSettingsImageRequestBodyImageContentTypeEnum;
    /**
     * A base64 encoded string representation of the image.
     * @type {string}
     * @memberof CreateAccountSettingsImageRequestBody
     */
    'image_data': string;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date and time.
     * @type {string}
     * @memberof CreateAccountSettingsImageRequestBody
     */
    'created_at'?: string;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date and time.
     * @type {string}
     * @memberof CreateAccountSettingsImageRequestBody
     */
    'modified_at'?: string;
}
export declare const CreateAccountSettingsImageRequestBodyImageContentTypeEnum: {
    readonly Png: "image/png";
    readonly Jpeg: "image/jpeg";
};
export type CreateAccountSettingsImageRequestBodyImageContentTypeEnum = typeof CreateAccountSettingsImageRequestBodyImageContentTypeEnum[keyof typeof CreateAccountSettingsImageRequestBodyImageContentTypeEnum];
/**
 * A create and validate shipment resource
 * @export
 * @interface CreateAndValidateShipment
 */
export interface CreateAndValidateShipment {
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof CreateAndValidateShipment
     */
    'shipment_id'?: string;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof CreateAndValidateShipment
     */
    'carrier_id'?: string;
    /**
     * A [carrier service](https://www.shipengine.com/docs/shipping/use-a-carrier-service/), such as `fedex_ground`, `usps_first_class_mail`, `flat_rate_envelope`, etc.
     * @type {string}
     * @memberof CreateAndValidateShipment
     */
    'service_code'?: string;
    /**
     * ID that the Order Source assigned
     * @type {string}
     * @memberof CreateAndValidateShipment
     */
    'external_order_id'?: string | null;
    /**
     * Describe the packages included in this shipment as related to potential metadata that was imported from external order sources
     * @type {Array<ShipmentItem>}
     * @memberof CreateAndValidateShipment
     */
    'items'?: Array<ShipmentItem>;
    /**
     *
     * @type {Array<TaxIdentifier>}
     * @memberof CreateAndValidateShipment
     */
    'tax_identifiers'?: Array<TaxIdentifier> | null;
    /**
     * A unique user-defined key to identify a shipment.  This can be used to retrieve the shipment.  > **Warning:** The `external_shipment_id` is limited to 50 characters. Any additional characters will be truncated.
     * @type {string}
     * @memberof CreateAndValidateShipment
     */
    'external_shipment_id'?: string | null;
    /**
     * A non-unique user-defined number used to identify a shipment.  If undefined, this will match the external_shipment_id of the shipment.  > **Warning:** The `shipment_number` is limited to 50 characters. Any additional characters will be truncated.
     * @type {string}
     * @memberof CreateAndValidateShipment
     */
    'shipment_number'?: string | null;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date, but not a specific time.  The value _may_ contain a time component, but it will be set to `00:00:00` UTC by ShipEngine.
     * @type {string}
     * @memberof CreateAndValidateShipment
     */
    'ship_date'?: string;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date and time.
     * @type {string}
     * @memberof CreateAndValidateShipment
     */
    'created_at'?: string;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date and time.
     * @type {string}
     * @memberof CreateAndValidateShipment
     */
    'modified_at'?: string;
    /**
     *
     * @type {ShipmentStatus}
     * @memberof CreateAndValidateShipment
     */
    'shipment_status'?: ShipmentStatus;
    /**
     *
     * @type {ShippingAddress}
     * @memberof CreateAndValidateShipment
     */
    'ship_to'?: ShippingAddress;
    /**
     *
     * @type {ShippingAddress}
     * @memberof CreateAndValidateShipment
     */
    'ship_from'?: ShippingAddress;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof CreateAndValidateShipment
     */
    'warehouse_id'?: string | null;
    /**
     *
     * @type {ShippingAddress}
     * @memberof CreateAndValidateShipment
     */
    'return_to'?: ShippingAddress;
    /**
     * An optional indicator if the shipment is intended to be a return. Defaults to false if not provided.
     * @type {boolean}
     * @memberof CreateAndValidateShipment
     */
    'is_return'?: boolean | null;
    /**
     *
     * @type {DeliveryConfirmation}
     * @memberof CreateAndValidateShipment
     */
    'confirmation'?: DeliveryConfirmation;
    /**
     *
     * @type {PartialShipmentCustoms}
     * @memberof CreateAndValidateShipment
     */
    'customs'?: PartialShipmentCustoms | null;
    /**
     *
     * @type {AdvancedShipmentOptions}
     * @memberof CreateAndValidateShipment
     */
    'advanced_options'?: AdvancedShipmentOptions;
    /**
     *
     * @type {InsuranceProvider}
     * @memberof CreateAndValidateShipment
     */
    'insurance_provider'?: InsuranceProvider;
    /**
     * Arbitrary tags associated with this shipment.  Tags can be used to categorize shipments, and shipments can be queried by their tags.
     * @type {Array<Tag>}
     * @memberof CreateAndValidateShipment
     */
    'tags'?: Array<Tag>;
    /**
     *
     * @type {OrderSourceName}
     * @memberof CreateAndValidateShipment
     */
    'order_source_code'?: OrderSourceName;
    /**
     * The packages in the shipment.  > **Note:** Some carriers only allow one package per shipment.  If you attempt to create a multi-package shipment for a carrier that doesn\'t allow it, an error will be returned.
     * @type {Array<Package>}
     * @memberof CreateAndValidateShipment
     */
    'packages'?: Array<Package>;
    /**
     *
     * @type {PartialShipmentTotalWeight}
     * @memberof CreateAndValidateShipment
     */
    'total_weight'?: PartialShipmentTotalWeight;
    /**
     * An array of errors that occurred while creating shipment.
     * @type {Array<string>}
     * @memberof CreateAndValidateShipment
     * @deprecated
     */
    'errors'?: Array<string>;
    /**
     *
     * @type {AddressValidationResult}
     * @memberof CreateAndValidateShipment
     */
    'address_validation'?: AddressValidationResult;
}
/**
 * A create batch request body
 * @export
 * @interface CreateBatchRequestBody
 */
export interface CreateBatchRequestBody {
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof CreateBatchRequestBody
     */
    'external_batch_id'?: string;
    /**
     * Add custom messages for a particular batch
     * @type {string}
     * @memberof CreateBatchRequestBody
     */
    'batch_notes'?: string;
    /**
     * Array of shipment IDs used in the batch
     * @type {Array<string>}
     * @memberof CreateBatchRequestBody
     */
    'shipment_ids'?: Array<string>;
    /**
     * Array of rate IDs used in the batch
     * @type {Array<string>}
     * @memberof CreateBatchRequestBody
     */
    'rate_ids'?: Array<string>;
}
/**
 * A create batch response body
 * @export
 * @interface CreateBatchResponseBody
 */
export interface CreateBatchResponseBody {
    /**
     *
     * @type {LabelLayout}
     * @memberof CreateBatchResponseBody
     */
    'label_layout': LabelLayout;
    /**
     *
     * @type {LabelFormat}
     * @memberof CreateBatchResponseBody
     */
    'label_format': LabelFormat;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof CreateBatchResponseBody
     */
    'batch_id': string;
    /**
     * The batch number.
     * @type {string}
     * @memberof CreateBatchResponseBody
     */
    'batch_number': string;
    /**
     * A string that uniquely identifies the external batch
     * @type {string}
     * @memberof CreateBatchResponseBody
     */
    'external_batch_id': string | null;
    /**
     * Custom notes you can add for each created batch
     * @type {string}
     * @memberof CreateBatchResponseBody
     */
    'batch_notes': string | null;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date and time.
     * @type {string}
     * @memberof CreateBatchResponseBody
     */
    'created_at': string;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date and time.
     * @type {string}
     * @memberof CreateBatchResponseBody
     */
    'processed_at': string | null;
    /**
     * The number of errors that occurred while generating the batch
     * @type {number}
     * @memberof CreateBatchResponseBody
     */
    'errors': number;
    /**
     * The number of warnings that occurred while generating the batch
     * @type {number}
     * @memberof CreateBatchResponseBody
     */
    'warnings': number;
    /**
     * The number of labels generated in the batch
     * @type {number}
     * @memberof CreateBatchResponseBody
     */
    'completed': number;
    /**
     * The number of forms for customs that are available for download
     * @type {number}
     * @memberof CreateBatchResponseBody
     */
    'forms': number;
    /**
     * The total of errors, warnings, and completed properties
     * @type {number}
     * @memberof CreateBatchResponseBody
     */
    'count': number;
    /**
     *
     * @type {OptionalLink}
     * @memberof CreateBatchResponseBody
     */
    'batch_shipments_url': OptionalLink;
    /**
     *
     * @type {OptionalLink}
     * @memberof CreateBatchResponseBody
     */
    'batch_labels_url': OptionalLink;
    /**
     *
     * @type {BatchBatchErrorsUrl}
     * @memberof CreateBatchResponseBody
     */
    'batch_errors_url': BatchBatchErrorsUrl;
    /**
     *
     * @type {BatchLabelDownload}
     * @memberof CreateBatchResponseBody
     */
    'label_download': BatchLabelDownload;
    /**
     *
     * @type {BatchFormDownload}
     * @memberof CreateBatchResponseBody
     */
    'form_download': BatchFormDownload;
    /**
     *
     * @type {BatchStatus}
     * @memberof CreateBatchResponseBody
     */
    'status': BatchStatus;
}
/**
 * A purchase label without shipment request body
 * @export
 * @interface CreateLabelFromRateRequestBody
 */
export interface CreateLabelFromRateRequestBody {
    /**
     *
     * @type {ValidateAddress}
     * @memberof CreateLabelFromRateRequestBody
     */
    'validate_address'?: ValidateAddress;
    /**
     *
     * @type {LabelLayout}
     * @memberof CreateLabelFromRateRequestBody
     */
    'label_layout'?: LabelLayout;
    /**
     *
     * @type {LabelFormat}
     * @memberof CreateLabelFromRateRequestBody
     */
    'label_format'?: LabelFormat;
    /**
     *
     * @type {LabelDownloadType}
     * @memberof CreateLabelFromRateRequestBody
     */
    'label_download_type'?: LabelDownloadType;
    /**
     *
     * @type {DisplayScheme}
     * @memberof CreateLabelFromRateRequestBody
     */
    'display_scheme'?: DisplayScheme;
}
/**
 * A create label from rate response body
 * @export
 * @interface CreateLabelFromRateResponseBody
 */
export interface CreateLabelFromRateResponseBody {
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof CreateLabelFromRateResponseBody
     */
    'label_id'?: string;
    /**
     *
     * @type {LabelStatus}
     * @memberof CreateLabelFromRateResponseBody
     */
    'status'?: LabelStatus;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof CreateLabelFromRateResponseBody
     */
    'shipment_id'?: string;
    /**
     *
     * @type {Shipment}
     * @memberof CreateLabelFromRateResponseBody
     */
    'shipment'?: Shipment;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date, but not a specific time.  The value _may_ contain a time component, but it will be set to `00:00:00` UTC by ShipEngine.
     * @type {string}
     * @memberof CreateLabelFromRateResponseBody
     */
    'ship_date'?: string;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date and time.
     * @type {string}
     * @memberof CreateLabelFromRateResponseBody
     */
    'created_at'?: string;
    /**
     *
     * @type {LabelShipmentCost}
     * @memberof CreateLabelFromRateResponseBody
     */
    'shipment_cost'?: LabelShipmentCost;
    /**
     *
     * @type {LabelInsuranceCost}
     * @memberof CreateLabelFromRateResponseBody
     */
    'insurance_cost'?: LabelInsuranceCost;
    /**
     * The tracking number for the package. Tracking number formats vary across carriers.
     * @type {string}
     * @memberof CreateLabelFromRateResponseBody
     */
    'tracking_number'?: string;
    /**
     * Indicates whether this is a return label.  You may also want to set the `rma_number` so you know what is being returned.
     * @type {boolean}
     * @memberof CreateLabelFromRateResponseBody
     */
    'is_return_label'?: boolean;
    /**
     * An optional Return Merchandise Authorization number.  This field is useful for return labels.  You can set it to any string value.
     * @type {string}
     * @memberof CreateLabelFromRateResponseBody
     */
    'rma_number'?: string | null;
    /**
     * Indicates whether this is an international shipment.  That is, the originating country and destination country are different.
     * @type {boolean}
     * @memberof CreateLabelFromRateResponseBody
     */
    'is_international'?: boolean;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof CreateLabelFromRateResponseBody
     */
    'batch_id'?: string;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof CreateLabelFromRateResponseBody
     */
    'carrier_id'?: string;
    /**
     *
     * @type {LabelChargeEvent}
     * @memberof CreateLabelFromRateResponseBody
     */
    'charge_event'?: LabelChargeEvent;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof CreateLabelFromRateResponseBody
     */
    'outbound_label_id'?: string;
    /**
     * A [carrier service](https://www.shipengine.com/docs/shipping/use-a-carrier-service/), such as `fedex_ground`, `usps_first_class_mail`, `flat_rate_envelope`, etc.
     * @type {string}
     * @memberof CreateLabelFromRateResponseBody
     */
    'service_code'?: string;
    /**
     * Indicate if this label is being used only for testing purposes. If true, then no charge will be added to your account.
     * @type {boolean}
     * @memberof CreateLabelFromRateResponseBody
     * @deprecated
     */
    'test_label'?: boolean;
    /**
     * A [package type](https://www.shipengine.com/docs/reference/list-carrier-packages/), such as `thick_envelope`, `small_flat_rate_box`, `large_package`, etc.  Use the code `package` for custom or unknown package types.
     * @type {string}
     * @memberof CreateLabelFromRateResponseBody
     */
    'package_code'?: string;
    /**
     *
     * @type {ValidateAddress}
     * @memberof CreateLabelFromRateResponseBody
     */
    'validate_address'?: ValidateAddress;
    /**
     * Indicates whether the label has been [voided](https://www.shipengine.com/docs/labels/voiding/)
     * @type {boolean}
     * @memberof CreateLabelFromRateResponseBody
     */
    'voided'?: boolean;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date and time.
     * @type {string}
     * @memberof CreateLabelFromRateResponseBody
     */
    'voided_at'?: string | null;
    /**
     *
     * @type {LabelDownloadType}
     * @memberof CreateLabelFromRateResponseBody
     */
    'label_download_type'?: LabelDownloadType;
    /**
     *
     * @type {LabelFormat}
     * @memberof CreateLabelFromRateResponseBody
     */
    'label_format'?: LabelFormat;
    /**
     *
     * @type {DisplayScheme}
     * @memberof CreateLabelFromRateResponseBody
     */
    'display_scheme'?: DisplayScheme;
    /**
     *
     * @type {LabelLayout}
     * @memberof CreateLabelFromRateResponseBody
     */
    'label_layout'?: LabelLayout;
    /**
     * Indicates whether the shipment is trackable, in which case the `tracking_status` field will reflect the current status and each package will have a `tracking_number`.
     * @type {boolean}
     * @memberof CreateLabelFromRateResponseBody
     */
    'trackable'?: boolean;
    /**
     * Used to identify an image resource.
     * @type {string}
     * @memberof CreateLabelFromRateResponseBody
     */
    'label_image_id'?: string | null;
    /**
     * A [shipping carrier](https://www.shipengine.com/docs/carriers/setup/), such as `fedex`, `dhl_express`, `stamps_com`, etc.
     * @type {string}
     * @memberof CreateLabelFromRateResponseBody
     */
    'carrier_code'?: string;
    /**
     *
     * @type {TrackingStatus}
     * @memberof CreateLabelFromRateResponseBody
     */
    'tracking_status'?: TrackingStatus;
    /**
     *
     * @type {LabelDownload}
     * @memberof CreateLabelFromRateResponseBody
     */
    'label_download'?: LabelDownload;
    /**
     *
     * @type {Link}
     * @memberof CreateLabelFromRateResponseBody
     */
    'form_download'?: Link | null;
    /**
     *
     * @type {Link}
     * @memberof CreateLabelFromRateResponseBody
     */
    'insurance_claim'?: Link | null;
    /**
     * The label\'s package(s).  > **Note:** Some carriers only allow one package per label.  If you attempt to create a multi-package label for a carrier that doesn\'t allow it, an error will be returned.
     * @type {Array<Package>}
     * @memberof CreateLabelFromRateResponseBody
     */
    'packages'?: Array<Package>;
    /**
     * Additional information some carriers may provide by which to identify a given label in their system.
     * @type {Array<AlternativeIdentifier>}
     * @memberof CreateLabelFromRateResponseBody
     */
    'alternative_identifiers'?: Array<AlternativeIdentifier> | null;
}
/**
 * A purchase label without shipment request body
 * @export
 * @interface CreateLabelFromShipmentRequestBody
 */
export interface CreateLabelFromShipmentRequestBody {
    /**
     *
     * @type {ValidateAddress}
     * @memberof CreateLabelFromShipmentRequestBody
     */
    'validate_address'?: ValidateAddress;
    /**
     *
     * @type {LabelLayout}
     * @memberof CreateLabelFromShipmentRequestBody
     */
    'label_layout'?: LabelLayout;
    /**
     *
     * @type {LabelFormat}
     * @memberof CreateLabelFromShipmentRequestBody
     */
    'label_format'?: LabelFormat;
    /**
     *
     * @type {LabelDownloadType}
     * @memberof CreateLabelFromShipmentRequestBody
     */
    'label_download_type'?: LabelDownloadType;
    /**
     *
     * @type {DisplayScheme}
     * @memberof CreateLabelFromShipmentRequestBody
     */
    'display_scheme'?: DisplayScheme;
}
/**
 * A create label from shipment response body
 * @export
 * @interface CreateLabelFromShipmentResponseBody
 */
export interface CreateLabelFromShipmentResponseBody {
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof CreateLabelFromShipmentResponseBody
     */
    'label_id'?: string;
    /**
     *
     * @type {LabelStatus}
     * @memberof CreateLabelFromShipmentResponseBody
     */
    'status'?: LabelStatus;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof CreateLabelFromShipmentResponseBody
     */
    'shipment_id'?: string;
    /**
     *
     * @type {Shipment}
     * @memberof CreateLabelFromShipmentResponseBody
     */
    'shipment'?: Shipment;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date, but not a specific time.  The value _may_ contain a time component, but it will be set to `00:00:00` UTC by ShipEngine.
     * @type {string}
     * @memberof CreateLabelFromShipmentResponseBody
     */
    'ship_date'?: string;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date and time.
     * @type {string}
     * @memberof CreateLabelFromShipmentResponseBody
     */
    'created_at'?: string;
    /**
     *
     * @type {LabelShipmentCost}
     * @memberof CreateLabelFromShipmentResponseBody
     */
    'shipment_cost'?: LabelShipmentCost;
    /**
     *
     * @type {LabelInsuranceCost}
     * @memberof CreateLabelFromShipmentResponseBody
     */
    'insurance_cost'?: LabelInsuranceCost;
    /**
     * The tracking number for the package. Tracking number formats vary across carriers.
     * @type {string}
     * @memberof CreateLabelFromShipmentResponseBody
     */
    'tracking_number'?: string;
    /**
     * Indicates whether this is a return label.  You may also want to set the `rma_number` so you know what is being returned.
     * @type {boolean}
     * @memberof CreateLabelFromShipmentResponseBody
     */
    'is_return_label'?: boolean;
    /**
     * An optional Return Merchandise Authorization number.  This field is useful for return labels.  You can set it to any string value.
     * @type {string}
     * @memberof CreateLabelFromShipmentResponseBody
     */
    'rma_number'?: string | null;
    /**
     * Indicates whether this is an international shipment.  That is, the originating country and destination country are different.
     * @type {boolean}
     * @memberof CreateLabelFromShipmentResponseBody
     */
    'is_international'?: boolean;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof CreateLabelFromShipmentResponseBody
     */
    'batch_id'?: string;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof CreateLabelFromShipmentResponseBody
     */
    'carrier_id'?: string;
    /**
     *
     * @type {LabelChargeEvent}
     * @memberof CreateLabelFromShipmentResponseBody
     */
    'charge_event'?: LabelChargeEvent;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof CreateLabelFromShipmentResponseBody
     */
    'outbound_label_id'?: string;
    /**
     * A [carrier service](https://www.shipengine.com/docs/shipping/use-a-carrier-service/), such as `fedex_ground`, `usps_first_class_mail`, `flat_rate_envelope`, etc.
     * @type {string}
     * @memberof CreateLabelFromShipmentResponseBody
     */
    'service_code'?: string;
    /**
     * Indicate if this label is being used only for testing purposes. If true, then no charge will be added to your account.
     * @type {boolean}
     * @memberof CreateLabelFromShipmentResponseBody
     * @deprecated
     */
    'test_label'?: boolean;
    /**
     * A [package type](https://www.shipengine.com/docs/reference/list-carrier-packages/), such as `thick_envelope`, `small_flat_rate_box`, `large_package`, etc.  Use the code `package` for custom or unknown package types.
     * @type {string}
     * @memberof CreateLabelFromShipmentResponseBody
     */
    'package_code'?: string;
    /**
     *
     * @type {ValidateAddress}
     * @memberof CreateLabelFromShipmentResponseBody
     */
    'validate_address'?: ValidateAddress;
    /**
     * Indicates whether the label has been [voided](https://www.shipengine.com/docs/labels/voiding/)
     * @type {boolean}
     * @memberof CreateLabelFromShipmentResponseBody
     */
    'voided'?: boolean;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date and time.
     * @type {string}
     * @memberof CreateLabelFromShipmentResponseBody
     */
    'voided_at'?: string | null;
    /**
     *
     * @type {LabelDownloadType}
     * @memberof CreateLabelFromShipmentResponseBody
     */
    'label_download_type'?: LabelDownloadType;
    /**
     *
     * @type {LabelFormat}
     * @memberof CreateLabelFromShipmentResponseBody
     */
    'label_format'?: LabelFormat;
    /**
     *
     * @type {DisplayScheme}
     * @memberof CreateLabelFromShipmentResponseBody
     */
    'display_scheme'?: DisplayScheme;
    /**
     *
     * @type {LabelLayout}
     * @memberof CreateLabelFromShipmentResponseBody
     */
    'label_layout'?: LabelLayout;
    /**
     * Indicates whether the shipment is trackable, in which case the `tracking_status` field will reflect the current status and each package will have a `tracking_number`.
     * @type {boolean}
     * @memberof CreateLabelFromShipmentResponseBody
     */
    'trackable'?: boolean;
    /**
     * Used to identify an image resource.
     * @type {string}
     * @memberof CreateLabelFromShipmentResponseBody
     */
    'label_image_id'?: string | null;
    /**
     * A [shipping carrier](https://www.shipengine.com/docs/carriers/setup/), such as `fedex`, `dhl_express`, `stamps_com`, etc.
     * @type {string}
     * @memberof CreateLabelFromShipmentResponseBody
     */
    'carrier_code'?: string;
    /**
     *
     * @type {TrackingStatus}
     * @memberof CreateLabelFromShipmentResponseBody
     */
    'tracking_status'?: TrackingStatus;
    /**
     *
     * @type {LabelDownload}
     * @memberof CreateLabelFromShipmentResponseBody
     */
    'label_download'?: LabelDownload;
    /**
     *
     * @type {Link}
     * @memberof CreateLabelFromShipmentResponseBody
     */
    'form_download'?: Link | null;
    /**
     *
     * @type {Link}
     * @memberof CreateLabelFromShipmentResponseBody
     */
    'insurance_claim'?: Link | null;
    /**
     * The label\'s package(s).  > **Note:** Some carriers only allow one package per label.  If you attempt to create a multi-package label for a carrier that doesn\'t allow it, an error will be returned.
     * @type {Array<Package>}
     * @memberof CreateLabelFromShipmentResponseBody
     */
    'packages'?: Array<Package>;
    /**
     * Additional information some carriers may provide by which to identify a given label in their system.
     * @type {Array<AlternativeIdentifier>}
     * @memberof CreateLabelFromShipmentResponseBody
     */
    'alternative_identifiers'?: Array<AlternativeIdentifier> | null;
}
/**
 * A purchase label request body
 * @export
 * @interface CreateLabelRequestBody
 */
export interface CreateLabelRequestBody {
    /**
     * A unique identifier for a carrier service point where the shipment will be delivered by the carrier. This will take precedence over a shipment\'s ship to address.
     * @type {string}
     * @memberof CreateLabelRequestBody
     */
    'ship_to_service_point_id'?: string | null;
    /**
     * A unique identifier for a carrier drop off point where a merchant plans to deliver packages. This will take precedence over a shipment\'s ship from address.
     * @type {string}
     * @memberof CreateLabelRequestBody
     */
    'ship_from_service_point_id'?: string | null;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof CreateLabelRequestBody
     */
    'label_id'?: string;
    /**
     *
     * @type {LabelStatus}
     * @memberof CreateLabelRequestBody
     */
    'status'?: LabelStatus;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof CreateLabelRequestBody
     */
    'shipment_id'?: string;
    /**
     *
     * @type {Shipment}
     * @memberof CreateLabelRequestBody
     */
    'shipment': Shipment;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date, but not a specific time.  The value _may_ contain a time component, but it will be set to `00:00:00` UTC by ShipEngine.
     * @type {string}
     * @memberof CreateLabelRequestBody
     */
    'ship_date'?: string;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date and time.
     * @type {string}
     * @memberof CreateLabelRequestBody
     */
    'created_at'?: string;
    /**
     *
     * @type {LabelShipmentCost}
     * @memberof CreateLabelRequestBody
     */
    'shipment_cost'?: LabelShipmentCost;
    /**
     *
     * @type {LabelInsuranceCost}
     * @memberof CreateLabelRequestBody
     */
    'insurance_cost'?: LabelInsuranceCost;
    /**
     * The tracking number for the package. Tracking number formats vary across carriers.
     * @type {string}
     * @memberof CreateLabelRequestBody
     */
    'tracking_number'?: string;
    /**
     * Indicates whether this is a return label.  You may also want to set the `rma_number` so you know what is being returned.
     * @type {boolean}
     * @memberof CreateLabelRequestBody
     */
    'is_return_label'?: boolean;
    /**
     * An optional Return Merchandise Authorization number.  This field is useful for return labels.  You can set it to any string value.
     * @type {string}
     * @memberof CreateLabelRequestBody
     */
    'rma_number'?: string | null;
    /**
     * Indicates whether this is an international shipment.  That is, the originating country and destination country are different.
     * @type {boolean}
     * @memberof CreateLabelRequestBody
     */
    'is_international'?: boolean;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof CreateLabelRequestBody
     */
    'batch_id'?: string;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof CreateLabelRequestBody
     */
    'carrier_id'?: string;
    /**
     *
     * @type {LabelChargeEvent}
     * @memberof CreateLabelRequestBody
     */
    'charge_event'?: LabelChargeEvent;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof CreateLabelRequestBody
     */
    'outbound_label_id'?: string;
    /**
     * A [carrier service](https://www.shipengine.com/docs/shipping/use-a-carrier-service/), such as `fedex_ground`, `usps_first_class_mail`, `flat_rate_envelope`, etc.
     * @type {string}
     * @memberof CreateLabelRequestBody
     */
    'service_code'?: string;
    /**
     * Indicate if this label is being used only for testing purposes. If true, then no charge will be added to your account.
     * @type {boolean}
     * @memberof CreateLabelRequestBody
     * @deprecated
     */
    'test_label'?: boolean;
    /**
     * A [package type](https://www.shipengine.com/docs/reference/list-carrier-packages/), such as `thick_envelope`, `small_flat_rate_box`, `large_package`, etc.  Use the code `package` for custom or unknown package types.
     * @type {string}
     * @memberof CreateLabelRequestBody
     */
    'package_code'?: string;
    /**
     *
     * @type {ValidateAddress}
     * @memberof CreateLabelRequestBody
     */
    'validate_address'?: ValidateAddress;
    /**
     * Indicates whether the label has been [voided](https://www.shipengine.com/docs/labels/voiding/)
     * @type {boolean}
     * @memberof CreateLabelRequestBody
     */
    'voided'?: boolean;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date and time.
     * @type {string}
     * @memberof CreateLabelRequestBody
     */
    'voided_at'?: string | null;
    /**
     *
     * @type {LabelDownloadType}
     * @memberof CreateLabelRequestBody
     */
    'label_download_type'?: LabelDownloadType;
    /**
     *
     * @type {LabelFormat}
     * @memberof CreateLabelRequestBody
     */
    'label_format'?: LabelFormat;
    /**
     *
     * @type {DisplayScheme}
     * @memberof CreateLabelRequestBody
     */
    'display_scheme'?: DisplayScheme;
    /**
     *
     * @type {LabelLayout}
     * @memberof CreateLabelRequestBody
     */
    'label_layout'?: LabelLayout;
    /**
     * Indicates whether the shipment is trackable, in which case the `tracking_status` field will reflect the current status and each package will have a `tracking_number`.
     * @type {boolean}
     * @memberof CreateLabelRequestBody
     */
    'trackable'?: boolean;
    /**
     * Used to identify an image resource.
     * @type {string}
     * @memberof CreateLabelRequestBody
     */
    'label_image_id'?: string | null;
    /**
     * A [shipping carrier](https://www.shipengine.com/docs/carriers/setup/), such as `fedex`, `dhl_express`, `stamps_com`, etc.
     * @type {string}
     * @memberof CreateLabelRequestBody
     */
    'carrier_code'?: string;
    /**
     *
     * @type {TrackingStatus}
     * @memberof CreateLabelRequestBody
     */
    'tracking_status'?: TrackingStatus;
    /**
     *
     * @type {LabelDownload}
     * @memberof CreateLabelRequestBody
     */
    'label_download'?: LabelDownload;
    /**
     *
     * @type {Link}
     * @memberof CreateLabelRequestBody
     */
    'form_download'?: Link | null;
    /**
     *
     * @type {Link}
     * @memberof CreateLabelRequestBody
     */
    'insurance_claim'?: Link | null;
    /**
     * The label\'s package(s).  > **Note:** Some carriers only allow one package per label.  If you attempt to create a multi-package label for a carrier that doesn\'t allow it, an error will be returned.
     * @type {Array<Package>}
     * @memberof CreateLabelRequestBody
     */
    'packages'?: Array<Package>;
    /**
     * Additional information some carriers may provide by which to identify a given label in their system.
     * @type {Array<AlternativeIdentifier>}
     * @memberof CreateLabelRequestBody
     */
    'alternative_identifiers'?: Array<AlternativeIdentifier> | null;
}
/**
 * A create label response body
 * @export
 * @interface CreateLabelResponseBody
 */
export interface CreateLabelResponseBody {
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof CreateLabelResponseBody
     */
    'label_id': string;
    /**
     *
     * @type {LabelStatus}
     * @memberof CreateLabelResponseBody
     */
    'status': LabelStatus;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof CreateLabelResponseBody
     */
    'shipment_id': string;
    /**
     *
     * @type {Shipment}
     * @memberof CreateLabelResponseBody
     */
    'shipment'?: Shipment;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date, but not a specific time.  The value _may_ contain a time component, but it will be set to `00:00:00` UTC by ShipEngine.
     * @type {string}
     * @memberof CreateLabelResponseBody
     */
    'ship_date': string;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date and time.
     * @type {string}
     * @memberof CreateLabelResponseBody
     */
    'created_at': string;
    /**
     *
     * @type {LabelShipmentCost}
     * @memberof CreateLabelResponseBody
     */
    'shipment_cost': LabelShipmentCost;
    /**
     *
     * @type {LabelInsuranceCost}
     * @memberof CreateLabelResponseBody
     */
    'insurance_cost': LabelInsuranceCost;
    /**
     * The tracking number for the package. Tracking number formats vary across carriers.
     * @type {string}
     * @memberof CreateLabelResponseBody
     */
    'tracking_number': string;
    /**
     * Indicates whether this is a return label.  You may also want to set the `rma_number` so you know what is being returned.
     * @type {boolean}
     * @memberof CreateLabelResponseBody
     */
    'is_return_label': boolean;
    /**
     * An optional Return Merchandise Authorization number.  This field is useful for return labels.  You can set it to any string value.
     * @type {string}
     * @memberof CreateLabelResponseBody
     */
    'rma_number': string | null;
    /**
     * Indicates whether this is an international shipment.  That is, the originating country and destination country are different.
     * @type {boolean}
     * @memberof CreateLabelResponseBody
     */
    'is_international': boolean;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof CreateLabelResponseBody
     */
    'batch_id': string;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof CreateLabelResponseBody
     */
    'carrier_id': string;
    /**
     *
     * @type {LabelChargeEvent}
     * @memberof CreateLabelResponseBody
     */
    'charge_event': LabelChargeEvent;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof CreateLabelResponseBody
     */
    'outbound_label_id'?: string;
    /**
     * A [carrier service](https://www.shipengine.com/docs/shipping/use-a-carrier-service/), such as `fedex_ground`, `usps_first_class_mail`, `flat_rate_envelope`, etc.
     * @type {string}
     * @memberof CreateLabelResponseBody
     */
    'service_code': string;
    /**
     * Indicate if this label is being used only for testing purposes. If true, then no charge will be added to your account.
     * @type {boolean}
     * @memberof CreateLabelResponseBody
     * @deprecated
     */
    'test_label'?: boolean;
    /**
     * A [package type](https://www.shipengine.com/docs/reference/list-carrier-packages/), such as `thick_envelope`, `small_flat_rate_box`, `large_package`, etc.  Use the code `package` for custom or unknown package types.
     * @type {string}
     * @memberof CreateLabelResponseBody
     */
    'package_code': string;
    /**
     *
     * @type {ValidateAddress}
     * @memberof CreateLabelResponseBody
     */
    'validate_address'?: ValidateAddress;
    /**
     * Indicates whether the label has been [voided](https://www.shipengine.com/docs/labels/voiding/)
     * @type {boolean}
     * @memberof CreateLabelResponseBody
     */
    'voided': boolean;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date and time.
     * @type {string}
     * @memberof CreateLabelResponseBody
     */
    'voided_at': string | null;
    /**
     *
     * @type {LabelDownloadType}
     * @memberof CreateLabelResponseBody
     */
    'label_download_type'?: LabelDownloadType;
    /**
     *
     * @type {LabelFormat}
     * @memberof CreateLabelResponseBody
     */
    'label_format': LabelFormat;
    /**
     *
     * @type {DisplayScheme}
     * @memberof CreateLabelResponseBody
     */
    'display_scheme': DisplayScheme;
    /**
     *
     * @type {LabelLayout}
     * @memberof CreateLabelResponseBody
     */
    'label_layout': LabelLayout;
    /**
     * Indicates whether the shipment is trackable, in which case the `tracking_status` field will reflect the current status and each package will have a `tracking_number`.
     * @type {boolean}
     * @memberof CreateLabelResponseBody
     */
    'trackable': boolean;
    /**
     * Used to identify an image resource.
     * @type {string}
     * @memberof CreateLabelResponseBody
     */
    'label_image_id': string | null;
    /**
     * A [shipping carrier](https://www.shipengine.com/docs/carriers/setup/), such as `fedex`, `dhl_express`, `stamps_com`, etc.
     * @type {string}
     * @memberof CreateLabelResponseBody
     */
    'carrier_code': string;
    /**
     *
     * @type {TrackingStatus}
     * @memberof CreateLabelResponseBody
     */
    'tracking_status': TrackingStatus;
    /**
     *
     * @type {LabelDownload}
     * @memberof CreateLabelResponseBody
     */
    'label_download': LabelDownload;
    /**
     *
     * @type {Link}
     * @memberof CreateLabelResponseBody
     */
    'form_download': Link | null;
    /**
     *
     * @type {Link}
     * @memberof CreateLabelResponseBody
     */
    'insurance_claim': Link | null;
    /**
     * The label\'s package(s).  > **Note:** Some carriers only allow one package per label.  If you attempt to create a multi-package label for a carrier that doesn\'t allow it, an error will be returned.
     * @type {Array<Package>}
     * @memberof CreateLabelResponseBody
     */
    'packages': Array<Package>;
    /**
     * Additional information some carriers may provide by which to identify a given label in their system.
     * @type {Array<AlternativeIdentifier>}
     * @memberof CreateLabelResponseBody
     */
    'alternative_identifiers'?: Array<AlternativeIdentifier> | null;
}
/**
 * A create manifest request body
 * @export
 * @interface CreateManifestByObjectRequestBody
 */
export interface CreateManifestByObjectRequestBody {
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof CreateManifestByObjectRequestBody
     */
    'carrier_id': string;
    /**
     * The list of label ids to exclude from the manifest
     * @type {Array<string>}
     * @memberof CreateManifestByObjectRequestBody
     */
    'excluded_label_ids'?: Array<string>;
    /**
     * The list of label ids to include for the manifest
     * @type {Array<string>}
     * @memberof CreateManifestByObjectRequestBody
     */
    'label_ids'?: Array<string>;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof CreateManifestByObjectRequestBody
     */
    'warehouse_id': string;
    /**
     * The ship date that the shipment will be sent out on
     * @type {string}
     * @memberof CreateManifestByObjectRequestBody
     */
    'ship_date': string;
}
/**
 * A create manifest request body
 * @export
 * @interface CreateManifestLabelIdsRequestBody
 */
export interface CreateManifestLabelIdsRequestBody {
    /**
     * The list of label ids to include in the manifest
     * @type {Array<string>}
     * @memberof CreateManifestLabelIdsRequestBody
     */
    'label_ids': Array<string>;
}
/**
 * @type CreateManifestRequestBody
 * @export
 */
export type CreateManifestRequestBody = CreateManifestByObjectRequestBody | CreateManifestLabelIdsRequestBody;
/**
 * A create manifest response body
 * @export
 * @interface CreateManifestResponseBody
 */
export interface CreateManifestResponseBody {
    /**
     * Resulting Manifests
     * @type {Array<Manifest>}
     * @memberof CreateManifestResponseBody
     */
    'manifests'?: Array<Manifest>;
    /**
     * Resulting manifest requests with statuses
     * @type {Array<ManifestRequest>}
     * @memberof CreateManifestResponseBody
     */
    'manifest_requests'?: Array<ManifestRequest>;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof CreateManifestResponseBody
     */
    'manifest_id': string;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof CreateManifestResponseBody
     */
    'form_id': string;
    /**
     * The date-time that the manifest was created
     * @type {string}
     * @memberof CreateManifestResponseBody
     * @deprecated
     */
    'created_at': string;
    /**
     * The date-time that the manifests shipments will be picked up
     * @type {string}
     * @memberof CreateManifestResponseBody
     * @deprecated
     */
    'ship_date': string;
    /**
     * The number of shipments that are included in this manifest
     * @type {number}
     * @memberof CreateManifestResponseBody
     * @deprecated
     */
    'shipments': number;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof CreateManifestResponseBody
     */
    'warehouse_id': string;
    /**
     * A string that uniquely identifies the submission
     * @type {string}
     * @memberof CreateManifestResponseBody
     * @deprecated
     */
    'submission_id': string;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof CreateManifestResponseBody
     */
    'carrier_id': string;
    /**
     *
     * @type {ManifestDownload}
     * @memberof CreateManifestResponseBody
     */
    'manifest_download': ManifestDownload;
    /**
     * An array of the label ids used in this manifest.
     * @type {Array<string>}
     * @memberof CreateManifestResponseBody
     * @deprecated
     */
    'label_ids'?: Array<string>;
    /**
     * A UUID (a.k.a. GUID) that uniquely identifies a resource
     * @type {string}
     * @memberof CreateManifestResponseBody
     */
    'request_id': string;
    /**
     * The errors associated with the failed API call
     * @type {Array<ModelError>}
     * @memberof CreateManifestResponseBody
     */
    'errors': Array<ModelError>;
}
/**
 * A create package type request body
 * @export
 * @interface CreatePackageTypeRequestBody
 */
export interface CreatePackageTypeRequestBody {
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof CreatePackageTypeRequestBody
     */
    'package_id'?: string;
    /**
     * A [package type](https://www.shipengine.com/docs/reference/list-carrier-packages/), such as `thick_envelope`, `small_flat_rate_box`, `large_package`, etc.  Use the code `package` for custom or unknown package types.
     * @type {string}
     * @memberof CreatePackageTypeRequestBody
     */
    'package_code': string;
    /**
     *
     * @type {string}
     * @memberof CreatePackageTypeRequestBody
     */
    'name': string;
    /**
     *
     * @type {Dimensions}
     * @memberof CreatePackageTypeRequestBody
     */
    'dimensions'?: Dimensions;
    /**
     * Provides a helpful description for the custom package.
     * @type {string}
     * @memberof CreatePackageTypeRequestBody
     */
    'description'?: string | null;
}
/**
 * A create package type response body
 * @export
 * @interface CreatePackageTypeResponseBody
 */
export interface CreatePackageTypeResponseBody {
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof CreatePackageTypeResponseBody
     */
    'package_id'?: string;
    /**
     * A [package type](https://www.shipengine.com/docs/reference/list-carrier-packages/), such as `thick_envelope`, `small_flat_rate_box`, `large_package`, etc.  Use the code `package` for custom or unknown package types.
     * @type {string}
     * @memberof CreatePackageTypeResponseBody
     */
    'package_code': string;
    /**
     *
     * @type {string}
     * @memberof CreatePackageTypeResponseBody
     */
    'name': string;
    /**
     *
     * @type {Dimensions}
     * @memberof CreatePackageTypeResponseBody
     */
    'dimensions'?: Dimensions;
    /**
     * Provides a helpful description for the custom package.
     * @type {string}
     * @memberof CreatePackageTypeResponseBody
     */
    'description'?: string | null;
}
/**
 * A create return label request body
 * @export
 * @interface CreateReturnLabelRequestBody
 */
export interface CreateReturnLabelRequestBody {
    /**
     *
     * @type {LabelChargeEvent}
     * @memberof CreateReturnLabelRequestBody
     */
    'charge_event'?: LabelChargeEvent;
    /**
     *
     * @type {LabelLayout}
     * @memberof CreateReturnLabelRequestBody
     */
    'label_layout'?: LabelLayout;
    /**
     *
     * @type {LabelFormat}
     * @memberof CreateReturnLabelRequestBody
     */
    'label_format'?: LabelFormat;
    /**
     *
     * @type {LabelDownloadType}
     * @memberof CreateReturnLabelRequestBody
     */
    'label_download_type'?: LabelDownloadType;
    /**
     *
     * @type {DisplayScheme}
     * @memberof CreateReturnLabelRequestBody
     */
    'display_scheme'?: DisplayScheme;
    /**
     * Used to identify an image resource.
     * @type {string}
     * @memberof CreateReturnLabelRequestBody
     */
    'label_image_id'?: string | null;
}
/**
 * A create return label response body
 * @export
 * @interface CreateReturnLabelResponseBody
 */
export interface CreateReturnLabelResponseBody {
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof CreateReturnLabelResponseBody
     */
    'label_id'?: string;
    /**
     *
     * @type {LabelStatus}
     * @memberof CreateReturnLabelResponseBody
     */
    'status'?: LabelStatus;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof CreateReturnLabelResponseBody
     */
    'shipment_id'?: string;
    /**
     *
     * @type {Shipment}
     * @memberof CreateReturnLabelResponseBody
     */
    'shipment'?: Shipment;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date, but not a specific time.  The value _may_ contain a time component, but it will be set to `00:00:00` UTC by ShipEngine.
     * @type {string}
     * @memberof CreateReturnLabelResponseBody
     */
    'ship_date'?: string;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date and time.
     * @type {string}
     * @memberof CreateReturnLabelResponseBody
     */
    'created_at'?: string;
    /**
     *
     * @type {LabelShipmentCost}
     * @memberof CreateReturnLabelResponseBody
     */
    'shipment_cost'?: LabelShipmentCost;
    /**
     *
     * @type {LabelInsuranceCost}
     * @memberof CreateReturnLabelResponseBody
     */
    'insurance_cost'?: LabelInsuranceCost;
    /**
     * The tracking number for the package. Tracking number formats vary across carriers.
     * @type {string}
     * @memberof CreateReturnLabelResponseBody
     */
    'tracking_number'?: string;
    /**
     * Indicates whether this is a return label.  You may also want to set the `rma_number` so you know what is being returned.
     * @type {boolean}
     * @memberof CreateReturnLabelResponseBody
     */
    'is_return_label'?: boolean;
    /**
     * An optional Return Merchandise Authorization number.  This field is useful for return labels.  You can set it to any string value.
     * @type {string}
     * @memberof CreateReturnLabelResponseBody
     */
    'rma_number'?: string | null;
    /**
     * Indicates whether this is an international shipment.  That is, the originating country and destination country are different.
     * @type {boolean}
     * @memberof CreateReturnLabelResponseBody
     */
    'is_international'?: boolean;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof CreateReturnLabelResponseBody
     */
    'batch_id'?: string;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof CreateReturnLabelResponseBody
     */
    'carrier_id'?: string;
    /**
     *
     * @type {LabelChargeEvent}
     * @memberof CreateReturnLabelResponseBody
     */
    'charge_event'?: LabelChargeEvent;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof CreateReturnLabelResponseBody
     */
    'outbound_label_id'?: string;
    /**
     * A [carrier service](https://www.shipengine.com/docs/shipping/use-a-carrier-service/), such as `fedex_ground`, `usps_first_class_mail`, `flat_rate_envelope`, etc.
     * @type {string}
     * @memberof CreateReturnLabelResponseBody
     */
    'service_code'?: string;
    /**
     * Indicate if this label is being used only for testing purposes. If true, then no charge will be added to your account.
     * @type {boolean}
     * @memberof CreateReturnLabelResponseBody
     * @deprecated
     */
    'test_label'?: boolean;
    /**
     * A [package type](https://www.shipengine.com/docs/reference/list-carrier-packages/), such as `thick_envelope`, `small_flat_rate_box`, `large_package`, etc.  Use the code `package` for custom or unknown package types.
     * @type {string}
     * @memberof CreateReturnLabelResponseBody
     */
    'package_code'?: string;
    /**
     *
     * @type {ValidateAddress}
     * @memberof CreateReturnLabelResponseBody
     */
    'validate_address'?: ValidateAddress;
    /**
     * Indicates whether the label has been [voided](https://www.shipengine.com/docs/labels/voiding/)
     * @type {boolean}
     * @memberof CreateReturnLabelResponseBody
     */
    'voided'?: boolean;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date and time.
     * @type {string}
     * @memberof CreateReturnLabelResponseBody
     */
    'voided_at'?: string | null;
    /**
     *
     * @type {LabelDownloadType}
     * @memberof CreateReturnLabelResponseBody
     */
    'label_download_type'?: LabelDownloadType;
    /**
     *
     * @type {LabelFormat}
     * @memberof CreateReturnLabelResponseBody
     */
    'label_format'?: LabelFormat;
    /**
     *
     * @type {DisplayScheme}
     * @memberof CreateReturnLabelResponseBody
     */
    'display_scheme'?: DisplayScheme;
    /**
     *
     * @type {LabelLayout}
     * @memberof CreateReturnLabelResponseBody
     */
    'label_layout'?: LabelLayout;
    /**
     * Indicates whether the shipment is trackable, in which case the `tracking_status` field will reflect the current status and each package will have a `tracking_number`.
     * @type {boolean}
     * @memberof CreateReturnLabelResponseBody
     */
    'trackable'?: boolean;
    /**
     * Used to identify an image resource.
     * @type {string}
     * @memberof CreateReturnLabelResponseBody
     */
    'label_image_id'?: string | null;
    /**
     * A [shipping carrier](https://www.shipengine.com/docs/carriers/setup/), such as `fedex`, `dhl_express`, `stamps_com`, etc.
     * @type {string}
     * @memberof CreateReturnLabelResponseBody
     */
    'carrier_code'?: string;
    /**
     *
     * @type {TrackingStatus}
     * @memberof CreateReturnLabelResponseBody
     */
    'tracking_status'?: TrackingStatus;
    /**
     *
     * @type {LabelDownload}
     * @memberof CreateReturnLabelResponseBody
     */
    'label_download'?: LabelDownload;
    /**
     *
     * @type {Link}
     * @memberof CreateReturnLabelResponseBody
     */
    'form_download'?: Link | null;
    /**
     *
     * @type {Link}
     * @memberof CreateReturnLabelResponseBody
     */
    'insurance_claim'?: Link | null;
    /**
     * The label\'s package(s).  > **Note:** Some carriers only allow one package per label.  If you attempt to create a multi-package label for a carrier that doesn\'t allow it, an error will be returned.
     * @type {Array<Package>}
     * @memberof CreateReturnLabelResponseBody
     */
    'packages'?: Array<Package>;
    /**
     * Additional information some carriers may provide by which to identify a given label in their system.
     * @type {Array<AlternativeIdentifier>}
     * @memberof CreateReturnLabelResponseBody
     */
    'alternative_identifiers'?: Array<AlternativeIdentifier> | null;
}
/**
 *
 * @export
 * @interface CreateShipmentResponseBodyFields
 */
export interface CreateShipmentResponseBodyFields {
    /**
     * An array of errors that occurred while creating shipment.
     * @type {Array<string>}
     * @memberof CreateShipmentResponseBodyFields
     * @deprecated
     */
    'errors'?: Array<string>;
    /**
     *
     * @type {AddressValidationResult}
     * @memberof CreateShipmentResponseBodyFields
     */
    'address_validation'?: AddressValidationResult;
}
/**
 * A create shipments request body
 * @export
 * @interface CreateShipmentsRequestBody
 */
export interface CreateShipmentsRequestBody {
    /**
     * An array of shipments to be created.
     * @type {Array<AddressValidatingShipment>}
     * @memberof CreateShipmentsRequestBody
     */
    'shipments': Array<AddressValidatingShipment>;
}
/**
 * A create shipments response body
 * @export
 * @interface CreateShipmentsResponseBody
 */
export interface CreateShipmentsResponseBody {
    /**
     * Indicates if errors occured while creating the shipments
     * @type {boolean}
     * @memberof CreateShipmentsResponseBody
     */
    'has_errors': boolean;
    /**
     * An array of shipments that were created.
     * @type {Array<CreateAndValidateShipment>}
     * @memberof CreateShipmentsResponseBody
     */
    'shipments': Array<CreateAndValidateShipment>;
}
/**
 * Response body for creating tags
 * @export
 * @interface CreateTagResponseBody
 */
export interface CreateTagResponseBody {
    /**
     * The tag name.
     * @type {string}
     * @memberof CreateTagResponseBody
     */
    'name': string;
}
/**
 * A create warehouse request body
 * @export
 * @interface CreateWarehouseRequestBody
 */
export interface CreateWarehouseRequestBody {
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof CreateWarehouseRequestBody
     */
    'warehouse_id'?: string;
    /**
     * Designates which single warehouse is the default on the account
     * @type {boolean}
     * @memberof CreateWarehouseRequestBody
     */
    'is_default'?: boolean | null;
    /**
     * Name of the warehouse
     * @type {string}
     * @memberof CreateWarehouseRequestBody
     */
    'name': string;
    /**
     * Timestamp that indicates when the warehouse was created
     * @type {string}
     * @memberof CreateWarehouseRequestBody
     */
    'created_at'?: string;
    /**
     *
     * @type {Address}
     * @memberof CreateWarehouseRequestBody
     */
    'origin_address': Address;
    /**
     *
     * @type {Address}
     * @memberof CreateWarehouseRequestBody
     */
    'return_address'?: Address;
}
/**
 * A create warehouse response body
 * @export
 * @interface CreateWarehouseResponseBody
 */
export interface CreateWarehouseResponseBody {
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof CreateWarehouseResponseBody
     */
    'warehouse_id': string;
    /**
     * Designates which single warehouse is the default on the account
     * @type {boolean}
     * @memberof CreateWarehouseResponseBody
     */
    'is_default'?: boolean | null;
    /**
     * Name of the warehouse
     * @type {string}
     * @memberof CreateWarehouseResponseBody
     */
    'name': string;
    /**
     * Timestamp that indicates when the warehouse was created
     * @type {string}
     * @memberof CreateWarehouseResponseBody
     */
    'created_at': string;
    /**
     *
     * @type {Address}
     * @memberof CreateWarehouseResponseBody
     */
    'origin_address': Address;
    /**
     *
     * @type {Address}
     * @memberof CreateWarehouseResponseBody
     */
    'return_address': Address;
}
/**
 * A create webhook request body
 * @export
 * @interface CreateWebhookRequestBody
 */
export interface CreateWebhookRequestBody {
    /**
     *
     * @type {WebhookEvent}
     * @memberof CreateWebhookRequestBody
     */
    'event': WebhookEvent;
    /**
     * A URL
     * @type {string}
     * @memberof CreateWebhookRequestBody
     */
    'url': string;
}
/**
 * A webhook response body
 * @export
 * @interface CreateWebhookResponseBody
 */
export interface CreateWebhookResponseBody {
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof CreateWebhookResponseBody
     */
    'webhook_id': string;
    /**
     * A URL
     * @type {string}
     * @memberof CreateWebhookResponseBody
     */
    'url': string;
    /**
     *
     * @type {WebhookEvent}
     * @memberof CreateWebhookResponseBody
     */
    'event': WebhookEvent;
}
/**
 * The customs declaration for a single item in the shipment.
 * @export
 * @interface CustomsItem
 */
export interface CustomsItem {
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof CustomsItem
     */
    'customs_item_id': string;
    /**
     * A description of the item
     * @type {string}
     * @memberof CustomsItem
     */
    'description'?: string | null;
    /**
     * The quantity of this item in the shipment.
     * @type {number}
     * @memberof CustomsItem
     */
    'quantity'?: number;
    /**
     *
     * @type {MonetaryValue}
     * @memberof CustomsItem
     */
    'value'?: MonetaryValue;
    /**
     *
     * @type {Weight}
     * @memberof CustomsItem
     */
    'weight'?: Weight;
    /**
     * The [Harmonized Tariff Code](https://en.wikipedia.org/wiki/Harmonized_System) of this item.
     * @type {string}
     * @memberof CustomsItem
     */
    'harmonized_tariff_code'?: string | null;
    /**
     * A two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1)
     * @type {string}
     * @memberof CustomsItem
     */
    'country_of_origin'?: string | null;
    /**
     *
     * @type {string}
     * @memberof CustomsItem
     */
    'unit_of_measure'?: string | null;
    /**
     * The SKU (Stock Keeping Unit) of the customs item
     * @type {string}
     * @memberof CustomsItem
     */
    'sku'?: string | null;
    /**
     * Description of the Custom Item\'s SKU
     * @type {string}
     * @memberof CustomsItem
     */
    'sku_description'?: string | null;
}
/**
 * The possible default label layout values
 * @export
 * @enum {string}
 */
export declare const DefaultLabelLayout: {
    readonly _4x6: "4x6";
    readonly Letter: "Letter";
};
export type DefaultLabelLayout = typeof DefaultLabelLayout[keyof typeof DefaultLabelLayout];
/**
 *
 * @export
 * @interface DeletePickupByIdResponseBody
 */
export interface DeletePickupByIdResponseBody {
    /**
     * A UUID (a.k.a. GUID) that uniquely identifies a resource
     * @type {string}
     * @memberof DeletePickupByIdResponseBody
     */
    'request_id': string;
    /**
     * The errors associated with the failed API call
     * @type {Array<ModelError>}
     * @memberof DeletePickupByIdResponseBody
     */
    'errors': Array<ModelError>;
    /**
     * Pickup Resource ID
     * @type {string}
     * @memberof DeletePickupByIdResponseBody
     */
    'pickup_id': string;
}
/**
 * A delete scheduled pickup response body
 * @export
 * @interface DeleteScheduledPickupResponseBody
 */
export interface DeleteScheduledPickupResponseBody {
    /**
     * Pickup Resource ID
     * @type {string}
     * @memberof DeleteScheduledPickupResponseBody
     */
    'pickup_id': string;
}
/**
 * The possible delivery confirmation values
 * @export
 * @enum {string}
 */
export declare const DeliveryConfirmation: {
    readonly None: "none";
    readonly Delivery: "delivery";
    readonly Signature: "signature";
    readonly AdultSignature: "adult_signature";
    readonly DirectSignature: "direct_signature";
    readonly DeliveryMailed: "delivery_mailed";
    readonly VerbalConfirmation: "verbal_confirmation";
};
export type DeliveryConfirmation = typeof DeliveryConfirmation[keyof typeof DeliveryConfirmation];
/**
 * Deprecated manifest resource
 * @export
 * @interface DeprecatedManifest
 */
export interface DeprecatedManifest {
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof DeprecatedManifest
     */
    'manifest_id'?: string;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof DeprecatedManifest
     */
    'form_id'?: string;
    /**
     * The date-time that the manifest was created
     * @type {string}
     * @memberof DeprecatedManifest
     * @deprecated
     */
    'created_at'?: string;
    /**
     * The date-time that the manifests shipments will be picked up
     * @type {string}
     * @memberof DeprecatedManifest
     * @deprecated
     */
    'ship_date'?: string;
    /**
     * The number of shipments that are included in this manifest
     * @type {number}
     * @memberof DeprecatedManifest
     * @deprecated
     */
    'shipments'?: number;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof DeprecatedManifest
     */
    'warehouse_id'?: string;
    /**
     * A string that uniquely identifies the submission
     * @type {string}
     * @memberof DeprecatedManifest
     * @deprecated
     */
    'submission_id'?: string;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof DeprecatedManifest
     */
    'carrier_id'?: string;
    /**
     *
     * @type {ManifestDownload}
     * @memberof DeprecatedManifest
     */
    'manifest_download'?: ManifestDownload;
    /**
     * An array of the label ids used in this manifest.
     * @type {Array<string>}
     * @memberof DeprecatedManifest
     * @deprecated
     */
    'label_ids'?: Array<string>;
}
/**
 * A DHL Express account settings
 * @export
 * @interface DhlExpressAccountSettings
 */
export interface DhlExpressAccountSettings {
    /**
     * Account nickname
     * @type {string}
     * @memberof DhlExpressAccountSettings
     */
    'nickname'?: string;
    /**
     * Indicates if the account number should be hidden on the archive documentation
     * @type {boolean}
     * @memberof DhlExpressAccountSettings
     */
    'should_hide_account_number_on_archive_doc'?: boolean;
    /**
     * Indicates if this is primary account
     * @type {boolean}
     * @memberof DhlExpressAccountSettings
     */
    'is_primary_account'?: boolean;
}
/**
 * A DHL Express response body
 * @export
 * @interface DhlExpressSettingsResponseBody
 */
export interface DhlExpressSettingsResponseBody {
    /**
     * Account nickname
     * @type {string}
     * @memberof DhlExpressSettingsResponseBody
     */
    'nickname'?: string;
    /**
     * Indicates if the account number should be hidden on the archive documentation
     * @type {boolean}
     * @memberof DhlExpressSettingsResponseBody
     */
    'should_hide_account_number_on_archive_doc'?: boolean;
    /**
     * Indicates if this is primary account
     * @type {boolean}
     * @memberof DhlExpressSettingsResponseBody
     */
    'is_primary_account'?: boolean;
}
/**
 * The dimension units that are supported by ShipEngine.
 * @export
 * @enum {string}
 */
export declare const DimensionUnit: {
    readonly Inch: "inch";
    readonly Centimeter: "centimeter";
};
export type DimensionUnit = typeof DimensionUnit[keyof typeof DimensionUnit];
/**
 * The dimensions of a package
 * @export
 * @interface Dimensions
 */
export interface Dimensions {
    /**
     *
     * @type {DimensionUnit}
     * @memberof Dimensions
     */
    'unit': DimensionUnit;
    /**
     * The length of the package, in the specified unit
     * @type {number}
     * @memberof Dimensions
     */
    'length': number;
    /**
     * The width of the package, in the specified unit
     * @type {number}
     * @memberof Dimensions
     */
    'width': number;
    /**
     * The length of the package, in the specified unit
     * @type {number}
     * @memberof Dimensions
     */
    'height': number;
}
/**
 * The display format that the label should be shown in.
 * @export
 * @enum {string}
 */
export declare const DisplayScheme: {
    readonly Label: "label";
    readonly QrCode: "qr_code";
    readonly LabelAndQrCode: "label_and_qr_code";
};
export type DisplayScheme = typeof DisplayScheme[keyof typeof DisplayScheme];
/**
 * The error code specified for the failed API Call
 * @export
 * @enum {string}
 */
export declare const ErrorCode: {
    readonly AutoFundNotSupported: "auto_fund_not_supported";
    readonly BatchCannotBeModified: "batch_cannot_be_modified";
    readonly CarrierConflict: "carrier_conflict";
    readonly CarrierDisconnected: "carrier_disconnected";
    readonly CarrierNotConnected: "carrier_not_connected";
    readonly CarrierNotSupported: "carrier_not_supported";
    readonly ConfirmationNotSupported: "confirmation_not_supported";
    readonly DefaultWarehouseCannotBeDeleted: "default_warehouse_cannot_be_deleted";
    readonly FieldConflict: "field_conflict";
    readonly FieldValueRequired: "field_value_required";
    readonly Forbidden: "forbidden";
    readonly IdentifierConflict: "identifier_conflict";
    readonly IdentifiersMustMatch: "identifiers_must_match";
    readonly InsufficientFunds: "insufficient_funds";
    readonly InvalidAddress: "invalid_address";
    readonly InvalidBillingPlan: "invalid_billing_plan";
    readonly InvalidFieldValue: "invalid_field_value";
    readonly InvalidIdentifier: "invalid_identifier";
    readonly InvalidStatus: "invalid_status";
    readonly InvalidStringLength: "invalid_string_length";
    readonly LabelImagesNotSupported: "label_images_not_supported";
    readonly MeterFailure: "meter_failure";
    readonly OrderSourceNotActive: "order_source_not_active";
    readonly RateLimitExceeded: "rate_limit_exceeded";
    readonly RefreshNotSupported: "refresh_not_supported";
    readonly RequestBodyRequired: "request_body_required";
    readonly ReturnLabelNotSupported: "return_label_not_supported";
    readonly SettingsNotSupported: "settings_not_supported";
    readonly SubscriptionInactive: "subscription_inactive";
    readonly TermsNotAccepted: "terms_not_accepted";
    readonly TrackingNotSupported: "tracking_not_supported";
    readonly TrialExpired: "trial_expired";
    readonly Unauthorized: "unauthorized";
    readonly Unknown: "unknown";
    readonly Unspecified: "unspecified";
    readonly VerificationFailure: "verification_failure";
    readonly WarehouseConflict: "warehouse_conflict";
    readonly WebhookEventTypeConflict: "webhook_event_type_conflict";
};
export type ErrorCode = typeof ErrorCode[keyof typeof ErrorCode];
/**
 * An error response body
 * @export
 * @interface ErrorResponseBody
 */
export interface ErrorResponseBody {
    /**
     * A UUID (a.k.a. GUID) that uniquely identifies a resource
     * @type {string}
     * @memberof ErrorResponseBody
     */
    'request_id': string;
    /**
     * The errors associated with the failed API call
     * @type {Array<ModelError>}
     * @memberof ErrorResponseBody
     */
    'errors': Array<ModelError>;
}
/**
 * The source of the error, as indicated by the name this informs us if the API call failed because of the carrier, the order source, or the ShipEngine API itself.
 * @export
 * @enum {string}
 */
export declare const ErrorSource: {
    readonly Carrier: "carrier";
    readonly OrderSource: "order_source";
    readonly Shipengine: "shipengine";
};
export type ErrorSource = typeof ErrorSource[keyof typeof ErrorSource];
/**
 * The type of error
 * @export
 * @enum {string}
 */
export declare const ErrorType: {
    readonly AccountStatus: "account_status";
    readonly BusinessRules: "business_rules";
    readonly Validation: "validation";
    readonly Security: "security";
    readonly System: "system";
    readonly Integrations: "integrations";
};
export type ErrorType = typeof ErrorType[keyof typeof ErrorType];
/**
 * An error response body
 * @export
 * @interface ErrorWithLabelIdResponseBody
 */
export interface ErrorWithLabelIdResponseBody {
    /**
     * A UUID (a.k.a. GUID) that uniquely identifies a resource
     * @type {string}
     * @memberof ErrorWithLabelIdResponseBody
     */
    'request_id': string;
    /**
     * The errors associated with the failed API call
     * @type {Array<ModelError>}
     * @memberof ErrorWithLabelIdResponseBody
     */
    'errors': Array<ModelError>;
}
/**
 * @type EstimateRatesRequestBody
 * A rate estimate request body
 * @export
 */
export type EstimateRatesRequestBody = RateEstimateOptions;
/**
 * A Fedex account settings request body
 * @export
 * @interface FedexAccountSettings
 */
export interface FedexAccountSettings {
    /**
     * Account nickname
     * @type {string}
     * @memberof FedexAccountSettings
     */
    'nickname'?: string;
    /**
     *
     * @type {FedexPickupType}
     * @memberof FedexAccountSettings
     */
    'pickup_type'?: FedexPickupType;
    /**
     *
     * @type {SmartPostHub}
     * @memberof FedexAccountSettings
     */
    'smart_post_hub'?: SmartPostHub;
    /**
     *
     * @type {AncillaryServiceEndorsement}
     * @memberof FedexAccountSettings
     */
    'smart_post_endorsement'?: AncillaryServiceEndorsement;
    /**
     *
     * @type {boolean}
     * @memberof FedexAccountSettings
     */
    'is_primary_account'?: boolean;
    /**
     *
     * @type {string}
     * @memberof FedexAccountSettings
     */
    'signature_image'?: string;
    /**
     *
     * @type {string}
     * @memberof FedexAccountSettings
     */
    'letterhead_image'?: string;
}
/**
 * A Fedex account settings request body
 * @export
 * @interface FedexAccountSettingsRequestBody
 */
export interface FedexAccountSettingsRequestBody {
    /**
     * Account nickname
     * @type {string}
     * @memberof FedexAccountSettingsRequestBody
     */
    'nickname'?: string;
    /**
     *
     * @type {FedexPickupType}
     * @memberof FedexAccountSettingsRequestBody
     */
    'pickup_type'?: FedexPickupType;
    /**
     *
     * @type {SmartPostHub}
     * @memberof FedexAccountSettingsRequestBody
     */
    'smart_post_hub'?: SmartPostHub;
    /**
     *
     * @type {AncillaryServiceEndorsement}
     * @memberof FedexAccountSettingsRequestBody
     */
    'smart_post_endorsement'?: AncillaryServiceEndorsement;
    /**
     *
     * @type {boolean}
     * @memberof FedexAccountSettingsRequestBody
     */
    'is_primary_account'?: boolean;
    /**
     *
     * @type {string}
     * @memberof FedexAccountSettingsRequestBody
     */
    'signature_image'?: string;
    /**
     *
     * @type {string}
     * @memberof FedexAccountSettingsRequestBody
     */
    'letterhead_image'?: string;
}
/**
 * Determines how FedEx will pickup your packages  |Pickup Type               |Description |--------------------------|----------------------------------------- |`none`                    | Not specified |`regular_pickup`          | You already have a daily pickup scheduled with FedEx |`request_courier`         | You will call FedEx to request a courier |`drop_box`                | You will drop-off packages in a FedEx drop box |`business_service_center` | You will drop-off packages at an authorized FedEx business service center |`station`                 | You will drop-off the package at a FedEx Station
 * @export
 * @enum {string}
 */
export declare const FedexPickupType: {
    readonly None: "none";
    readonly RegularPickup: "regular_pickup";
    readonly RequestCourier: "request_courier";
    readonly DropBox: "drop_box";
    readonly BusinessServiceCenter: "business_service_center";
    readonly Station: "station";
};
export type FedexPickupType = typeof FedexPickupType[keyof typeof FedexPickupType];
/**
 * A Fedex settings response body
 * @export
 * @interface FedexSettingsResponseBody
 */
export interface FedexSettingsResponseBody {
    /**
     * Account nickname
     * @type {string}
     * @memberof FedexSettingsResponseBody
     */
    'nickname'?: string;
    /**
     *
     * @type {FedexPickupType}
     * @memberof FedexSettingsResponseBody
     */
    'pickup_type'?: FedexPickupType;
    /**
     *
     * @type {SmartPostHub}
     * @memberof FedexSettingsResponseBody
     */
    'smart_post_hub'?: SmartPostHub;
    /**
     *
     * @type {AncillaryServiceEndorsement}
     * @memberof FedexSettingsResponseBody
     */
    'smart_post_endorsement'?: AncillaryServiceEndorsement;
    /**
     *
     * @type {boolean}
     * @memberof FedexSettingsResponseBody
     */
    'is_primary_account'?: boolean;
    /**
     *
     * @type {string}
     * @memberof FedexSettingsResponseBody
     */
    'signature_image'?: string;
    /**
     *
     * @type {string}
     * @memberof FedexSettingsResponseBody
     */
    'letterhead_image'?: string;
}
/**
 * A get account images by id response body
 * @export
 * @interface GetAccountSettingsImagesResponseBody
 */
export interface GetAccountSettingsImagesResponseBody {
    /**
     * Used to identify an image resource.
     * @type {string}
     * @memberof GetAccountSettingsImagesResponseBody
     */
    'label_image_id'?: string;
    /**
     * A human readable name for the image.
     * @type {string}
     * @memberof GetAccountSettingsImagesResponseBody
     */
    'name'?: string;
    /**
     * Indicates whether this image is set as default.
     * @type {boolean}
     * @memberof GetAccountSettingsImagesResponseBody
     */
    'is_default'?: boolean;
    /**
     * The image type
     * @type {string}
     * @memberof GetAccountSettingsImagesResponseBody
     */
    'image_content_type'?: GetAccountSettingsImagesResponseBodyImageContentTypeEnum;
    /**
     * A base64 encoded string representation of the image.
     * @type {string}
     * @memberof GetAccountSettingsImagesResponseBody
     */
    'image_data'?: string;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date and time.
     * @type {string}
     * @memberof GetAccountSettingsImagesResponseBody
     */
    'created_at'?: string;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date and time.
     * @type {string}
     * @memberof GetAccountSettingsImagesResponseBody
     */
    'modified_at'?: string;
}
export declare const GetAccountSettingsImagesResponseBodyImageContentTypeEnum: {
    readonly Png: "image/png";
    readonly Jpeg: "image/jpeg";
};
export type GetAccountSettingsImagesResponseBodyImageContentTypeEnum = typeof GetAccountSettingsImagesResponseBodyImageContentTypeEnum[keyof typeof GetAccountSettingsImagesResponseBodyImageContentTypeEnum];
/**
 *
 * @export
 * @interface GetAccountSettingsResponseBody
 */
export interface GetAccountSettingsResponseBody {
    /**
     *
     * @type {DefaultLabelLayout}
     * @memberof GetAccountSettingsResponseBody
     */
    'default_label_layout'?: DefaultLabelLayout;
}
/**
 * A get batch by external id response body
 * @export
 * @interface GetBatchByExternalIdResponseBody
 */
export interface GetBatchByExternalIdResponseBody {
    /**
     *
     * @type {LabelLayout}
     * @memberof GetBatchByExternalIdResponseBody
     */
    'label_layout': LabelLayout;
    /**
     *
     * @type {LabelFormat}
     * @memberof GetBatchByExternalIdResponseBody
     */
    'label_format': LabelFormat;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof GetBatchByExternalIdResponseBody
     */
    'batch_id': string;
    /**
     * The batch number.
     * @type {string}
     * @memberof GetBatchByExternalIdResponseBody
     */
    'batch_number': string;
    /**
     * A string that uniquely identifies the external batch
     * @type {string}
     * @memberof GetBatchByExternalIdResponseBody
     */
    'external_batch_id': string | null;
    /**
     * Custom notes you can add for each created batch
     * @type {string}
     * @memberof GetBatchByExternalIdResponseBody
     */
    'batch_notes': string | null;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date and time.
     * @type {string}
     * @memberof GetBatchByExternalIdResponseBody
     */
    'created_at': string;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date and time.
     * @type {string}
     * @memberof GetBatchByExternalIdResponseBody
     */
    'processed_at': string | null;
    /**
     * The number of errors that occurred while generating the batch
     * @type {number}
     * @memberof GetBatchByExternalIdResponseBody
     */
    'errors': number;
    /**
     * The number of warnings that occurred while generating the batch
     * @type {number}
     * @memberof GetBatchByExternalIdResponseBody
     */
    'warnings': number;
    /**
     * The number of labels generated in the batch
     * @type {number}
     * @memberof GetBatchByExternalIdResponseBody
     */
    'completed': number;
    /**
     * The number of forms for customs that are available for download
     * @type {number}
     * @memberof GetBatchByExternalIdResponseBody
     */
    'forms': number;
    /**
     * The total of errors, warnings, and completed properties
     * @type {number}
     * @memberof GetBatchByExternalIdResponseBody
     */
    'count': number;
    /**
     *
     * @type {OptionalLink}
     * @memberof GetBatchByExternalIdResponseBody
     */
    'batch_shipments_url': OptionalLink;
    /**
     *
     * @type {OptionalLink}
     * @memberof GetBatchByExternalIdResponseBody
     */
    'batch_labels_url': OptionalLink;
    /**
     *
     * @type {BatchBatchErrorsUrl}
     * @memberof GetBatchByExternalIdResponseBody
     */
    'batch_errors_url': BatchBatchErrorsUrl;
    /**
     *
     * @type {BatchLabelDownload}
     * @memberof GetBatchByExternalIdResponseBody
     */
    'label_download': BatchLabelDownload;
    /**
     *
     * @type {BatchFormDownload}
     * @memberof GetBatchByExternalIdResponseBody
     */
    'form_download': BatchFormDownload;
    /**
     *
     * @type {BatchStatus}
     * @memberof GetBatchByExternalIdResponseBody
     */
    'status': BatchStatus;
}
/**
 * A get batch by id response body
 * @export
 * @interface GetBatchByIdResponseBody
 */
export interface GetBatchByIdResponseBody {
    /**
     *
     * @type {LabelLayout}
     * @memberof GetBatchByIdResponseBody
     */
    'label_layout': LabelLayout;
    /**
     *
     * @type {LabelFormat}
     * @memberof GetBatchByIdResponseBody
     */
    'label_format': LabelFormat;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof GetBatchByIdResponseBody
     */
    'batch_id': string;
    /**
     * The batch number.
     * @type {string}
     * @memberof GetBatchByIdResponseBody
     */
    'batch_number': string;
    /**
     * A string that uniquely identifies the external batch
     * @type {string}
     * @memberof GetBatchByIdResponseBody
     */
    'external_batch_id': string | null;
    /**
     * Custom notes you can add for each created batch
     * @type {string}
     * @memberof GetBatchByIdResponseBody
     */
    'batch_notes': string | null;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date and time.
     * @type {string}
     * @memberof GetBatchByIdResponseBody
     */
    'created_at': string;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date and time.
     * @type {string}
     * @memberof GetBatchByIdResponseBody
     */
    'processed_at': string | null;
    /**
     * The number of errors that occurred while generating the batch
     * @type {number}
     * @memberof GetBatchByIdResponseBody
     */
    'errors': number;
    /**
     * The number of warnings that occurred while generating the batch
     * @type {number}
     * @memberof GetBatchByIdResponseBody
     */
    'warnings': number;
    /**
     * The number of labels generated in the batch
     * @type {number}
     * @memberof GetBatchByIdResponseBody
     */
    'completed': number;
    /**
     * The number of forms for customs that are available for download
     * @type {number}
     * @memberof GetBatchByIdResponseBody
     */
    'forms': number;
    /**
     * The total of errors, warnings, and completed properties
     * @type {number}
     * @memberof GetBatchByIdResponseBody
     */
    'count': number;
    /**
     *
     * @type {OptionalLink}
     * @memberof GetBatchByIdResponseBody
     */
    'batch_shipments_url': OptionalLink;
    /**
     *
     * @type {OptionalLink}
     * @memberof GetBatchByIdResponseBody
     */
    'batch_labels_url': OptionalLink;
    /**
     *
     * @type {BatchBatchErrorsUrl}
     * @memberof GetBatchByIdResponseBody
     */
    'batch_errors_url': BatchBatchErrorsUrl;
    /**
     *
     * @type {BatchLabelDownload}
     * @memberof GetBatchByIdResponseBody
     */
    'label_download': BatchLabelDownload;
    /**
     *
     * @type {BatchFormDownload}
     * @memberof GetBatchByIdResponseBody
     */
    'form_download': BatchFormDownload;
    /**
     *
     * @type {BatchStatus}
     * @memberof GetBatchByIdResponseBody
     */
    'status': BatchStatus;
}
/**
 * A get carrier by id response body
 * @export
 * @interface GetCarrierByIdResponseBody
 */
export interface GetCarrierByIdResponseBody {
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof GetCarrierByIdResponseBody
     */
    'carrier_id'?: string;
    /**
     * A [shipping carrier](https://www.shipengine.com/docs/carriers/setup/), such as `fedex`, `dhl_express`, `stamps_com`, etc.
     * @type {string}
     * @memberof GetCarrierByIdResponseBody
     */
    'carrier_code'?: string;
    /**
     * The account number that the carrier is connected to.
     * @type {string}
     * @memberof GetCarrierByIdResponseBody
     */
    'account_number'?: string;
    /**
     * Indicates whether the carrier requires funding to use its services
     * @type {boolean}
     * @memberof GetCarrierByIdResponseBody
     */
    'requires_funded_amount'?: boolean;
    /**
     * Current available balance
     * @type {number}
     * @memberof GetCarrierByIdResponseBody
     */
    'balance'?: number;
    /**
     * Nickname given to the account when initially setting up the carrier.
     * @type {string}
     * @memberof GetCarrierByIdResponseBody
     */
    'nickname'?: string;
    /**
     * Screen readable name
     * @type {string}
     * @memberof GetCarrierByIdResponseBody
     */
    'friendly_name'?: string;
    /**
     * Is this the primary carrier that is used by default when no carrier is specified in label/shipment creation
     * @type {boolean}
     * @memberof GetCarrierByIdResponseBody
     */
    'primary'?: boolean;
    /**
     * Carrier supports multiple packages per shipment
     * @type {boolean}
     * @memberof GetCarrierByIdResponseBody
     */
    'has_multi_package_supporting_services'?: boolean;
    /**
     * The carrier supports adding custom label messages to an order.
     * @type {boolean}
     * @memberof GetCarrierByIdResponseBody
     */
    'supports_label_messages'?: boolean;
    /**
     * The carrier is disabled by the current ShipEngine account\'s billing plan.
     * @type {boolean}
     * @memberof GetCarrierByIdResponseBody
     */
    'disabled_by_billing_plan'?: boolean;
    /**
     * A list of services that are offered by the carrier
     * @type {Array<Service>}
     * @memberof GetCarrierByIdResponseBody
     */
    'services'?: Array<Service>;
    /**
     * A list of package types that are supported by the carrier
     * @type {Array<PackageType>}
     * @memberof GetCarrierByIdResponseBody
     */
    'packages'?: Array<PackageType>;
    /**
     * A list of options that are available to that carrier
     * @type {Array<CarrierAdvancedOption>}
     * @memberof GetCarrierByIdResponseBody
     */
    'options'?: Array<CarrierAdvancedOption>;
}
/**
 * A carrier list options response body
 * @export
 * @interface GetCarrierOptionsResponseBody
 */
export interface GetCarrierOptionsResponseBody {
    /**
     * AN array of carrier options
     * @type {Array<GetCarrierOptionsResponseBodyOptionsInner>}
     * @memberof GetCarrierOptionsResponseBody
     */
    'options'?: Array<GetCarrierOptionsResponseBodyOptionsInner>;
}
/**
 * Carrer options
 * @export
 * @interface GetCarrierOptionsResponseBodyOptionsInner
 */
export interface GetCarrierOptionsResponseBodyOptionsInner {
    /**
     * Name of advanced option
     * @type {string}
     * @memberof GetCarrierOptionsResponseBodyOptionsInner
     */
    'name'?: string;
    /**
     * Default value of option
     * @type {string}
     * @memberof GetCarrierOptionsResponseBodyOptionsInner
     */
    'default_value'?: string;
    /**
     * Description of option
     * @type {string}
     * @memberof GetCarrierOptionsResponseBodyOptionsInner
     */
    'description'?: string;
}
/**
 * @type GetCarrierSettingsResponseBody
 * @export
 */
export type GetCarrierSettingsResponseBody = DhlExpressSettingsResponseBody | FedexSettingsResponseBody | UpsSettingsResponseBody;
/**
 *
 * @export
 * @interface GetCarriersResponseBody
 */
export interface GetCarriersResponseBody {
    /**
     * The carrier response body
     * @type {Array<Carrier>}
     * @memberof GetCarriersResponseBody
     */
    'carriers': Array<Carrier>;
    /**
     * A UUID (a.k.a. GUID) that uniquely identifies a resource
     * @type {string}
     * @memberof GetCarriersResponseBody
     */
    'request_id': string;
    /**
     * The errors associated with the failed API call
     * @type {Array<ModelError>}
     * @memberof GetCarriersResponseBody
     */
    'errors': Array<ModelError>;
}
/**
 * A get insurance balance response body
 * @export
 * @interface GetInsuranceBalanceResponseBody
 */
export interface GetInsuranceBalanceResponseBody {
    /**
     * The currencies that are supported by ShipEngine are the ones that specified by ISO 4217: https://www.iso.org/iso-4217-currency-codes.html
     * @type {string}
     * @memberof GetInsuranceBalanceResponseBody
     */
    'currency': string;
    /**
     * The monetary amount, in the specified currency.
     * @type {number}
     * @memberof GetInsuranceBalanceResponseBody
     */
    'amount': number;
}
/**
 * A get label by external shipment id response body
 * @export
 * @interface GetLabelByExternalShipmentIdResponseBody
 */
export interface GetLabelByExternalShipmentIdResponseBody {
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof GetLabelByExternalShipmentIdResponseBody
     */
    'label_id'?: string;
    /**
     *
     * @type {LabelStatus}
     * @memberof GetLabelByExternalShipmentIdResponseBody
     */
    'status'?: LabelStatus;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof GetLabelByExternalShipmentIdResponseBody
     */
    'shipment_id'?: string;
    /**
     *
     * @type {Shipment}
     * @memberof GetLabelByExternalShipmentIdResponseBody
     */
    'shipment'?: Shipment;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date, but not a specific time.  The value _may_ contain a time component, but it will be set to `00:00:00` UTC by ShipEngine.
     * @type {string}
     * @memberof GetLabelByExternalShipmentIdResponseBody
     */
    'ship_date'?: string;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date and time.
     * @type {string}
     * @memberof GetLabelByExternalShipmentIdResponseBody
     */
    'created_at'?: string;
    /**
     *
     * @type {LabelShipmentCost}
     * @memberof GetLabelByExternalShipmentIdResponseBody
     */
    'shipment_cost'?: LabelShipmentCost;
    /**
     *
     * @type {LabelInsuranceCost}
     * @memberof GetLabelByExternalShipmentIdResponseBody
     */
    'insurance_cost'?: LabelInsuranceCost;
    /**
     * The tracking number for the package. Tracking number formats vary across carriers.
     * @type {string}
     * @memberof GetLabelByExternalShipmentIdResponseBody
     */
    'tracking_number'?: string;
    /**
     * Indicates whether this is a return label.  You may also want to set the `rma_number` so you know what is being returned.
     * @type {boolean}
     * @memberof GetLabelByExternalShipmentIdResponseBody
     */
    'is_return_label'?: boolean;
    /**
     * An optional Return Merchandise Authorization number.  This field is useful for return labels.  You can set it to any string value.
     * @type {string}
     * @memberof GetLabelByExternalShipmentIdResponseBody
     */
    'rma_number'?: string | null;
    /**
     * Indicates whether this is an international shipment.  That is, the originating country and destination country are different.
     * @type {boolean}
     * @memberof GetLabelByExternalShipmentIdResponseBody
     */
    'is_international'?: boolean;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof GetLabelByExternalShipmentIdResponseBody
     */
    'batch_id'?: string;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof GetLabelByExternalShipmentIdResponseBody
     */
    'carrier_id'?: string;
    /**
     *
     * @type {LabelChargeEvent}
     * @memberof GetLabelByExternalShipmentIdResponseBody
     */
    'charge_event'?: LabelChargeEvent;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof GetLabelByExternalShipmentIdResponseBody
     */
    'outbound_label_id'?: string;
    /**
     * A [carrier service](https://www.shipengine.com/docs/shipping/use-a-carrier-service/), such as `fedex_ground`, `usps_first_class_mail`, `flat_rate_envelope`, etc.
     * @type {string}
     * @memberof GetLabelByExternalShipmentIdResponseBody
     */
    'service_code'?: string;
    /**
     * Indicate if this label is being used only for testing purposes. If true, then no charge will be added to your account.
     * @type {boolean}
     * @memberof GetLabelByExternalShipmentIdResponseBody
     * @deprecated
     */
    'test_label'?: boolean;
    /**
     * A [package type](https://www.shipengine.com/docs/reference/list-carrier-packages/), such as `thick_envelope`, `small_flat_rate_box`, `large_package`, etc.  Use the code `package` for custom or unknown package types.
     * @type {string}
     * @memberof GetLabelByExternalShipmentIdResponseBody
     */
    'package_code'?: string;
    /**
     *
     * @type {ValidateAddress}
     * @memberof GetLabelByExternalShipmentIdResponseBody
     */
    'validate_address'?: ValidateAddress;
    /**
     * Indicates whether the label has been [voided](https://www.shipengine.com/docs/labels/voiding/)
     * @type {boolean}
     * @memberof GetLabelByExternalShipmentIdResponseBody
     */
    'voided'?: boolean;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date and time.
     * @type {string}
     * @memberof GetLabelByExternalShipmentIdResponseBody
     */
    'voided_at'?: string | null;
    /**
     *
     * @type {LabelDownloadType}
     * @memberof GetLabelByExternalShipmentIdResponseBody
     */
    'label_download_type'?: LabelDownloadType;
    /**
     *
     * @type {LabelFormat}
     * @memberof GetLabelByExternalShipmentIdResponseBody
     */
    'label_format'?: LabelFormat;
    /**
     *
     * @type {DisplayScheme}
     * @memberof GetLabelByExternalShipmentIdResponseBody
     */
    'display_scheme'?: DisplayScheme;
    /**
     *
     * @type {LabelLayout}
     * @memberof GetLabelByExternalShipmentIdResponseBody
     */
    'label_layout'?: LabelLayout;
    /**
     * Indicates whether the shipment is trackable, in which case the `tracking_status` field will reflect the current status and each package will have a `tracking_number`.
     * @type {boolean}
     * @memberof GetLabelByExternalShipmentIdResponseBody
     */
    'trackable'?: boolean;
    /**
     * Used to identify an image resource.
     * @type {string}
     * @memberof GetLabelByExternalShipmentIdResponseBody
     */
    'label_image_id'?: string | null;
    /**
     * A [shipping carrier](https://www.shipengine.com/docs/carriers/setup/), such as `fedex`, `dhl_express`, `stamps_com`, etc.
     * @type {string}
     * @memberof GetLabelByExternalShipmentIdResponseBody
     */
    'carrier_code'?: string;
    /**
     *
     * @type {TrackingStatus}
     * @memberof GetLabelByExternalShipmentIdResponseBody
     */
    'tracking_status'?: TrackingStatus;
    /**
     *
     * @type {LabelDownload}
     * @memberof GetLabelByExternalShipmentIdResponseBody
     */
    'label_download'?: LabelDownload;
    /**
     *
     * @type {Link}
     * @memberof GetLabelByExternalShipmentIdResponseBody
     */
    'form_download'?: Link | null;
    /**
     *
     * @type {Link}
     * @memberof GetLabelByExternalShipmentIdResponseBody
     */
    'insurance_claim'?: Link | null;
    /**
     * The label\'s package(s).  > **Note:** Some carriers only allow one package per label.  If you attempt to create a multi-package label for a carrier that doesn\'t allow it, an error will be returned.
     * @type {Array<Package>}
     * @memberof GetLabelByExternalShipmentIdResponseBody
     */
    'packages'?: Array<Package>;
    /**
     * Additional information some carriers may provide by which to identify a given label in their system.
     * @type {Array<AlternativeIdentifier>}
     * @memberof GetLabelByExternalShipmentIdResponseBody
     */
    'alternative_identifiers'?: Array<AlternativeIdentifier> | null;
}
/**
 * A get label by id response body
 * @export
 * @interface GetLabelByIdResponseBody
 */
export interface GetLabelByIdResponseBody {
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof GetLabelByIdResponseBody
     */
    'label_id'?: string;
    /**
     *
     * @type {LabelStatus}
     * @memberof GetLabelByIdResponseBody
     */
    'status'?: LabelStatus;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof GetLabelByIdResponseBody
     */
    'shipment_id'?: string;
    /**
     *
     * @type {Shipment}
     * @memberof GetLabelByIdResponseBody
     */
    'shipment'?: Shipment;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date, but not a specific time.  The value _may_ contain a time component, but it will be set to `00:00:00` UTC by ShipEngine.
     * @type {string}
     * @memberof GetLabelByIdResponseBody
     */
    'ship_date'?: string;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date and time.
     * @type {string}
     * @memberof GetLabelByIdResponseBody
     */
    'created_at'?: string;
    /**
     *
     * @type {LabelShipmentCost}
     * @memberof GetLabelByIdResponseBody
     */
    'shipment_cost'?: LabelShipmentCost;
    /**
     *
     * @type {LabelInsuranceCost}
     * @memberof GetLabelByIdResponseBody
     */
    'insurance_cost'?: LabelInsuranceCost;
    /**
     * The tracking number for the package. Tracking number formats vary across carriers.
     * @type {string}
     * @memberof GetLabelByIdResponseBody
     */
    'tracking_number'?: string;
    /**
     * Indicates whether this is a return label.  You may also want to set the `rma_number` so you know what is being returned.
     * @type {boolean}
     * @memberof GetLabelByIdResponseBody
     */
    'is_return_label'?: boolean;
    /**
     * An optional Return Merchandise Authorization number.  This field is useful for return labels.  You can set it to any string value.
     * @type {string}
     * @memberof GetLabelByIdResponseBody
     */
    'rma_number'?: string | null;
    /**
     * Indicates whether this is an international shipment.  That is, the originating country and destination country are different.
     * @type {boolean}
     * @memberof GetLabelByIdResponseBody
     */
    'is_international'?: boolean;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof GetLabelByIdResponseBody
     */
    'batch_id'?: string;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof GetLabelByIdResponseBody
     */
    'carrier_id'?: string;
    /**
     *
     * @type {LabelChargeEvent}
     * @memberof GetLabelByIdResponseBody
     */
    'charge_event'?: LabelChargeEvent;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof GetLabelByIdResponseBody
     */
    'outbound_label_id'?: string;
    /**
     * A [carrier service](https://www.shipengine.com/docs/shipping/use-a-carrier-service/), such as `fedex_ground`, `usps_first_class_mail`, `flat_rate_envelope`, etc.
     * @type {string}
     * @memberof GetLabelByIdResponseBody
     */
    'service_code'?: string;
    /**
     * Indicate if this label is being used only for testing purposes. If true, then no charge will be added to your account.
     * @type {boolean}
     * @memberof GetLabelByIdResponseBody
     * @deprecated
     */
    'test_label'?: boolean;
    /**
     * A [package type](https://www.shipengine.com/docs/reference/list-carrier-packages/), such as `thick_envelope`, `small_flat_rate_box`, `large_package`, etc.  Use the code `package` for custom or unknown package types.
     * @type {string}
     * @memberof GetLabelByIdResponseBody
     */
    'package_code'?: string;
    /**
     *
     * @type {ValidateAddress}
     * @memberof GetLabelByIdResponseBody
     */
    'validate_address'?: ValidateAddress;
    /**
     * Indicates whether the label has been [voided](https://www.shipengine.com/docs/labels/voiding/)
     * @type {boolean}
     * @memberof GetLabelByIdResponseBody
     */
    'voided'?: boolean;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date and time.
     * @type {string}
     * @memberof GetLabelByIdResponseBody
     */
    'voided_at'?: string | null;
    /**
     *
     * @type {LabelDownloadType}
     * @memberof GetLabelByIdResponseBody
     */
    'label_download_type'?: LabelDownloadType;
    /**
     *
     * @type {LabelFormat}
     * @memberof GetLabelByIdResponseBody
     */
    'label_format'?: LabelFormat;
    /**
     *
     * @type {DisplayScheme}
     * @memberof GetLabelByIdResponseBody
     */
    'display_scheme'?: DisplayScheme;
    /**
     *
     * @type {LabelLayout}
     * @memberof GetLabelByIdResponseBody
     */
    'label_layout'?: LabelLayout;
    /**
     * Indicates whether the shipment is trackable, in which case the `tracking_status` field will reflect the current status and each package will have a `tracking_number`.
     * @type {boolean}
     * @memberof GetLabelByIdResponseBody
     */
    'trackable'?: boolean;
    /**
     * Used to identify an image resource.
     * @type {string}
     * @memberof GetLabelByIdResponseBody
     */
    'label_image_id'?: string | null;
    /**
     * A [shipping carrier](https://www.shipengine.com/docs/carriers/setup/), such as `fedex`, `dhl_express`, `stamps_com`, etc.
     * @type {string}
     * @memberof GetLabelByIdResponseBody
     */
    'carrier_code'?: string;
    /**
     *
     * @type {TrackingStatus}
     * @memberof GetLabelByIdResponseBody
     */
    'tracking_status'?: TrackingStatus;
    /**
     *
     * @type {LabelDownload}
     * @memberof GetLabelByIdResponseBody
     */
    'label_download'?: LabelDownload;
    /**
     *
     * @type {Link}
     * @memberof GetLabelByIdResponseBody
     */
    'form_download'?: Link | null;
    /**
     *
     * @type {Link}
     * @memberof GetLabelByIdResponseBody
     */
    'insurance_claim'?: Link | null;
    /**
     * The label\'s package(s).  > **Note:** Some carriers only allow one package per label.  If you attempt to create a multi-package label for a carrier that doesn\'t allow it, an error will be returned.
     * @type {Array<Package>}
     * @memberof GetLabelByIdResponseBody
     */
    'packages'?: Array<Package>;
    /**
     * Additional information some carriers may provide by which to identify a given label in their system.
     * @type {Array<AlternativeIdentifier>}
     * @memberof GetLabelByIdResponseBody
     */
    'alternative_identifiers'?: Array<AlternativeIdentifier> | null;
}
/**
 * A get manifest by id response body
 * @export
 * @interface GetManifestByIdResponseBody
 */
export interface GetManifestByIdResponseBody {
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof GetManifestByIdResponseBody
     */
    'manifest_id': string;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof GetManifestByIdResponseBody
     */
    'form_id': string;
    /**
     * The date-time that the manifest was created
     * @type {string}
     * @memberof GetManifestByIdResponseBody
     */
    'created_at': string;
    /**
     * The date-time that the manifests shipments will be picked up
     * @type {string}
     * @memberof GetManifestByIdResponseBody
     */
    'ship_date': string;
    /**
     * The number of shipments that are included in this manifest
     * @type {number}
     * @memberof GetManifestByIdResponseBody
     */
    'shipments': number;
    /**
     * An array of the label ids used in this manifest.
     * @type {Array<string>}
     * @memberof GetManifestByIdResponseBody
     */
    'label_ids': Array<string>;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof GetManifestByIdResponseBody
     */
    'warehouse_id': string;
    /**
     * A string that uniquely identifies the submission
     * @type {string}
     * @memberof GetManifestByIdResponseBody
     */
    'submission_id': string;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof GetManifestByIdResponseBody
     */
    'carrier_id': string;
    /**
     *
     * @type {ManifestDownload}
     * @memberof GetManifestByIdResponseBody
     */
    'manifest_download': ManifestDownload;
}
/**
 * A get package type by id response body
 * @export
 * @interface GetPackageTypeByIdResponseBody
 */
export interface GetPackageTypeByIdResponseBody {
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof GetPackageTypeByIdResponseBody
     */
    'package_id'?: string;
    /**
     * A [package type](https://www.shipengine.com/docs/reference/list-carrier-packages/), such as `thick_envelope`, `small_flat_rate_box`, `large_package`, etc.  Use the code `package` for custom or unknown package types.
     * @type {string}
     * @memberof GetPackageTypeByIdResponseBody
     */
    'package_code': string;
    /**
     *
     * @type {string}
     * @memberof GetPackageTypeByIdResponseBody
     */
    'name': string;
    /**
     *
     * @type {Dimensions}
     * @memberof GetPackageTypeByIdResponseBody
     */
    'dimensions'?: Dimensions;
    /**
     * Provides a helpful description for the custom package.
     * @type {string}
     * @memberof GetPackageTypeByIdResponseBody
     */
    'description'?: string | null;
}
/**
 *
 * @export
 * @interface GetPickupByIdResponseBody
 */
export interface GetPickupByIdResponseBody {
    /**
     * Pickup Resource ID
     * @type {string}
     * @memberof GetPickupByIdResponseBody
     */
    'pickup_id': string;
    /**
     * Label IDs that will be included in the pickup request
     * @type {Array<string>}
     * @memberof GetPickupByIdResponseBody
     */
    'label_ids': Array<string>;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date and time.
     * @type {string}
     * @memberof GetPickupByIdResponseBody
     */
    'created_at': string;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date and time.
     * @type {string}
     * @memberof GetPickupByIdResponseBody
     */
    'cancelled_at'?: string;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof GetPickupByIdResponseBody
     */
    'carrier_id': string;
    /**
     * The carrier confirmation number for the scheduled pickup.
     * @type {string}
     * @memberof GetPickupByIdResponseBody
     */
    'confirmation_number': string | null;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof GetPickupByIdResponseBody
     */
    'warehouse_id': string;
    /**
     *
     * @type {Address}
     * @memberof GetPickupByIdResponseBody
     */
    'pickup_address': Address;
    /**
     *
     * @type {ContactDetails}
     * @memberof GetPickupByIdResponseBody
     */
    'contact_details': ContactDetails;
    /**
     * Used by some carriers to give special instructions for a package pickup
     * @type {string}
     * @memberof GetPickupByIdResponseBody
     */
    'pickup_notes'?: string;
    /**
     *
     * @type {PickupWindow}
     * @memberof GetPickupByIdResponseBody
     */
    'pickup_window': PickupWindow;
    /**
     * An array of available pickup windows. Carriers can return multiple times that they will pickup packages.
     * @type {Array<PickupWindows>}
     * @memberof GetPickupByIdResponseBody
     */
    'pickup_windows'?: Array<PickupWindows>;
    /**
     * A UUID (a.k.a. GUID) that uniquely identifies a resource
     * @type {string}
     * @memberof GetPickupByIdResponseBody
     */
    'request_id': string;
    /**
     * The errors associated with the failed API call
     * @type {Array<ModelError>}
     * @memberof GetPickupByIdResponseBody
     */
    'errors': Array<ModelError>;
}
/**
 *
 * @export
 * @interface GetPickupsResponseBody
 */
export interface GetPickupsResponseBody {
    /**
     * An array of pickups associated with the user\'s account.
     * @type {Array<Pickup>}
     * @memberof GetPickupsResponseBody
     */
    'pickups': Array<Pickup>;
    /**
     * The total number of pickups returned
     * @type {number}
     * @memberof GetPickupsResponseBody
     */
    'total': number;
    /**
     * Current page of the list pickups results
     * @type {number}
     * @memberof GetPickupsResponseBody
     */
    'page': number;
    /**
     * Total number of pages for list pickups results
     * @type {number}
     * @memberof GetPickupsResponseBody
     */
    'pages': number;
    /**
     *
     * @type {ListManifestsResponseBodyLinks}
     * @memberof GetPickupsResponseBody
     */
    'links': ListManifestsResponseBodyLinks;
    /**
     * A UUID (a.k.a. GUID) that uniquely identifies a resource
     * @type {string}
     * @memberof GetPickupsResponseBody
     */
    'request_id': string;
    /**
     * The errors associated with the failed API call
     * @type {Array<ModelError>}
     * @memberof GetPickupsResponseBody
     */
    'errors': Array<ModelError>;
}
/**
 * A rate response body
 * @export
 * @interface GetRateByIdResponseBody
 */
export interface GetRateByIdResponseBody {
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof GetRateByIdResponseBody
     */
    'rate_id': string;
    /**
     *
     * @type {RateType}
     * @memberof GetRateByIdResponseBody
     */
    'rate_type': RateType;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof GetRateByIdResponseBody
     */
    'carrier_id': string;
    /**
     *
     * @type {RateShippingAmount}
     * @memberof GetRateByIdResponseBody
     */
    'shipping_amount': RateShippingAmount;
    /**
     *
     * @type {RateInsuranceAmount}
     * @memberof GetRateByIdResponseBody
     */
    'insurance_amount': RateInsuranceAmount;
    /**
     *
     * @type {RateConfirmationAmount}
     * @memberof GetRateByIdResponseBody
     */
    'confirmation_amount': RateConfirmationAmount;
    /**
     *
     * @type {RateOtherAmount}
     * @memberof GetRateByIdResponseBody
     */
    'other_amount': RateOtherAmount;
    /**
     *
     * @type {RateTaxAmount}
     * @memberof GetRateByIdResponseBody
     */
    'tax_amount'?: RateTaxAmount;
    /**
     * Certain carriers base [their rates](https://blog.stamps.com/2017/09/08/usps-postal-zones/) off of custom zones that vary depending upon the ship_to and ship_from location
     * @type {number}
     * @memberof GetRateByIdResponseBody
     */
    'zone': number | null;
    /**
     * package type that this rate was estimated for
     * @type {string}
     * @memberof GetRateByIdResponseBody
     */
    'package_type': string | null;
    /**
     * The number of days estimated for delivery, this will show the _actual_ delivery time if for example, the package gets shipped on a Friday
     * @type {number}
     * @memberof GetRateByIdResponseBody
     */
    'delivery_days'?: number;
    /**
     * Indicates if the rate is guaranteed.
     * @type {boolean}
     * @memberof GetRateByIdResponseBody
     */
    'guaranteed_service': boolean;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date, but not a specific time.  The value _may_ contain a time component, but it will be set to `00:00:00` UTC by ShipEngine.
     * @type {string}
     * @memberof GetRateByIdResponseBody
     */
    'estimated_delivery_date'?: string;
    /**
     * The carrier delivery days
     * @type {string}
     * @memberof GetRateByIdResponseBody
     */
    'carrier_delivery_days'?: string;
    /**
     * ship date
     * @type {string}
     * @memberof GetRateByIdResponseBody
     */
    'ship_date'?: string;
    /**
     * Indicates if the rates been negotiated
     * @type {boolean}
     * @memberof GetRateByIdResponseBody
     */
    'negotiated_rate': boolean;
    /**
     * service type
     * @type {string}
     * @memberof GetRateByIdResponseBody
     */
    'service_type': string;
    /**
     * service code for the rate
     * @type {string}
     * @memberof GetRateByIdResponseBody
     */
    'service_code': string;
    /**
     * Indicates if rate is trackable
     * @type {boolean}
     * @memberof GetRateByIdResponseBody
     */
    'trackable': boolean;
    /**
     * carrier code
     * @type {string}
     * @memberof GetRateByIdResponseBody
     */
    'carrier_code': string;
    /**
     * carrier nickname
     * @type {string}
     * @memberof GetRateByIdResponseBody
     */
    'carrier_nickname': string;
    /**
     * carrier friendly name
     * @type {string}
     * @memberof GetRateByIdResponseBody
     */
    'carrier_friendly_name': string;
    /**
     *
     * @type {ValidationStatus}
     * @memberof GetRateByIdResponseBody
     */
    'validation_status': ValidationStatus;
    /**
     * The warning messages
     * @type {Array<string>}
     * @memberof GetRateByIdResponseBody
     */
    'warning_messages': Array<string>;
    /**
     * The error messages
     * @type {Array<string>}
     * @memberof GetRateByIdResponseBody
     */
    'error_messages': Array<string>;
}
/**
 * A get service point by ID response body
 * @export
 * @interface GetServicePointByIdResponseBody
 */
export interface GetServicePointByIdResponseBody {
    /**
     *
     * @type {GetServicePointByIdResponseBodyServicePoint}
     * @memberof GetServicePointByIdResponseBody
     */
    'service_point'?: GetServicePointByIdResponseBodyServicePoint;
}
/**
 *
 * @export
 * @interface GetServicePointByIdResponseBodyServicePoint
 */
export interface GetServicePointByIdResponseBodyServicePoint {
    /**
     *
     * @type {string}
     * @memberof GetServicePointByIdResponseBodyServicePoint
     */
    'carrier_code'?: string;
    /**
     *
     * @type {Array<string>}
     * @memberof GetServicePointByIdResponseBodyServicePoint
     */
    'service_codes'?: Array<string>;
    /**
     *
     * @type {string}
     * @memberof GetServicePointByIdResponseBodyServicePoint
     */
    'service_point_id'?: string;
    /**
     *
     * @type {string}
     * @memberof GetServicePointByIdResponseBodyServicePoint
     */
    'company_name'?: string;
    /**
     *
     * @type {string}
     * @memberof GetServicePointByIdResponseBodyServicePoint
     */
    'address_line1'?: string;
    /**
     *
     * @type {string}
     * @memberof GetServicePointByIdResponseBodyServicePoint
     */
    'city_locality'?: string;
    /**
     *
     * @type {string}
     * @memberof GetServicePointByIdResponseBodyServicePoint
     */
    'state_province'?: string;
    /**
     *
     * @type {string}
     * @memberof GetServicePointByIdResponseBodyServicePoint
     */
    'postal_code'?: string;
    /**
     *
     * @type {string}
     * @memberof GetServicePointByIdResponseBodyServicePoint
     */
    'country_code'?: string;
    /**
     *
     * @type {string}
     * @memberof GetServicePointByIdResponseBodyServicePoint
     */
    'phone_number'?: string;
    /**
     *
     * @type {number}
     * @memberof GetServicePointByIdResponseBodyServicePoint
     */
    'lat'?: number;
    /**
     *
     * @type {number}
     * @memberof GetServicePointByIdResponseBodyServicePoint
     */
    'long'?: number;
    /**
     *
     * @type {ListServicePointsResponseBodyServicePointsInnerHoursOfOperation}
     * @memberof GetServicePointByIdResponseBodyServicePoint
     */
    'hours_of_operation'?: ListServicePointsResponseBodyServicePointsInnerHoursOfOperation;
    /**
     *
     * @type {Array<string>}
     * @memberof GetServicePointByIdResponseBodyServicePoint
     */
    'features'?: Array<GetServicePointByIdResponseBodyServicePointFeaturesEnum>;
    /**
     *
     * @type {string}
     * @memberof GetServicePointByIdResponseBodyServicePoint
     */
    'type'?: GetServicePointByIdResponseBodyServicePointTypeEnum;
}
export declare const GetServicePointByIdResponseBodyServicePointFeaturesEnum: {
    readonly DropOffPoint: "drop_off_point";
    readonly PickupPoint: "pickup_point";
    readonly PrintServices: "print_services";
    readonly AfterHoursLocker: "after_hours_locker";
    readonly AfterHoursDropbox: "after_hours_dropbox";
};
export type GetServicePointByIdResponseBodyServicePointFeaturesEnum = typeof GetServicePointByIdResponseBodyServicePointFeaturesEnum[keyof typeof GetServicePointByIdResponseBodyServicePointFeaturesEnum];
export declare const GetServicePointByIdResponseBodyServicePointTypeEnum: {
    readonly Pudo: "pudo";
    readonly Locker: "locker";
};
export type GetServicePointByIdResponseBodyServicePointTypeEnum = typeof GetServicePointByIdResponseBodyServicePointTypeEnum[keyof typeof GetServicePointByIdResponseBodyServicePointTypeEnum];
/**
 * @type GetServicePointsRequest
 * @export
 */
export type GetServicePointsRequest = GetServicePointsRequestBody;
/**
 * A get service points request body. Caller must provide exactly one of address_query, address, or lat / long pair.
 * @export
 * @interface GetServicePointsRequestBody
 */
export interface GetServicePointsRequestBody {
    /**
     * Unstructured text to search for service points by.
     * @type {string}
     * @memberof GetServicePointsRequestBody
     */
    'address_query'?: string;
    /**
     *
     * @type {GetServicePointsRequestBodyAddress}
     * @memberof GetServicePointsRequestBody
     */
    'address'?: GetServicePointsRequestBodyAddress;
    /**
     * An array of shipping service providers and service codes
     * @type {Array<GetServicePointsRequestBodyProvidersInner>}
     * @memberof GetServicePointsRequestBody
     */
    'providers': Array<GetServicePointsRequestBodyProvidersInner>;
    /**
     * The latitude of the point. Represented as signed degrees. Required if long is provided. http://www.geomidpoint.com/latlon.html
     * @type {number}
     * @memberof GetServicePointsRequestBody
     */
    'lat'?: number;
    /**
     * The longitude of the point. Represented as signed degrees. Required if lat is provided. http://www.geomidpoint.com/latlon.html
     * @type {number}
     * @memberof GetServicePointsRequestBody
     */
    'long'?: number;
    /**
     * Search radius in kilometers
     * @type {number}
     * @memberof GetServicePointsRequestBody
     */
    'radius'?: number;
    /**
     * The maximum number of service points to return
     * @type {number}
     * @memberof GetServicePointsRequestBody
     */
    'max_results'?: number;
}
/**
 * Structured address to search by.
 * @export
 * @interface GetServicePointsRequestBodyAddress
 */
export interface GetServicePointsRequestBodyAddress {
    /**
     *
     * @type {string}
     * @memberof GetServicePointsRequestBodyAddress
     */
    'address_line1'?: string;
    /**
     *
     * @type {string}
     * @memberof GetServicePointsRequestBodyAddress
     */
    'address_line2'?: string;
    /**
     *
     * @type {string}
     * @memberof GetServicePointsRequestBodyAddress
     */
    'address_line3'?: string;
    /**
     *
     * @type {string}
     * @memberof GetServicePointsRequestBodyAddress
     */
    'city_locality'?: string;
    /**
     *
     * @type {string}
     * @memberof GetServicePointsRequestBodyAddress
     */
    'state_province'?: string;
    /**
     *
     * @type {string}
     * @memberof GetServicePointsRequestBodyAddress
     */
    'postal_code'?: string;
    /**
     *
     * @type {string}
     * @memberof GetServicePointsRequestBodyAddress
     */
    'country_code': string;
}
/**
 *
 * @export
 * @interface GetServicePointsRequestBodyProvidersInner
 */
export interface GetServicePointsRequestBodyProvidersInner {
    /**
     * Uniquely identifies a carrier connection
     * @type {string}
     * @memberof GetServicePointsRequestBodyProvidersInner
     */
    'carrier_id'?: string;
    /**
     *
     * @type {Array<string>}
     * @memberof GetServicePointsRequestBodyProvidersInner
     */
    'service_code'?: Array<string>;
}
/**
 * A get shipment by external id response body
 * @export
 * @interface GetShipmentByExternalIdResponseBody
 */
export interface GetShipmentByExternalIdResponseBody {
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof GetShipmentByExternalIdResponseBody
     */
    'shipment_id': string;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof GetShipmentByExternalIdResponseBody
     */
    'carrier_id': string;
    /**
     * A [carrier service](https://www.shipengine.com/docs/shipping/use-a-carrier-service/), such as `fedex_ground`, `usps_first_class_mail`, `flat_rate_envelope`, etc.
     * @type {string}
     * @memberof GetShipmentByExternalIdResponseBody
     */
    'service_code': string;
    /**
     * ID that the Order Source assigned
     * @type {string}
     * @memberof GetShipmentByExternalIdResponseBody
     */
    'external_order_id'?: string | null;
    /**
     * Describe the packages included in this shipment as related to potential metadata that was imported from external order sources
     * @type {Array<ShipmentItem>}
     * @memberof GetShipmentByExternalIdResponseBody
     */
    'items'?: Array<ShipmentItem>;
    /**
     *
     * @type {Array<TaxIdentifier>}
     * @memberof GetShipmentByExternalIdResponseBody
     */
    'tax_identifiers'?: Array<TaxIdentifier> | null;
    /**
     * A unique user-defined key to identify a shipment.  This can be used to retrieve the shipment.  > **Warning:** The `external_shipment_id` is limited to 50 characters. Any additional characters will be truncated.
     * @type {string}
     * @memberof GetShipmentByExternalIdResponseBody
     */
    'external_shipment_id'?: string | null;
    /**
     * A non-unique user-defined number used to identify a shipment.  If undefined, this will match the external_shipment_id of the shipment.  > **Warning:** The `shipment_number` is limited to 50 characters. Any additional characters will be truncated.
     * @type {string}
     * @memberof GetShipmentByExternalIdResponseBody
     */
    'shipment_number'?: string | null;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date, but not a specific time.  The value _may_ contain a time component, but it will be set to `00:00:00` UTC by ShipEngine.
     * @type {string}
     * @memberof GetShipmentByExternalIdResponseBody
     */
    'ship_date': string;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date and time.
     * @type {string}
     * @memberof GetShipmentByExternalIdResponseBody
     */
    'created_at': string;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date and time.
     * @type {string}
     * @memberof GetShipmentByExternalIdResponseBody
     */
    'modified_at': string;
    /**
     *
     * @type {ShipmentStatus}
     * @memberof GetShipmentByExternalIdResponseBody
     */
    'shipment_status': ShipmentStatus;
    /**
     *
     * @type {ShippingAddress}
     * @memberof GetShipmentByExternalIdResponseBody
     */
    'ship_to': ShippingAddress;
    /**
     *
     * @type {ShippingAddress}
     * @memberof GetShipmentByExternalIdResponseBody
     */
    'ship_from': ShippingAddress;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof GetShipmentByExternalIdResponseBody
     */
    'warehouse_id': string | null;
    /**
     *
     * @type {ShippingAddress}
     * @memberof GetShipmentByExternalIdResponseBody
     */
    'return_to': ShippingAddress;
    /**
     * An optional indicator if the shipment is intended to be a return. Defaults to false if not provided.
     * @type {boolean}
     * @memberof GetShipmentByExternalIdResponseBody
     */
    'is_return'?: boolean | null;
    /**
     *
     * @type {DeliveryConfirmation}
     * @memberof GetShipmentByExternalIdResponseBody
     */
    'confirmation': DeliveryConfirmation;
    /**
     *
     * @type {PartialShipmentCustoms}
     * @memberof GetShipmentByExternalIdResponseBody
     */
    'customs': PartialShipmentCustoms | null;
    /**
     *
     * @type {AdvancedShipmentOptions}
     * @memberof GetShipmentByExternalIdResponseBody
     */
    'advanced_options': AdvancedShipmentOptions;
    /**
     *
     * @type {InsuranceProvider}
     * @memberof GetShipmentByExternalIdResponseBody
     */
    'insurance_provider': InsuranceProvider;
    /**
     * Arbitrary tags associated with this shipment.  Tags can be used to categorize shipments, and shipments can be queried by their tags.
     * @type {Array<Tag>}
     * @memberof GetShipmentByExternalIdResponseBody
     */
    'tags': Array<Tag>;
    /**
     *
     * @type {OrderSourceName}
     * @memberof GetShipmentByExternalIdResponseBody
     */
    'order_source_code'?: OrderSourceName;
    /**
     * The packages in the shipment.  > **Note:** Some carriers only allow one package per shipment.  If you attempt to create a multi-package shipment for a carrier that doesn\'t allow it, an error will be returned.
     * @type {Array<Package>}
     * @memberof GetShipmentByExternalIdResponseBody
     */
    'packages': Array<Package>;
    /**
     *
     * @type {PartialShipmentTotalWeight}
     * @memberof GetShipmentByExternalIdResponseBody
     */
    'total_weight': PartialShipmentTotalWeight;
}
/**
 * A get shipment by id response body
 * @export
 * @interface GetShipmentByIdResponseBody
 */
export interface GetShipmentByIdResponseBody {
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof GetShipmentByIdResponseBody
     */
    'shipment_id': string;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof GetShipmentByIdResponseBody
     */
    'carrier_id': string;
    /**
     * A [carrier service](https://www.shipengine.com/docs/shipping/use-a-carrier-service/), such as `fedex_ground`, `usps_first_class_mail`, `flat_rate_envelope`, etc.
     * @type {string}
     * @memberof GetShipmentByIdResponseBody
     */
    'service_code': string;
    /**
     * ID that the Order Source assigned
     * @type {string}
     * @memberof GetShipmentByIdResponseBody
     */
    'external_order_id'?: string | null;
    /**
     * Describe the packages included in this shipment as related to potential metadata that was imported from external order sources
     * @type {Array<ShipmentItem>}
     * @memberof GetShipmentByIdResponseBody
     */
    'items'?: Array<ShipmentItem>;
    /**
     *
     * @type {Array<TaxIdentifier>}
     * @memberof GetShipmentByIdResponseBody
     */
    'tax_identifiers'?: Array<TaxIdentifier> | null;
    /**
     * A unique user-defined key to identify a shipment.  This can be used to retrieve the shipment.  > **Warning:** The `external_shipment_id` is limited to 50 characters. Any additional characters will be truncated.
     * @type {string}
     * @memberof GetShipmentByIdResponseBody
     */
    'external_shipment_id'?: string | null;
    /**
     * A non-unique user-defined number used to identify a shipment.  If undefined, this will match the external_shipment_id of the shipment.  > **Warning:** The `shipment_number` is limited to 50 characters. Any additional characters will be truncated.
     * @type {string}
     * @memberof GetShipmentByIdResponseBody
     */
    'shipment_number'?: string | null;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date, but not a specific time.  The value _may_ contain a time component, but it will be set to `00:00:00` UTC by ShipEngine.
     * @type {string}
     * @memberof GetShipmentByIdResponseBody
     */
    'ship_date': string;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date and time.
     * @type {string}
     * @memberof GetShipmentByIdResponseBody
     */
    'created_at': string;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date and time.
     * @type {string}
     * @memberof GetShipmentByIdResponseBody
     */
    'modified_at': string;
    /**
     *
     * @type {ShipmentStatus}
     * @memberof GetShipmentByIdResponseBody
     */
    'shipment_status': ShipmentStatus;
    /**
     *
     * @type {ShippingAddress}
     * @memberof GetShipmentByIdResponseBody
     */
    'ship_to': ShippingAddress;
    /**
     *
     * @type {ShippingAddress}
     * @memberof GetShipmentByIdResponseBody
     */
    'ship_from': ShippingAddress;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof GetShipmentByIdResponseBody
     */
    'warehouse_id': string | null;
    /**
     *
     * @type {ShippingAddress}
     * @memberof GetShipmentByIdResponseBody
     */
    'return_to': ShippingAddress;
    /**
     * An optional indicator if the shipment is intended to be a return. Defaults to false if not provided.
     * @type {boolean}
     * @memberof GetShipmentByIdResponseBody
     */
    'is_return'?: boolean | null;
    /**
     *
     * @type {DeliveryConfirmation}
     * @memberof GetShipmentByIdResponseBody
     */
    'confirmation': DeliveryConfirmation;
    /**
     *
     * @type {PartialShipmentCustoms}
     * @memberof GetShipmentByIdResponseBody
     */
    'customs': PartialShipmentCustoms | null;
    /**
     *
     * @type {AdvancedShipmentOptions}
     * @memberof GetShipmentByIdResponseBody
     */
    'advanced_options': AdvancedShipmentOptions;
    /**
     *
     * @type {InsuranceProvider}
     * @memberof GetShipmentByIdResponseBody
     */
    'insurance_provider': InsuranceProvider;
    /**
     * Arbitrary tags associated with this shipment.  Tags can be used to categorize shipments, and shipments can be queried by their tags.
     * @type {Array<Tag>}
     * @memberof GetShipmentByIdResponseBody
     */
    'tags': Array<Tag>;
    /**
     *
     * @type {OrderSourceName}
     * @memberof GetShipmentByIdResponseBody
     */
    'order_source_code'?: OrderSourceName;
    /**
     * The packages in the shipment.  > **Note:** Some carriers only allow one package per shipment.  If you attempt to create a multi-package shipment for a carrier that doesn\'t allow it, an error will be returned.
     * @type {Array<Package>}
     * @memberof GetShipmentByIdResponseBody
     */
    'packages': Array<Package>;
    /**
     *
     * @type {PartialShipmentTotalWeight}
     * @memberof GetShipmentByIdResponseBody
     */
    'total_weight': PartialShipmentTotalWeight;
}
/**
 * A get tracking log from label response body
 * @export
 * @interface GetTrackingLogFromLabelResponseBody
 */
export interface GetTrackingLogFromLabelResponseBody {
    /**
     * A tracking number for a package. The format depends on the carrier.
     * @type {string}
     * @memberof GetTrackingLogFromLabelResponseBody
     */
    'tracking_number': string;
    /**
     * Carrier Tracking Url, if available
     * @type {string}
     * @memberof GetTrackingLogFromLabelResponseBody
     */
    'tracking_url'?: string;
    /**
     *
     * @type {StatusCode}
     * @memberof GetTrackingLogFromLabelResponseBody
     */
    'status_code': StatusCode;
    /**
     * A [shipping carrier](https://www.shipengine.com/docs/carriers/setup/), such as `fedex`, `dhl_express`, `stamps_com`, etc.
     * @type {string}
     * @memberof GetTrackingLogFromLabelResponseBody
     */
    'carrier_code'?: string;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof GetTrackingLogFromLabelResponseBody
     */
    'carrier_id'?: string;
    /**
     * Status description
     * @type {string}
     * @memberof GetTrackingLogFromLabelResponseBody
     */
    'status_description'?: string;
    /**
     * Carrier status code
     * @type {string}
     * @memberof GetTrackingLogFromLabelResponseBody
     */
    'carrier_status_code': string;
    /**
     * Carrier detail code
     * @type {string}
     * @memberof GetTrackingLogFromLabelResponseBody
     */
    'carrier_detail_code'?: string;
    /**
     * carrier status description
     * @type {string}
     * @memberof GetTrackingLogFromLabelResponseBody
     */
    'carrier_status_description'?: string;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date and time.
     * @type {string}
     * @memberof GetTrackingLogFromLabelResponseBody
     */
    'ship_date'?: string;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date and time.
     * @type {string}
     * @memberof GetTrackingLogFromLabelResponseBody
     */
    'estimated_delivery_date': string;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date and time.
     * @type {string}
     * @memberof GetTrackingLogFromLabelResponseBody
     */
    'actual_delivery_date'?: string;
    /**
     * Exception description
     * @type {string}
     * @memberof GetTrackingLogFromLabelResponseBody
     */
    'exception_description'?: string;
    /**
     * The events that have occured during the lifetime of this tracking number.
     * @type {Array<TrackEvent>}
     * @memberof GetTrackingLogFromLabelResponseBody
     */
    'events': Array<TrackEvent>;
}
/**
 * A get tracking log response body
 * @export
 * @interface GetTrackingLogResponseBody
 */
export interface GetTrackingLogResponseBody {
    /**
     * A tracking number for a package. The format depends on the carrier.
     * @type {string}
     * @memberof GetTrackingLogResponseBody
     */
    'tracking_number': string;
    /**
     * Carrier Tracking Url, if available
     * @type {string}
     * @memberof GetTrackingLogResponseBody
     */
    'tracking_url': string;
    /**
     *
     * @type {StatusCode}
     * @memberof GetTrackingLogResponseBody
     */
    'status_code': StatusCode;
    /**
     * A [shipping carrier](https://www.shipengine.com/docs/carriers/setup/), such as `fedex`, `dhl_express`, `stamps_com`, etc.
     * @type {string}
     * @memberof GetTrackingLogResponseBody
     */
    'carrier_code': string;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof GetTrackingLogResponseBody
     */
    'carrier_id': string;
    /**
     * Status description
     * @type {string}
     * @memberof GetTrackingLogResponseBody
     */
    'status_description'?: string;
    /**
     * Carrier status code
     * @type {string}
     * @memberof GetTrackingLogResponseBody
     */
    'carrier_status_code': string;
    /**
     * Carrier detail code
     * @type {string}
     * @memberof GetTrackingLogResponseBody
     */
    'carrier_detail_code': string;
    /**
     * carrier status description
     * @type {string}
     * @memberof GetTrackingLogResponseBody
     */
    'carrier_status_description'?: string;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date and time.
     * @type {string}
     * @memberof GetTrackingLogResponseBody
     */
    'ship_date'?: string;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date and time.
     * @type {string}
     * @memberof GetTrackingLogResponseBody
     */
    'estimated_delivery_date': string;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date and time.
     * @type {string}
     * @memberof GetTrackingLogResponseBody
     */
    'actual_delivery_date'?: string;
    /**
     * Exception description
     * @type {string}
     * @memberof GetTrackingLogResponseBody
     */
    'exception_description'?: string;
    /**
     * The events that have occured during the lifetime of this tracking number.
     * @type {Array<TrackEvent>}
     * @memberof GetTrackingLogResponseBody
     */
    'events': Array<TrackEvent>;
}
/**
 * A get warehouse by id response body
 * @export
 * @interface GetWarehouseByIdResponseBody
 */
export interface GetWarehouseByIdResponseBody {
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof GetWarehouseByIdResponseBody
     */
    'warehouse_id': string;
    /**
     * Designates which single warehouse is the default on the account
     * @type {boolean}
     * @memberof GetWarehouseByIdResponseBody
     */
    'is_default'?: boolean | null;
    /**
     * Name of the warehouse
     * @type {string}
     * @memberof GetWarehouseByIdResponseBody
     */
    'name': string;
    /**
     * Timestamp that indicates when the warehouse was created
     * @type {string}
     * @memberof GetWarehouseByIdResponseBody
     */
    'created_at': string;
    /**
     *
     * @type {Address}
     * @memberof GetWarehouseByIdResponseBody
     */
    'origin_address': Address;
    /**
     *
     * @type {Address}
     * @memberof GetWarehouseByIdResponseBody
     */
    'return_address': Address;
}
/**
 * A get webhook id response body
 * @export
 * @interface GetWebhookByIdResponseBody
 */
export interface GetWebhookByIdResponseBody {
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof GetWebhookByIdResponseBody
     */
    'webhook_id': string;
    /**
     * A URL
     * @type {string}
     * @memberof GetWebhookByIdResponseBody
     */
    'url': string;
    /**
     *
     * @type {WebhookEvent}
     * @memberof GetWebhookByIdResponseBody
     */
    'event': WebhookEvent;
}
/**
 * Determines how FedEx will pickup your packages  |Pickup Type    | Description |---------------|----------------------------------------- |`vat`          | The tax identifier is a Value Added Tax. |`eori`         | The tax identifier is an Economic Operators Registration and Identification Number (EORI). |`ssn`          | The tax identifier is a Social Security Number. |`ein`          | The tax identifier is an Employer Identification Number (EIN). |`tin`          | The tax identifier is a Tax Identification Number (TIN). |`ioss`         | The tax identifier is an Import One-Stop Shop (IOSS). |`pan`          | The tax identifier is a Permanent Account Number (PAN). |`voec`         | The tax identifier is a Norwegian VAT On E-Commerce(VOEC). |`pccc`         | The tax identifier is a Personal Customs Clearance Code (PCCC). |`oss`          | The tax identifier is an One-Stop Shop (OSS). |`passport`     | The tax identifier is a Passport Number. |`abn`          | The tax identifier is an Australian Business Number.
 * @export
 * @enum {string}
 */
export declare const IdentifierType: {
    readonly Vat: "vat";
    readonly Eori: "eori";
    readonly Ssn: "ssn";
    readonly Ein: "ein";
    readonly Tin: "tin";
    readonly Ioss: "ioss";
    readonly Pan: "pan";
    readonly Voec: "voec";
    readonly Pccc: "pccc";
    readonly Oss: "oss";
    readonly Passport: "passport";
    readonly Abn: "abn";
};
export type IdentifierType = typeof IdentifierType[keyof typeof IdentifierType];
/**
 * importer of records address, anywhere in the world.
 * @export
 * @interface ImporterOfRecords
 */
export interface ImporterOfRecords {
    /**
     * The name of a contact person at this address. Either `name` or the `company_name` field should always be set.
     * @type {string}
     * @memberof ImporterOfRecords
     */
    'name': string;
    /**
     * The phone number of a contact person at this address.  The format of this phone number varies depending on the country.
     * @type {string}
     * @memberof ImporterOfRecords
     */
    'phone'?: string;
    /**
     * Email for the address owner.
     * @type {string}
     * @memberof ImporterOfRecords
     */
    'email'?: string | null;
    /**
     * If this is a business address, then the company name should be specified here. Either `name` or the `company_name` field should always be set.
     * @type {string}
     * @memberof ImporterOfRecords
     */
    'company_name'?: string | null;
    /**
     * The first line of the street address.  For some addresses, this may be the only line.  Other addresses may require 2 or 3 lines.
     * @type {string}
     * @memberof ImporterOfRecords
     */
    'address_line1': string;
    /**
     * The second line of the street address.  For some addresses, this line may not be needed.
     * @type {string}
     * @memberof ImporterOfRecords
     */
    'address_line2'?: string | null;
    /**
     * The third line of the street address.  For some addresses, this line may not be needed.
     * @type {string}
     * @memberof ImporterOfRecords
     */
    'address_line3'?: string | null;
    /**
     * The name of the city or locality
     * @type {string}
     * @memberof ImporterOfRecords
     */
    'city_locality': string;
    /**
     * The state or province.  For some countries (including the U.S.) only abbreviations are allowed.  Other countries allow the full name or abbreviation.
     * @type {string}
     * @memberof ImporterOfRecords
     */
    'state_province'?: string;
    /**
     * postal code
     * @type {string}
     * @memberof ImporterOfRecords
     */
    'postal_code': string;
    /**
     * A two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1)
     * @type {string}
     * @memberof ImporterOfRecords
     */
    'country_code': string;
}
/**
 * The possible insurance provider values
 * @export
 * @enum {string}
 */
export declare const InsuranceProvider: {
    readonly None: "none";
    readonly Shipsurance: "shipsurance";
    readonly Carrier: "carrier";
    readonly ThirdParty: "third_party";
};
export type InsuranceProvider = typeof InsuranceProvider[keyof typeof InsuranceProvider];
/**
 * Options for international shipments, such as customs declarations.
 * @export
 * @interface InternationalShipmentOptions
 */
export interface InternationalShipmentOptions {
    /**
     *
     * @type {PackageContents}
     * @memberof InternationalShipmentOptions
     */
    'contents': PackageContents;
    /**
     * Explanation for contents (required if the `contents` is provided as `other`)
     * @type {string}
     * @memberof InternationalShipmentOptions
     */
    'contents_explanation'?: string;
    /**
     *
     * @type {NonDelivery}
     * @memberof InternationalShipmentOptions
     */
    'non_delivery': NonDelivery;
    /**
     *
     * @type {AllowedIncoterms}
     * @memberof InternationalShipmentOptions
     */
    'terms_of_trade_code'?: AllowedIncoterms;
    /**
     * Declaration statement to be placed on the commercial invoice
     * @type {string}
     * @memberof InternationalShipmentOptions
     */
    'declaration'?: string;
    /**
     *
     * @type {InvoiceAdditionalDetails}
     * @memberof InternationalShipmentOptions
     */
    'invoice_additional_details'?: InvoiceAdditionalDetails;
    /**
     *
     * @type {ImporterOfRecords}
     * @memberof InternationalShipmentOptions
     */
    'importer_of_record'?: ImporterOfRecords;
    /**
     * Customs declarations for each item in the shipment. (Please provide this information under `products` inside `packages`)
     * @type {Array<CustomsItem>}
     * @memberof InternationalShipmentOptions
     * @deprecated
     */
    'customs_items'?: Array<CustomsItem>;
}
/**
 * The additional information to put on commercial invoice
 * @export
 * @interface InvoiceAdditionalDetails
 */
export interface InvoiceAdditionalDetails {
    /**
     *
     * @type {MonetaryValue}
     * @memberof InvoiceAdditionalDetails
     */
    'freight_charge'?: MonetaryValue;
    /**
     *
     * @type {MonetaryValue}
     * @memberof InvoiceAdditionalDetails
     */
    'insurance_charge'?: MonetaryValue;
    /**
     *
     * @type {MonetaryValue}
     * @memberof InvoiceAdditionalDetails
     */
    'discount'?: MonetaryValue;
    /**
     *
     * @type {MonetaryValue}
     * @memberof InvoiceAdditionalDetails
     */
    'other_charge'?: MonetaryValue;
    /**
     * Description for the other charge (if provided).
     * @type {string}
     * @memberof InvoiceAdditionalDetails
     */
    'other_charge_description'?: string;
}
/**
 * A label represents the physical sticker that you affix to a package to ship it.  ShipEngine makes it easy for you to [create labels](https://www.shipengine.com/docs/labels/create-a-label/) and then download them in PDF, PNG, or ZPL format so you can print them.
 * @export
 * @interface Label
 */
export interface Label {
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof Label
     */
    'label_id'?: string;
    /**
     *
     * @type {LabelStatus}
     * @memberof Label
     */
    'status'?: LabelStatus;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof Label
     */
    'shipment_id'?: string;
    /**
     *
     * @type {Shipment}
     * @memberof Label
     */
    'shipment'?: Shipment;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date, but not a specific time.  The value _may_ contain a time component, but it will be set to `00:00:00` UTC by ShipEngine.
     * @type {string}
     * @memberof Label
     */
    'ship_date'?: string;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date and time.
     * @type {string}
     * @memberof Label
     */
    'created_at'?: string;
    /**
     *
     * @type {LabelShipmentCost}
     * @memberof Label
     */
    'shipment_cost'?: LabelShipmentCost;
    /**
     *
     * @type {LabelInsuranceCost}
     * @memberof Label
     */
    'insurance_cost'?: LabelInsuranceCost;
    /**
     * The tracking number for the package. Tracking number formats vary across carriers.
     * @type {string}
     * @memberof Label
     */
    'tracking_number'?: string;
    /**
     * Indicates whether this is a return label.  You may also want to set the `rma_number` so you know what is being returned.
     * @type {boolean}
     * @memberof Label
     */
    'is_return_label'?: boolean;
    /**
     * An optional Return Merchandise Authorization number.  This field is useful for return labels.  You can set it to any string value.
     * @type {string}
     * @memberof Label
     */
    'rma_number'?: string | null;
    /**
     * Indicates whether this is an international shipment.  That is, the originating country and destination country are different.
     * @type {boolean}
     * @memberof Label
     */
    'is_international'?: boolean;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof Label
     */
    'batch_id'?: string;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof Label
     */
    'carrier_id'?: string;
    /**
     *
     * @type {LabelChargeEvent}
     * @memberof Label
     */
    'charge_event'?: LabelChargeEvent;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof Label
     */
    'outbound_label_id'?: string;
    /**
     * A [carrier service](https://www.shipengine.com/docs/shipping/use-a-carrier-service/), such as `fedex_ground`, `usps_first_class_mail`, `flat_rate_envelope`, etc.
     * @type {string}
     * @memberof Label
     */
    'service_code'?: string;
    /**
     * Indicate if this label is being used only for testing purposes. If true, then no charge will be added to your account.
     * @type {boolean}
     * @memberof Label
     * @deprecated
     */
    'test_label'?: boolean;
    /**
     * A [package type](https://www.shipengine.com/docs/reference/list-carrier-packages/), such as `thick_envelope`, `small_flat_rate_box`, `large_package`, etc.  Use the code `package` for custom or unknown package types.
     * @type {string}
     * @memberof Label
     */
    'package_code'?: string;
    /**
     *
     * @type {ValidateAddress}
     * @memberof Label
     */
    'validate_address'?: ValidateAddress;
    /**
     * Indicates whether the label has been [voided](https://www.shipengine.com/docs/labels/voiding/)
     * @type {boolean}
     * @memberof Label
     */
    'voided'?: boolean;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date and time.
     * @type {string}
     * @memberof Label
     */
    'voided_at'?: string | null;
    /**
     *
     * @type {LabelDownloadType}
     * @memberof Label
     */
    'label_download_type'?: LabelDownloadType;
    /**
     *
     * @type {LabelFormat}
     * @memberof Label
     */
    'label_format'?: LabelFormat;
    /**
     *
     * @type {DisplayScheme}
     * @memberof Label
     */
    'display_scheme'?: DisplayScheme;
    /**
     *
     * @type {LabelLayout}
     * @memberof Label
     */
    'label_layout'?: LabelLayout;
    /**
     * Indicates whether the shipment is trackable, in which case the `tracking_status` field will reflect the current status and each package will have a `tracking_number`.
     * @type {boolean}
     * @memberof Label
     */
    'trackable'?: boolean;
    /**
     * Used to identify an image resource.
     * @type {string}
     * @memberof Label
     */
    'label_image_id'?: string | null;
    /**
     * A [shipping carrier](https://www.shipengine.com/docs/carriers/setup/), such as `fedex`, `dhl_express`, `stamps_com`, etc.
     * @type {string}
     * @memberof Label
     */
    'carrier_code'?: string;
    /**
     *
     * @type {TrackingStatus}
     * @memberof Label
     */
    'tracking_status'?: TrackingStatus;
    /**
     *
     * @type {LabelDownload}
     * @memberof Label
     */
    'label_download'?: LabelDownload;
    /**
     *
     * @type {Link}
     * @memberof Label
     */
    'form_download'?: Link | null;
    /**
     *
     * @type {Link}
     * @memberof Label
     */
    'insurance_claim'?: Link | null;
    /**
     * The label\'s package(s).  > **Note:** Some carriers only allow one package per label.  If you attempt to create a multi-package label for a carrier that doesn\'t allow it, an error will be returned.
     * @type {Array<Package>}
     * @memberof Label
     */
    'packages'?: Array<Package>;
    /**
     * Additional information some carriers may provide by which to identify a given label in their system.
     * @type {Array<AlternativeIdentifier>}
     * @memberof Label
     */
    'alternative_identifiers'?: Array<AlternativeIdentifier> | null;
}
/**
 * Determines when the user\'s account will be charged for the label.
 * @export
 * @enum {string}
 */
export declare const LabelChargeEvent: {
    readonly CarrierDefault: "carrier_default";
    readonly OnCreation: "on_creation";
    readonly OnCarrierAcceptance: "on_carrier_acceptance";
};
export type LabelChargeEvent = typeof LabelChargeEvent[keyof typeof LabelChargeEvent];
/**
 * Reference to the various downloadable file formats for the generated label
 * @export
 * @interface LabelDownload
 */
export interface LabelDownload {
    /**
     * A URL
     * @type {string}
     * @memberof LabelDownload
     */
    'href'?: string;
    /**
     * A URL
     * @type {string}
     * @memberof LabelDownload
     */
    'pdf'?: string;
    /**
     * A URL
     * @type {string}
     * @memberof LabelDownload
     */
    'png'?: string;
    /**
     * A URL
     * @type {string}
     * @memberof LabelDownload
     */
    'zpl'?: string;
}
/**
 * There are two different ways to [download a label](https://www.shipengine.com/docs/labels/downloading/):  |Label Download Type | Description |--------------------|------------------------------ |`url`               |You will receive a URL, which you can use to download the label in a separate request. The URL will remain valid for 90 days.<br><br>This is the default if `label_download_type` is unspecified. |`inline`            |You will receive the Base64-encoded label as part of the response. No need for a second request to download the label.
 * @export
 * @enum {string}
 */
export declare const LabelDownloadType: {
    readonly Url: "url";
    readonly Inline: "inline";
};
export type LabelDownloadType = typeof LabelDownloadType[keyof typeof LabelDownloadType];
/**
 * The possible file formats in which shipping labels can be downloaded.  We recommend `pdf` format because it is supported by all carriers, whereas some carriers do not support the `png` or `zpl` formats.  |Label Format  | Supported Carriers |--------------|----------------------------------- |`pdf`         | All carriers |`png`         | `fedex` <br> `stamps_com` <br> `ups` <br> `usps` |`zpl`         | `access_worldwide` <br> `apc` <br> `asendia` <br> `dhl_global_mail` <br> `dhl_express` <br> `dhl_express_australia` <br> `dhl_express_canada` <br> `dhl_express_worldwide` <br> `dhl_express_uk` <br> `dpd` <br> `endicia` <br> `fedex` <br> `fedex_uk` <br> `firstmile` <br> `imex` <br> `newgistics` <br> `ontrac` <br> `rr_donnelley` <br> `stamps_com` <br> `ups` <br> `usps`
 * @export
 * @enum {string}
 */
export declare const LabelFormat: {
    readonly Pdf: "pdf";
    readonly Png: "png";
    readonly Zpl: "zpl";
};
export type LabelFormat = typeof LabelFormat[keyof typeof LabelFormat];
/**
 * The insurance cost for this package.  Add this to the `shipment_cost` field to get the total cost.
 * @export
 * @interface LabelInsuranceCost
 */
export interface LabelInsuranceCost {
    /**
     * The currencies that are supported by ShipEngine are the ones that specified by ISO 4217: https://www.iso.org/iso-4217-currency-codes.html
     * @type {string}
     * @memberof LabelInsuranceCost
     */
    'currency': string;
    /**
     * The monetary amount, in the specified currency.
     * @type {number}
     * @memberof LabelInsuranceCost
     */
    'amount': number;
}
/**
 * The available layouts (sizes) in which shipping labels can be downloaded.  The label format determines which sizes are supported.  `4x6` is supported for all label formats, whereas `letter` (8.5\" x 11\") is only supported for `pdf` format.
 * @export
 * @enum {string}
 */
export declare const LabelLayout: {
    readonly _4x6: "4x6";
    readonly Letter: "letter";
};
export type LabelLayout = typeof LabelLayout[keyof typeof LabelLayout];
/**
 * Custom messages to print on the shipping label for the package.  These are typically used to print invoice numbers, product numbers, or other internal reference numbers.  Not all carriers support label messages. The number of lines and the maximum length of each line also varies by carrier.  |Carrier            |Max lines |Max line length |-------------------|----------|-------------------- |USPS (Stamps.com)  |3         |60 |FedEx              |3         |35 for the first line. 30 for additional lines. |UPS                |2         |35 |OnTrac             |2         |25
 * @export
 * @interface LabelMessages
 */
export interface LabelMessages {
    /**
     * The first line of the custom label message.  Some carriers may prefix this line with something like \"REF\", \"Reference\", \"Trx Ref No.\", etc.
     * @type {string}
     * @memberof LabelMessages
     */
    'reference1': string | null;
    /**
     * The second line of the custom label message.  Some carriers may prefix this line with something like \"INV\", \"Reference 2\", \"Trx Ref No.\", etc.
     * @type {string}
     * @memberof LabelMessages
     */
    'reference2': string | null;
    /**
     * The third line of the custom label message.  Some carriers may prefix this line with something like \"PO\", \"Reference 3\", etc.
     * @type {string}
     * @memberof LabelMessages
     */
    'reference3': string | null;
}
/**
 * The cost of shipping, delivery confirmation, and other carrier charges.  This amount **does not** include insurance costs.
 * @export
 * @interface LabelShipmentCost
 */
export interface LabelShipmentCost {
    /**
     * The currencies that are supported by ShipEngine are the ones that specified by ISO 4217: https://www.iso.org/iso-4217-currency-codes.html
     * @type {string}
     * @memberof LabelShipmentCost
     */
    'currency': string;
    /**
     * The monetary amount, in the specified currency.
     * @type {number}
     * @memberof LabelShipmentCost
     */
    'amount': number;
}
/**
 * The possible statuses that a [shipping label](https://www.shipengine.com/docs/labels/create-a-label/) can be in.  |Status       |Description |:------------|:----------------------------------------------------- |`processing` |When labels are created in a [batch](https://www.shipengine.com/docs/labels/bulk/), it may take a few minutes for all of the labels in the batch to be created.  During this period, they will be in `processing` status. |`completed`  |The label was successfully created |`error`      |The label could not be created due to an error, such as an invalid delivery address |`voided`     |The label has been [voided](https://www.shipengine.com/docs/labels/voiding/)
 * @export
 * @enum {string}
 */
export declare const LabelStatus: {
    readonly Processing: "processing";
    readonly Completed: "completed";
    readonly Error: "error";
    readonly Voided: "voided";
};
export type LabelStatus = typeof LabelStatus[keyof typeof LabelStatus];
/**
 * A link to a related resource
 * @export
 * @interface Link
 */
export interface Link {
    /**
     * A URL
     * @type {string}
     * @memberof Link
     */
    'href': string;
    /**
     * The type of resource, or the type of relationship to the parent resource
     * @type {string}
     * @memberof Link
     */
    'type'?: string;
}
/**
 * A list account images response body
 * @export
 * @interface ListAccountImagesResponseBody
 */
export interface ListAccountImagesResponseBody {
    /**
     * Image List
     * @type {Array<object>}
     * @memberof ListAccountImagesResponseBody
     */
    'images': Array<object>;
    /**
     * The total number of items across all pages of results
     * @type {number}
     * @memberof ListAccountImagesResponseBody
     */
    'total': number;
    /**
     * The current page number of results.  For example, if there are 80 results, and the page size is 25, then `page` could be 1, 2, 3, or 4.  The first three pages would contain 25 items each, and the fourth page would contain the five remaining items.
     * @type {number}
     * @memberof ListAccountImagesResponseBody
     */
    'page': number;
    /**
     * The total number of pages of results.  For example, if there are 80 results, and the page size is 25, then `pages` would be 4.  The first three pages would contain 25 items each, and the fourth page would contain the five remaining items.  If there are no results, then `pages` will be zero.
     * @type {number}
     * @memberof ListAccountImagesResponseBody
     */
    'pages': number;
    /**
     *
     * @type {PaginationLink}
     * @memberof ListAccountImagesResponseBody
     */
    'links': PaginationLink;
}
/**
 * An account settings list response body
 * @export
 * @interface ListAccountSettingsBody
 */
export interface ListAccountSettingsBody {
    /**
     *
     * @type {DefaultLabelLayout}
     * @memberof ListAccountSettingsBody
     */
    'default_label_layout'?: DefaultLabelLayout;
}
/**
 *
 * @export
 * @interface ListAccountSettingsImagesResponseBody
 */
export interface ListAccountSettingsImagesResponseBody {
    /**
     * The total number of items across all pages of results
     * @type {number}
     * @memberof ListAccountSettingsImagesResponseBody
     */
    'total': number;
    /**
     * The current page number of results.  For example, if there are 80 results, and the page size is 25, then `page` could be 1, 2, 3, or 4.  The first three pages would contain 25 items each, and the fourth page would contain the five remaining items.
     * @type {number}
     * @memberof ListAccountSettingsImagesResponseBody
     */
    'page': number;
    /**
     * The total number of pages of results.  For example, if there are 80 results, and the page size is 25, then `pages` would be 4.  The first three pages would contain 25 items each, and the fourth page would contain the five remaining items.  If there are no results, then `pages` will be zero.
     * @type {number}
     * @memberof ListAccountSettingsImagesResponseBody
     */
    'pages': number;
    /**
     *
     * @type {PaginationLink}
     * @memberof ListAccountSettingsImagesResponseBody
     */
    'links': PaginationLink;
}
/**
 * A batch errors response body
 * @export
 * @interface ListBatchErrorsResponseBody
 */
export interface ListBatchErrorsResponseBody {
    /**
     * The errors currently associated with the batch
     * @type {Array<BatchResponseError>}
     * @memberof ListBatchErrorsResponseBody
     */
    'errors': Array<BatchResponseError>;
    /**
     *
     * @type {PaginationLink}
     * @memberof ListBatchErrorsResponseBody
     */
    'links': PaginationLink;
}
/**
 * A list batch response body
 * @export
 * @interface ListBatchesResponseBody
 */
export interface ListBatchesResponseBody {
    /**
     * Batch List
     * @type {Array<Batch>}
     * @memberof ListBatchesResponseBody
     */
    'batches': Array<Batch>;
    /**
     * The total number of batches the API call returned
     * @type {number}
     * @memberof ListBatchesResponseBody
     */
    'total': number;
    /**
     * The page that is currently being read
     * @type {number}
     * @memberof ListBatchesResponseBody
     */
    'page': number;
    /**
     * The total number of batch pages the API call returned
     * @type {number}
     * @memberof ListBatchesResponseBody
     */
    'pages': number;
    /**
     *
     * @type {PaginationLink}
     * @memberof ListBatchesResponseBody
     */
    'links': PaginationLink;
}
/**
 * A list carrier package types response body
 * @export
 * @interface ListCarrierPackageTypesResponseBody
 */
export interface ListCarrierPackageTypesResponseBody {
    /**
     * An array of custom package types
     * @type {Array<ListCarrierPackageTypesResponseBodyPackagesInner>}
     * @memberof ListCarrierPackageTypesResponseBody
     */
    'packages'?: Array<ListCarrierPackageTypesResponseBodyPackagesInner>;
}
/**
 * Custom Package Type items
 * @export
 * @interface ListCarrierPackageTypesResponseBodyPackagesInner
 */
export interface ListCarrierPackageTypesResponseBodyPackagesInner {
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof ListCarrierPackageTypesResponseBodyPackagesInner
     */
    'package_id'?: string;
    /**
     * A [package type](https://www.shipengine.com/docs/reference/list-carrier-packages/), such as `thick_envelope`, `small_flat_rate_box`, `large_package`, etc.  Use the code `package` for custom or unknown package types.
     * @type {string}
     * @memberof ListCarrierPackageTypesResponseBodyPackagesInner
     */
    'package_code': string;
    /**
     *
     * @type {string}
     * @memberof ListCarrierPackageTypesResponseBodyPackagesInner
     */
    'name': string;
    /**
     *
     * @type {Dimensions}
     * @memberof ListCarrierPackageTypesResponseBodyPackagesInner
     */
    'dimensions'?: Dimensions;
    /**
     * Provides a helpful description for the custom package.
     * @type {string}
     * @memberof ListCarrierPackageTypesResponseBodyPackagesInner
     */
    'description'?: string | null;
}
/**
 * A carrier list services response body
 * @export
 * @interface ListCarrierServicesResponseBody
 */
export interface ListCarrierServicesResponseBody {
    /**
     * An array of services associated with the carrier
     * @type {Array<ListCarrierServicesResponseBodyServicesInner>}
     * @memberof ListCarrierServicesResponseBody
     */
    'services'?: Array<ListCarrierServicesResponseBodyServicesInner>;
}
/**
 * A carrier service
 * @export
 * @interface ListCarrierServicesResponseBodyServicesInner
 */
export interface ListCarrierServicesResponseBodyServicesInner {
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof ListCarrierServicesResponseBodyServicesInner
     */
    'carrier_id'?: string;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof ListCarrierServicesResponseBodyServicesInner
     */
    'carrier_code'?: string;
    /**
     * service code
     * @type {string}
     * @memberof ListCarrierServicesResponseBodyServicesInner
     */
    'service_code'?: string;
    /**
     * User friendly service name
     * @type {string}
     * @memberof ListCarrierServicesResponseBodyServicesInner
     */
    'name'?: string;
    /**
     * Supports domestic shipping
     * @type {boolean}
     * @memberof ListCarrierServicesResponseBodyServicesInner
     */
    'domestic'?: boolean;
    /**
     * Supports international shipping.
     * @type {boolean}
     * @memberof ListCarrierServicesResponseBodyServicesInner
     */
    'international'?: boolean;
    /**
     * Carrier supports multiple packages per shipment
     * @type {boolean}
     * @memberof ListCarrierServicesResponseBodyServicesInner
     */
    'is_multi_package_supported'?: boolean;
}
/**
 * A carrier list response body
 * @export
 * @interface ListCarriersResponseBody
 */
export interface ListCarriersResponseBody {
    /**
     * The carrier response body
     * @type {Array<Carrier>}
     * @memberof ListCarriersResponseBody
     */
    'carriers': Array<Carrier>;
}
/**
 * A list label response body
 * @export
 * @interface ListLabelsResponseBody
 */
export interface ListLabelsResponseBody {
    /**
     * The labels that matched the query criteria.  If no matching labels were found, then this array is empty; otherwise, it contains one page of results.  The last page of results may have fewer labels than the `page_size`.
     * @type {Array<object>}
     * @memberof ListLabelsResponseBody
     */
    'labels': Array<object>;
    /**
     * The total number of items across all pages of results
     * @type {number}
     * @memberof ListLabelsResponseBody
     */
    'total': number;
    /**
     * The current page number of results.  For example, if there are 80 results, and the page size is 25, then `page` could be 1, 2, 3, or 4.  The first three pages would contain 25 items each, and the fourth page would contain the five remaining items.
     * @type {number}
     * @memberof ListLabelsResponseBody
     */
    'page': number;
    /**
     * The total number of pages of results.  For example, if there are 80 results, and the page size is 25, then `pages` would be 4.  The first three pages would contain 25 items each, and the fourth page would contain the five remaining items.  If there are no results, then `pages` will be zero.
     * @type {number}
     * @memberof ListLabelsResponseBody
     */
    'pages': number;
    /**
     *
     * @type {PaginationLink}
     * @memberof ListLabelsResponseBody
     */
    'links': PaginationLink;
}
/**
 * A list manifests response body
 * @export
 * @interface ListManifestsResponseBody
 */
export interface ListManifestsResponseBody {
    /**
     * The list of available manifests
     * @type {Array<ListManifestsResponseBodyManifestsInner>}
     * @memberof ListManifestsResponseBody
     */
    'manifests': Array<ListManifestsResponseBodyManifestsInner>;
    /**
     * The total number of manifests returned
     * @type {number}
     * @memberof ListManifestsResponseBody
     */
    'total': number;
    /**
     * Current page of the list manifests results
     * @type {number}
     * @memberof ListManifestsResponseBody
     */
    'page': number;
    /**
     * Total number of pages for list manifests results
     * @type {number}
     * @memberof ListManifestsResponseBody
     */
    'pages': number;
    /**
     *
     * @type {ListManifestsResponseBodyLinks}
     * @memberof ListManifestsResponseBody
     */
    'links': ListManifestsResponseBodyLinks;
}
/**
 * Helpful links to other pages of results
 * @export
 * @interface ListManifestsResponseBodyLinks
 */
export interface ListManifestsResponseBodyLinks {
    /**
     *
     * @type {Link}
     * @memberof ListManifestsResponseBodyLinks
     */
    'first': Link;
    /**
     *
     * @type {Link}
     * @memberof ListManifestsResponseBodyLinks
     */
    'last': Link;
    /**
     *
     * @type {OptionalLink}
     * @memberof ListManifestsResponseBodyLinks
     */
    'prev': OptionalLink;
    /**
     *
     * @type {OptionalLink}
     * @memberof ListManifestsResponseBodyLinks
     */
    'next': OptionalLink;
}
/**
 * A single manifest
 * @export
 * @interface ListManifestsResponseBodyManifestsInner
 */
export interface ListManifestsResponseBodyManifestsInner {
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof ListManifestsResponseBodyManifestsInner
     */
    'manifest_id'?: string;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof ListManifestsResponseBodyManifestsInner
     */
    'form_id'?: string;
    /**
     * The date-time that the manifest was created
     * @type {string}
     * @memberof ListManifestsResponseBodyManifestsInner
     */
    'created_at'?: string;
    /**
     * The date-time that the manifests shipments will be picked up
     * @type {string}
     * @memberof ListManifestsResponseBodyManifestsInner
     */
    'ship_date'?: string;
    /**
     * The number of shipments that are included in this manifest
     * @type {number}
     * @memberof ListManifestsResponseBodyManifestsInner
     */
    'shipments'?: number;
    /**
     * An array of the label ids used in this manifest.
     * @type {Array<string>}
     * @memberof ListManifestsResponseBodyManifestsInner
     */
    'label_ids'?: Array<string>;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof ListManifestsResponseBodyManifestsInner
     */
    'warehouse_id'?: string;
    /**
     * A string that uniquely identifies the submission
     * @type {string}
     * @memberof ListManifestsResponseBodyManifestsInner
     */
    'submission_id'?: string;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof ListManifestsResponseBodyManifestsInner
     */
    'carrier_id'?: string;
    /**
     *
     * @type {ManifestDownload}
     * @memberof ListManifestsResponseBodyManifestsInner
     */
    'manifest_download'?: ManifestDownload;
}
/**
 * A list package types response body
 * @export
 * @interface ListPackageTypesResponseBody
 */
export interface ListPackageTypesResponseBody {
    /**
     * An array of custom package types
     * @type {Array<ListPackageTypesResponseBodyPackagesInner>}
     * @memberof ListPackageTypesResponseBody
     */
    'packages'?: Array<ListPackageTypesResponseBodyPackagesInner>;
}
/**
 * Custom Package Types items
 * @export
 * @interface ListPackageTypesResponseBodyPackagesInner
 */
export interface ListPackageTypesResponseBodyPackagesInner {
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof ListPackageTypesResponseBodyPackagesInner
     */
    'package_id'?: string;
    /**
     * A [package type](https://www.shipengine.com/docs/reference/list-carrier-packages/), such as `thick_envelope`, `small_flat_rate_box`, `large_package`, etc.  Use the code `package` for custom or unknown package types.
     * @type {string}
     * @memberof ListPackageTypesResponseBodyPackagesInner
     */
    'package_code': string;
    /**
     *
     * @type {string}
     * @memberof ListPackageTypesResponseBodyPackagesInner
     */
    'name': string;
    /**
     *
     * @type {Dimensions}
     * @memberof ListPackageTypesResponseBodyPackagesInner
     */
    'dimensions'?: Dimensions;
    /**
     * Provides a helpful description for the custom package.
     * @type {string}
     * @memberof ListPackageTypesResponseBodyPackagesInner
     */
    'description'?: string | null;
}
/**
 * A list pickup response body
 * @export
 * @interface ListPickupResponseBody
 */
export interface ListPickupResponseBody {
    /**
     * An array of pickups associated with the user\'s account.
     * @type {Array<Pickup>}
     * @memberof ListPickupResponseBody
     */
    'pickups': Array<Pickup>;
    /**
     * The total number of pickups returned
     * @type {number}
     * @memberof ListPickupResponseBody
     */
    'total': number;
    /**
     * Current page of the list pickups results
     * @type {number}
     * @memberof ListPickupResponseBody
     */
    'page': number;
    /**
     * Total number of pages for list pickups results
     * @type {number}
     * @memberof ListPickupResponseBody
     */
    'pages': number;
    /**
     *
     * @type {ListManifestsResponseBodyLinks}
     * @memberof ListPickupResponseBody
     */
    'links': ListManifestsResponseBodyLinks;
}
/**
 * A list service points response body
 * @export
 * @interface ListServicePointsResponseBody
 */
export interface ListServicePointsResponseBody {
    /**
     *
     * @type {number}
     * @memberof ListServicePointsResponseBody
     */
    'lat'?: number;
    /**
     *
     * @type {number}
     * @memberof ListServicePointsResponseBody
     */
    'long'?: number;
    /**
     *
     * @type {Array<ListServicePointsResponseBodyServicePointsInner>}
     * @memberof ListServicePointsResponseBody
     */
    'service_points'?: Array<ListServicePointsResponseBodyServicePointsInner>;
    /**
     * The errors associated with the failed API call
     * @type {Array<ModelError>}
     * @memberof ListServicePointsResponseBody
     */
    'errors'?: Array<ModelError>;
}
/**
 *
 * @export
 * @interface ListServicePointsResponseBodyServicePointsInner
 */
export interface ListServicePointsResponseBodyServicePointsInner {
    /**
     *
     * @type {string}
     * @memberof ListServicePointsResponseBodyServicePointsInner
     */
    'carrier_code'?: string;
    /**
     *
     * @type {Array<string>}
     * @memberof ListServicePointsResponseBodyServicePointsInner
     */
    'service_codes'?: Array<string>;
    /**
     *
     * @type {string}
     * @memberof ListServicePointsResponseBodyServicePointsInner
     */
    'service_point_id'?: string;
    /**
     *
     * @type {string}
     * @memberof ListServicePointsResponseBodyServicePointsInner
     */
    'company_name'?: string;
    /**
     *
     * @type {string}
     * @memberof ListServicePointsResponseBodyServicePointsInner
     */
    'address_line1'?: string;
    /**
     *
     * @type {string}
     * @memberof ListServicePointsResponseBodyServicePointsInner
     */
    'city_locality'?: string;
    /**
     *
     * @type {string}
     * @memberof ListServicePointsResponseBodyServicePointsInner
     */
    'state_province'?: string;
    /**
     *
     * @type {string}
     * @memberof ListServicePointsResponseBodyServicePointsInner
     */
    'postal_code'?: string;
    /**
     *
     * @type {string}
     * @memberof ListServicePointsResponseBodyServicePointsInner
     */
    'country_code'?: string;
    /**
     *
     * @type {string}
     * @memberof ListServicePointsResponseBodyServicePointsInner
     */
    'phone_number'?: string;
    /**
     *
     * @type {number}
     * @memberof ListServicePointsResponseBodyServicePointsInner
     */
    'lat'?: number;
    /**
     *
     * @type {number}
     * @memberof ListServicePointsResponseBodyServicePointsInner
     */
    'long'?: number;
    /**
     *
     * @type {number}
     * @memberof ListServicePointsResponseBodyServicePointsInner
     */
    'distance_in_meters'?: number;
    /**
     *
     * @type {ListServicePointsResponseBodyServicePointsInnerHoursOfOperation}
     * @memberof ListServicePointsResponseBodyServicePointsInner
     */
    'hours_of_operation'?: ListServicePointsResponseBodyServicePointsInnerHoursOfOperation;
    /**
     *
     * @type {Array<string>}
     * @memberof ListServicePointsResponseBodyServicePointsInner
     */
    'features'?: Array<ListServicePointsResponseBodyServicePointsInnerFeaturesEnum>;
    /**
     *
     * @type {string}
     * @memberof ListServicePointsResponseBodyServicePointsInner
     */
    'type'?: ListServicePointsResponseBodyServicePointsInnerTypeEnum;
}
export declare const ListServicePointsResponseBodyServicePointsInnerFeaturesEnum: {
    readonly DropOffPoint: "drop_off_point";
    readonly PickupPoint: "pickup_point";
    readonly PrintServices: "print_services";
    readonly AfterHoursLocker: "after_hours_locker";
    readonly AfterHoursDropbox: "after_hours_dropbox";
};
export type ListServicePointsResponseBodyServicePointsInnerFeaturesEnum = typeof ListServicePointsResponseBodyServicePointsInnerFeaturesEnum[keyof typeof ListServicePointsResponseBodyServicePointsInnerFeaturesEnum];
export declare const ListServicePointsResponseBodyServicePointsInnerTypeEnum: {
    readonly Pudo: "pudo";
    readonly Locker: "locker";
};
export type ListServicePointsResponseBodyServicePointsInnerTypeEnum = typeof ListServicePointsResponseBodyServicePointsInnerTypeEnum[keyof typeof ListServicePointsResponseBodyServicePointsInnerTypeEnum];
/**
 *
 * @export
 * @interface ListServicePointsResponseBodyServicePointsInnerHoursOfOperation
 */
export interface ListServicePointsResponseBodyServicePointsInnerHoursOfOperation {
    /**
     *
     * @type {Array<ListServicePointsResponseBodyServicePointsInnerHoursOfOperationMondayInner>}
     * @memberof ListServicePointsResponseBodyServicePointsInnerHoursOfOperation
     */
    'monday'?: Array<ListServicePointsResponseBodyServicePointsInnerHoursOfOperationMondayInner>;
    /**
     *
     * @type {Array<ListServicePointsResponseBodyServicePointsInnerHoursOfOperationMondayInner>}
     * @memberof ListServicePointsResponseBodyServicePointsInnerHoursOfOperation
     */
    'tuesday'?: Array<ListServicePointsResponseBodyServicePointsInnerHoursOfOperationMondayInner>;
    /**
     *
     * @type {Array<ListServicePointsResponseBodyServicePointsInnerHoursOfOperationMondayInner>}
     * @memberof ListServicePointsResponseBodyServicePointsInnerHoursOfOperation
     */
    'wednesday'?: Array<ListServicePointsResponseBodyServicePointsInnerHoursOfOperationMondayInner>;
    /**
     *
     * @type {Array<ListServicePointsResponseBodyServicePointsInnerHoursOfOperationMondayInner>}
     * @memberof ListServicePointsResponseBodyServicePointsInnerHoursOfOperation
     */
    'thursday'?: Array<ListServicePointsResponseBodyServicePointsInnerHoursOfOperationMondayInner>;
    /**
     *
     * @type {Array<ListServicePointsResponseBodyServicePointsInnerHoursOfOperationMondayInner>}
     * @memberof ListServicePointsResponseBodyServicePointsInnerHoursOfOperation
     */
    'friday'?: Array<ListServicePointsResponseBodyServicePointsInnerHoursOfOperationMondayInner>;
    /**
     *
     * @type {Array<ListServicePointsResponseBodyServicePointsInnerHoursOfOperationMondayInner>}
     * @memberof ListServicePointsResponseBodyServicePointsInnerHoursOfOperation
     */
    'saturday'?: Array<ListServicePointsResponseBodyServicePointsInnerHoursOfOperationMondayInner>;
    /**
     *
     * @type {Array<ListServicePointsResponseBodyServicePointsInnerHoursOfOperationMondayInner>}
     * @memberof ListServicePointsResponseBodyServicePointsInnerHoursOfOperation
     */
    'sunday'?: Array<ListServicePointsResponseBodyServicePointsInnerHoursOfOperationMondayInner>;
}
/**
 *
 * @export
 * @interface ListServicePointsResponseBodyServicePointsInnerHoursOfOperationMondayInner
 */
export interface ListServicePointsResponseBodyServicePointsInnerHoursOfOperationMondayInner {
    /**
     *
     * @type {string}
     * @memberof ListServicePointsResponseBodyServicePointsInnerHoursOfOperationMondayInner
     */
    'open'?: string;
    /**
     *
     * @type {string}
     * @memberof ListServicePointsResponseBodyServicePointsInnerHoursOfOperationMondayInner
     */
    'close'?: string;
}
/**
 * A list shipment rates response body
 * @export
 * @interface ListShipmentRatesResponseBody
 */
export interface ListShipmentRatesResponseBody {
    /**
     * An array of shipment rates
     * @type {Array<RatesInformationRatesInner>}
     * @memberof ListShipmentRatesResponseBody
     */
    'rates': Array<RatesInformationRatesInner>;
    /**
     * An array of invalid shipment rates
     * @type {Array<RatesInformationInvalidRatesInner>}
     * @memberof ListShipmentRatesResponseBody
     */
    'invalid_rates': Array<RatesInformationInvalidRatesInner>;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof ListShipmentRatesResponseBody
     */
    'rate_request_id': string;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof ListShipmentRatesResponseBody
     */
    'shipment_id': string;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof ListShipmentRatesResponseBody
     */
    'created_at': string;
    /**
     *
     * @type {RateResponseStatus}
     * @memberof ListShipmentRatesResponseBody
     */
    'status': RateResponseStatus;
    /**
     *
     * @type {Array<ModelError>}
     * @memberof ListShipmentRatesResponseBody
     */
    'errors': Array<ModelError>;
}
/**
 * A list shipment response body
 * @export
 * @interface ListShipmentsResponseBody
 */
export interface ListShipmentsResponseBody {
    /**
     * The list of shipments returned by the api call
     * @type {Array<Shipment>}
     * @memberof ListShipmentsResponseBody
     */
    'shipments': Array<Shipment>;
    /**
     * Total number of shipments returned by the api call
     * @type {number}
     * @memberof ListShipmentsResponseBody
     */
    'total': number;
    /**
     *
     * @type {number}
     * @memberof ListShipmentsResponseBody
     */
    'page': number;
    /**
     *
     * @type {number}
     * @memberof ListShipmentsResponseBody
     */
    'pages': number;
    /**
     *
     * @type {PaginationLink}
     * @memberof ListShipmentsResponseBody
     */
    'links': PaginationLink;
}
/**
 * Response body from a successful GET /tags API call
 * @export
 * @interface ListTagsResponseBody
 */
export interface ListTagsResponseBody {
    /**
     * The array of tags returned by the API call
     * @type {Array<Tag>}
     * @memberof ListTagsResponseBody
     */
    'tags'?: Array<Tag>;
}
/**
 * A warehouse list response body
 * @export
 * @interface ListWarehousesResponseBody
 */
export interface ListWarehousesResponseBody {
    /**
     * The array of warehouses returned by the API call
     * @type {Array<Warehouse>}
     * @memberof ListWarehousesResponseBody
     */
    'warehouses': Array<Warehouse>;
}
/**
 * Used for combining packages into one scannable form that a carrier can use when picking up a large  number of shipments
 * @export
 * @interface Manifest
 */
export interface Manifest {
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof Manifest
     */
    'manifest_id'?: string;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof Manifest
     */
    'form_id'?: string;
    /**
     * The date-time that the manifest was created
     * @type {string}
     * @memberof Manifest
     */
    'created_at'?: string;
    /**
     * The date-time that the manifests shipments will be picked up
     * @type {string}
     * @memberof Manifest
     */
    'ship_date'?: string;
    /**
     * The number of shipments that are included in this manifest
     * @type {number}
     * @memberof Manifest
     */
    'shipments'?: number;
    /**
     * An array of the label ids used in this manifest.
     * @type {Array<string>}
     * @memberof Manifest
     */
    'label_ids'?: Array<string>;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof Manifest
     */
    'warehouse_id'?: string;
    /**
     * A string that uniquely identifies the submission
     * @type {string}
     * @memberof Manifest
     */
    'submission_id'?: string;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof Manifest
     */
    'carrier_id'?: string;
    /**
     *
     * @type {ManifestDownload}
     * @memberof Manifest
     */
    'manifest_download'?: ManifestDownload;
}
/**
 * Object containing the href link to download the manifest file
 * @export
 * @interface ManifestDownload
 */
export interface ManifestDownload {
    /**
     * A URL
     * @type {string}
     * @memberof ManifestDownload
     */
    'href'?: string;
}
/**
 * A reference to the manifest request
 * @export
 * @interface ManifestRequest
 */
export interface ManifestRequest {
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof ManifestRequest
     */
    'manifest_request_id'?: string;
    /**
     *
     * @type {ManifestRequestStatus}
     * @memberof ManifestRequest
     */
    'status'?: ManifestRequestStatus;
}
/**
 * The possible statuses of a manifest request
 * @export
 * @enum {string}
 */
export declare const ManifestRequestStatus: {
    readonly InProgress: "in_progress";
    readonly Completed: "completed";
};
export type ManifestRequestStatus = typeof ManifestRequestStatus[keyof typeof ManifestRequestStatus];
/**
 * An array of manifest resources
 * @export
 * @interface Manifests
 */
export interface Manifests {
    /**
     * Resulting Manifests
     * @type {Array<Manifest>}
     * @memberof Manifests
     */
    'manifests'?: Array<Manifest>;
}
/**
 * An array of manifest requests
 * @export
 * @interface ManifestsRequests
 */
export interface ManifestsRequests {
    /**
     * Resulting manifest requests with statuses
     * @type {Array<ManifestRequest>}
     * @memberof ManifestsRequests
     */
    'manifest_requests'?: Array<ManifestRequest>;
}
/**
 * The error structure that gets returned with almost all failed API calls
 * @export
 * @interface ModelError
 */
export interface ModelError {
    /**
     *
     * @type {ErrorSource}
     * @memberof ModelError
     */
    'error_source': ErrorSource;
    /**
     *
     * @type {ErrorType}
     * @memberof ModelError
     */
    'error_type': ErrorType;
    /**
     *
     * @type {ErrorCode}
     * @memberof ModelError
     */
    'error_code': ErrorCode;
    /**
     * An error message associated with the failed API call
     * @type {string}
     * @memberof ModelError
     */
    'message': string;
}
/**
 * A modify batch object
 * @export
 * @interface ModifyBatch
 */
export interface ModifyBatch {
    /**
     * The Shipment Ids to be modified on the batch
     * @type {Array<string>}
     * @memberof ModifyBatch
     */
    'shipment_ids'?: Array<string>;
    /**
     * Array of Rate IDs to be modifed on the batch
     * @type {Array<string>}
     * @memberof ModifyBatch
     */
    'rate_ids'?: Array<string>;
}
/**
 * A monetary value, such as the price of a shipping label, the insured value of a package, or an account balance.
 * @export
 * @interface MonetaryValue
 */
export interface MonetaryValue {
    /**
     * The currencies that are supported by ShipEngine are the ones that specified by ISO 4217: https://www.iso.org/iso-4217-currency-codes.html
     * @type {string}
     * @memberof MonetaryValue
     */
    'currency': string;
    /**
     * The monetary amount, in the specified currency.
     * @type {number}
     * @memberof MonetaryValue
     */
    'amount': number;
}
/**
 * The possible non delivery values
 * @export
 * @enum {string}
 */
export declare const NonDelivery: {
    readonly ReturnToSender: "return_to_sender";
    readonly TreatAsAbandoned: "treat_as_abandoned";
};
export type NonDelivery = typeof NonDelivery[keyof typeof NonDelivery];
/**
 * A link to a related resource, or an empty object if there is no resource to link to
 * @export
 * @interface OptionalLink
 */
export interface OptionalLink {
    /**
     * A URL
     * @type {string}
     * @memberof OptionalLink
     */
    'href'?: string;
    /**
     * The type of resource, or the type of relationship to the parent resource
     * @type {string}
     * @memberof OptionalLink
     */
    'type'?: string;
}
/**
 * The order sources that are supported by ShipEngine
 * @export
 * @enum {string}
 */
export declare const OrderSourceName: {
    readonly AmazonCa: "amazon_ca";
    readonly AmazonUs: "amazon_us";
    readonly Brightpearl: "brightpearl";
    readonly ChannelAdvisor: "channel_advisor";
    readonly Cratejoy: "cratejoy";
    readonly Ebay: "ebay";
    readonly Etsy: "etsy";
    readonly Jane: "jane";
    readonly GrouponGoods: "groupon_goods";
    readonly Magento: "magento";
    readonly Paypal: "paypal";
    readonly SellerActive: "seller_active";
    readonly Shopify: "shopify";
    readonly StitchLabs: "stitch_labs";
    readonly Squarespace: "squarespace";
    readonly ThreeDcart: "three_dcart";
    readonly Tophatter: "tophatter";
    readonly Walmart: "walmart";
    readonly WooCommerce: "woo_commerce";
    readonly Volusion: "volusion";
};
export type OrderSourceName = typeof OrderSourceName[keyof typeof OrderSourceName];
/**
 * Indicates if the package will be picked up or dropped off by the carrier
 * @export
 * @enum {string}
 */
export declare const OriginType: {
    readonly Pickup: "pickup";
    readonly DropOff: "drop_off";
};
export type OriginType = typeof OriginType[keyof typeof OriginType];
/**
 * A package associated with a [shipping label](https://www.shipengine.com/docs/labels/create-a-label/)
 * @export
 * @interface Package
 */
export interface Package {
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof Package
     */
    'package_id'?: string;
    /**
     * A [package type](https://www.shipengine.com/docs/reference/list-carrier-packages/), such as `thick_envelope`, `small_flat_rate_box`, `large_package`, etc.  Use the code `package` for custom or unknown package types.
     * @type {string}
     * @memberof Package
     */
    'package_code'?: string;
    /**
     * A short description of the package content. Required for shipments moving to, from, and through Mexico.
     * @type {string}
     * @memberof Package
     */
    'content_description'?: string | null;
    /**
     *
     * @type {Weight}
     * @memberof Package
     */
    'weight': Weight;
    /**
     *
     * @type {Dimensions}
     * @memberof Package
     */
    'dimensions'?: Dimensions;
    /**
     *
     * @type {MonetaryValue}
     * @memberof Package
     */
    'insured_value'?: MonetaryValue;
    /**
     * A tracking number for a package. The format depends on the carrier.
     * @type {string}
     * @memberof Package
     */
    'tracking_number'?: string;
    /**
     *
     * @type {LabelMessages}
     * @memberof Package
     */
    'label_messages'?: LabelMessages;
    /**
     * An external package id.
     * @type {string}
     * @memberof Package
     */
    'external_package_id'?: string;
    /**
     *
     * @type {PackageLabelDownload}
     * @memberof Package
     */
    'label_download'?: PackageLabelDownload;
    /**
     *
     * @type {BatchFormDownload}
     * @memberof Package
     */
    'form_download'?: BatchFormDownload;
    /**
     * Package sequence
     * @type {number}
     * @memberof Package
     */
    'sequence'?: number;
    /**
     * Details about products inside packages (Information provided would be used on custom documentation)
     * @type {Array<Products>}
     * @memberof Package
     */
    'products'?: Array<Products>;
}
/**
 * The possible package contents values
 * @export
 * @enum {string}
 */
export declare const PackageContents: {
    readonly Merchandise: "merchandise";
    readonly Documents: "documents";
    readonly Gift: "gift";
    readonly ReturnedGoods: "returned_goods";
    readonly Sample: "sample";
    readonly Other: "other";
};
export type PackageContents = typeof PackageContents[keyof typeof PackageContents];
/**
 * The label download for the package
 * @export
 * @interface PackageLabelDownload
 */
export interface PackageLabelDownload {
    /**
     * A URL
     * @type {string}
     * @memberof PackageLabelDownload
     */
    'href'?: string;
    /**
     * A URL
     * @type {string}
     * @memberof PackageLabelDownload
     */
    'pdf'?: string;
    /**
     * A URL
     * @type {string}
     * @memberof PackageLabelDownload
     */
    'png'?: string;
    /**
     * A URL
     * @type {string}
     * @memberof PackageLabelDownload
     */
    'zpl'?: string;
}
/**
 * A package type that a carrier supports for shipment.
 * @export
 * @interface PackageType
 */
export interface PackageType {
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof PackageType
     */
    'package_id'?: string;
    /**
     * A [package type](https://www.shipengine.com/docs/reference/list-carrier-packages/), such as `thick_envelope`, `small_flat_rate_box`, `large_package`, etc.  Use the code `package` for custom or unknown package types.
     * @type {string}
     * @memberof PackageType
     */
    'package_code': string;
    /**
     *
     * @type {string}
     * @memberof PackageType
     */
    'name': string;
    /**
     *
     * @type {Dimensions}
     * @memberof PackageType
     */
    'dimensions'?: Dimensions;
    /**
     * Provides a helpful description for the custom package.
     * @type {string}
     * @memberof PackageType
     */
    'description'?: string | null;
}
/**
 * Many ShipEngine endpoints return a paged list of items.  In addition to the returned items, these responses also include information about the total number of items, the number of pages of results, and URLs of other pages of results.
 * @export
 * @interface PagedListResponseBody
 */
export interface PagedListResponseBody {
    [key: string]: any;
    /**
     * The total number of items across all pages of results
     * @type {number}
     * @memberof PagedListResponseBody
     */
    'total': number;
    /**
     * The current page number of results.  For example, if there are 80 results, and the page size is 25, then `page` could be 1, 2, 3, or 4.  The first three pages would contain 25 items each, and the fourth page would contain the five remaining items.
     * @type {number}
     * @memberof PagedListResponseBody
     */
    'page': number;
    /**
     * The total number of pages of results.  For example, if there are 80 results, and the page size is 25, then `pages` would be 4.  The first three pages would contain 25 items each, and the fourth page would contain the five remaining items.  If there are no results, then `pages` will be zero.
     * @type {number}
     * @memberof PagedListResponseBody
     */
    'pages': number;
    /**
     *
     * @type {PaginationLink}
     * @memberof PagedListResponseBody
     */
    'links': PaginationLink;
}
/**
 * Helpful links to other pages of results
 * @export
 * @interface PaginationLink
 */
export interface PaginationLink {
    /**
     *
     * @type {Link}
     * @memberof PaginationLink
     */
    'first': Link;
    /**
     *
     * @type {Link}
     * @memberof PaginationLink
     */
    'last': Link;
    /**
     *
     * @type {OptionalLink}
     * @memberof PaginationLink
     */
    'prev': OptionalLink;
    /**
     *
     * @type {OptionalLink}
     * @memberof PaginationLink
     */
    'next': OptionalLink;
}
/**
 * The only required field is `text`, which is the text to be parsed. You can optionally also provide an `address` containing already-known values. For example, you may already know the recipient\'s name, city, and country, and only want to parse the street address into separate lines.
 * @export
 * @interface ParseAddressRequestBody
 */
export interface ParseAddressRequestBody {
    /**
     * The unstructured text that contains address-related entities
     * @type {string}
     * @memberof ParseAddressRequestBody
     */
    'text': string;
    /**
     *
     * @type {PartialAddress}
     * @memberof ParseAddressRequestBody
     */
    'address'?: PartialAddress;
}
/**
 * The parsed address, as well as a confidence score and a list of all the entities that were recognized in the text.
 * @export
 * @interface ParseAddressResponseBody
 */
export interface ParseAddressResponseBody {
    /**
     * A confidence score between zero and one that indicates how certain the API is that it understood the text.
     * @type {number}
     * @memberof ParseAddressResponseBody
     */
    'score': number;
    /**
     *
     * @type {PartialAddress}
     * @memberof ParseAddressResponseBody
     */
    'address': PartialAddress;
    /**
     * All of the entities that were recognized in the text. An \"entity\" is a single piece of data, such as a city, a postal code, or an address line.  Each entity includes the original text and the parsed value.
     * @type {Array<RecognizedEntity>}
     * @memberof ParseAddressResponseBody
     */
    'entities': Array<RecognizedEntity>;
}
/**
 * The only required field is `text`, which is the text to be parsed. You can optionally also provide a `shipment` containing any already-known values. For example, you probably already know the `ship_from` address, and you may also already know what carrier and service you want to use.
 * @export
 * @interface ParseShipmentRequestBody
 */
export interface ParseShipmentRequestBody {
    /**
     * The unstructured text that contains shipping-related entities
     * @type {string}
     * @memberof ParseShipmentRequestBody
     */
    'text': string;
    /**
     *
     * @type {PartialShipment}
     * @memberof ParseShipmentRequestBody
     */
    'shipment'?: PartialShipment;
}
/**
 * The parsed shipment, as well as a confidence score and a list of all the shipping entities that were recognized in the text.
 * @export
 * @interface ParseShipmentResponseBody
 */
export interface ParseShipmentResponseBody {
    /**
     * A confidence score between zero and one that indicates how certain the API is that it understood the text.
     * @type {number}
     * @memberof ParseShipmentResponseBody
     */
    'score': number;
    /**
     *
     * @type {PartialShipment}
     * @memberof ParseShipmentResponseBody
     */
    'shipment': PartialShipment;
    /**
     * All of the entities that were recognized in the text. An \"entity\" is a single piece of data, such as a city, a postal code, a carrier name, or a package weight.  Each entity includes the original text and the parsed value.
     * @type {Array<RecognizedEntity>}
     * @memberof ParseShipmentResponseBody
     */
    'entities': Array<RecognizedEntity>;
}
/**
 * A complete or partial mailing address.
 * @export
 * @interface PartialAddress
 */
export interface PartialAddress {
    /**
     * The name of a contact person at this address.  This field may be set instead of - or in addition to - the `company_name` field.
     * @type {string}
     * @memberof PartialAddress
     */
    'name'?: string;
    /**
     * The phone number of a contact person at this address.  The format of this phone number varies depending on the country.
     * @type {string}
     * @memberof PartialAddress
     */
    'phone'?: string;
    /**
     * Email for the address owner.
     * @type {string}
     * @memberof PartialAddress
     */
    'email'?: string | null;
    /**
     * If this is a business address, then the company name should be specified here.
     * @type {string}
     * @memberof PartialAddress
     */
    'company_name'?: string | null;
    /**
     * The first line of the street address.  For some addresses, this may be the only line.  Other addresses may require 2 or 3 lines.
     * @type {string}
     * @memberof PartialAddress
     */
    'address_line1'?: string;
    /**
     * The second line of the street address.  For some addresses, this line may not be needed.
     * @type {string}
     * @memberof PartialAddress
     */
    'address_line2'?: string | null;
    /**
     * The third line of the street address.  For some addresses, this line may not be needed.
     * @type {string}
     * @memberof PartialAddress
     */
    'address_line3'?: string | null;
    /**
     * The name of the city or locality
     * @type {string}
     * @memberof PartialAddress
     */
    'city_locality'?: string;
    /**
     * The state or province.  For some countries (including the U.S.) only abbreviations are allowed.  Other countries allow the full name or abbreviation.
     * @type {string}
     * @memberof PartialAddress
     */
    'state_province'?: string;
    /**
     * postal code
     * @type {string}
     * @memberof PartialAddress
     */
    'postal_code'?: string;
    /**
     * A two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1)
     * @type {string}
     * @memberof PartialAddress
     */
    'country_code'?: string;
    /**
     *
     * @type {AddressResidentialIndicator}
     * @memberof PartialAddress
     */
    'address_residential_indicator'?: AddressResidentialIndicator;
}
/**
 * The information necessary to ship a package, such as the origin, the destination, the carrier service, and the package dimensions and weight.
 * @export
 * @interface PartialShipment
 */
export interface PartialShipment {
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof PartialShipment
     */
    'shipment_id'?: string;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof PartialShipment
     */
    'carrier_id'?: string;
    /**
     * A [carrier service](https://www.shipengine.com/docs/shipping/use-a-carrier-service/), such as `fedex_ground`, `usps_first_class_mail`, `flat_rate_envelope`, etc.
     * @type {string}
     * @memberof PartialShipment
     */
    'service_code'?: string;
    /**
     * ID that the Order Source assigned
     * @type {string}
     * @memberof PartialShipment
     */
    'external_order_id'?: string | null;
    /**
     * Describe the packages included in this shipment as related to potential metadata that was imported from external order sources
     * @type {Array<ShipmentItem>}
     * @memberof PartialShipment
     */
    'items'?: Array<ShipmentItem>;
    /**
     *
     * @type {Array<TaxIdentifier>}
     * @memberof PartialShipment
     */
    'tax_identifiers'?: Array<TaxIdentifier> | null;
    /**
     * A unique user-defined key to identify a shipment.  This can be used to retrieve the shipment.  > **Warning:** The `external_shipment_id` is limited to 50 characters. Any additional characters will be truncated.
     * @type {string}
     * @memberof PartialShipment
     */
    'external_shipment_id'?: string | null;
    /**
     * A non-unique user-defined number used to identify a shipment.  If undefined, this will match the external_shipment_id of the shipment.  > **Warning:** The `shipment_number` is limited to 50 characters. Any additional characters will be truncated.
     * @type {string}
     * @memberof PartialShipment
     */
    'shipment_number'?: string | null;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date, but not a specific time.  The value _may_ contain a time component, but it will be set to `00:00:00` UTC by ShipEngine.
     * @type {string}
     * @memberof PartialShipment
     */
    'ship_date'?: string;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date and time.
     * @type {string}
     * @memberof PartialShipment
     */
    'created_at'?: string;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date and time.
     * @type {string}
     * @memberof PartialShipment
     */
    'modified_at'?: string;
    /**
     *
     * @type {ShipmentStatus}
     * @memberof PartialShipment
     */
    'shipment_status'?: ShipmentStatus;
    /**
     *
     * @type {ShippingAddress}
     * @memberof PartialShipment
     */
    'ship_to'?: ShippingAddress;
    /**
     *
     * @type {ShippingAddress}
     * @memberof PartialShipment
     */
    'ship_from'?: ShippingAddress;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof PartialShipment
     */
    'warehouse_id'?: string | null;
    /**
     *
     * @type {ShippingAddress}
     * @memberof PartialShipment
     */
    'return_to'?: ShippingAddress;
    /**
     * An optional indicator if the shipment is intended to be a return. Defaults to false if not provided.
     * @type {boolean}
     * @memberof PartialShipment
     */
    'is_return'?: boolean | null;
    /**
     *
     * @type {DeliveryConfirmation}
     * @memberof PartialShipment
     */
    'confirmation'?: DeliveryConfirmation;
    /**
     *
     * @type {PartialShipmentCustoms}
     * @memberof PartialShipment
     */
    'customs'?: PartialShipmentCustoms | null;
    /**
     *
     * @type {AdvancedShipmentOptions}
     * @memberof PartialShipment
     */
    'advanced_options'?: AdvancedShipmentOptions;
    /**
     *
     * @type {InsuranceProvider}
     * @memberof PartialShipment
     */
    'insurance_provider'?: InsuranceProvider;
    /**
     * Arbitrary tags associated with this shipment.  Tags can be used to categorize shipments, and shipments can be queried by their tags.
     * @type {Array<Tag>}
     * @memberof PartialShipment
     */
    'tags'?: Array<Tag>;
    /**
     *
     * @type {OrderSourceName}
     * @memberof PartialShipment
     */
    'order_source_code'?: OrderSourceName;
    /**
     * The packages in the shipment.  > **Note:** Some carriers only allow one package per shipment.  If you attempt to create a multi-package shipment for a carrier that doesn\'t allow it, an error will be returned.
     * @type {Array<Package>}
     * @memberof PartialShipment
     */
    'packages'?: Array<Package>;
    /**
     *
     * @type {PartialShipmentTotalWeight}
     * @memberof PartialShipment
     */
    'total_weight'?: PartialShipmentTotalWeight;
}
/**
 * Customs information.  This is usually only needed for international shipments.
 * @export
 * @interface PartialShipmentCustoms
 */
export interface PartialShipmentCustoms {
    /**
     *
     * @type {PackageContents}
     * @memberof PartialShipmentCustoms
     */
    'contents': PackageContents;
    /**
     * Explanation for contents (required if the `contents` is provided as `other`)
     * @type {string}
     * @memberof PartialShipmentCustoms
     */
    'contents_explanation'?: string;
    /**
     *
     * @type {NonDelivery}
     * @memberof PartialShipmentCustoms
     */
    'non_delivery': NonDelivery;
    /**
     *
     * @type {AllowedIncoterms}
     * @memberof PartialShipmentCustoms
     */
    'terms_of_trade_code'?: AllowedIncoterms;
    /**
     * Declaration statement to be placed on the commercial invoice
     * @type {string}
     * @memberof PartialShipmentCustoms
     */
    'declaration'?: string;
    /**
     *
     * @type {InvoiceAdditionalDetails}
     * @memberof PartialShipmentCustoms
     */
    'invoice_additional_details'?: InvoiceAdditionalDetails;
    /**
     *
     * @type {ImporterOfRecords}
     * @memberof PartialShipmentCustoms
     */
    'importer_of_record'?: ImporterOfRecords;
    /**
     * Customs declarations for each item in the shipment. (Please provide this information under `products` inside `packages`)
     * @type {Array<CustomsItem>}
     * @memberof PartialShipmentCustoms
     * @deprecated
     */
    'customs_items'?: Array<CustomsItem>;
}
/**
 * The combined weight of all packages in the shipment
 * @export
 * @interface PartialShipmentTotalWeight
 */
export interface PartialShipmentTotalWeight {
    /**
     * The weight, in the specified unit
     * @type {number}
     * @memberof PartialShipmentTotalWeight
     */
    'value': number;
    /**
     *
     * @type {WeightUnit}
     * @memberof PartialShipmentTotalWeight
     */
    'unit': WeightUnit;
}
/**
 * A complete or partial mailing address.
 * @export
 * @interface PartialShippingAddress
 */
export interface PartialShippingAddress {
    /**
     * Additional text about how to handle the shipment at this address.
     * @type {string}
     * @memberof PartialShippingAddress
     */
    'instructions'?: string | null;
}
/**
 *
 * @export
 * @interface PaymentAmount
 */
export interface PaymentAmount {
    /**
     * The currencies that are supported by ShipEngine are the ones that specified by ISO 4217: https://www.iso.org/iso-4217-currency-codes.html
     * @type {string}
     * @memberof PaymentAmount
     */
    'currency'?: string;
    /**
     *
     * @type {number}
     * @memberof PaymentAmount
     */
    'amount'?: number;
}
/**
 * The information necessary to schedule a package pickup
 * @export
 * @interface Pickup
 */
export interface Pickup {
    /**
     * Pickup Resource ID
     * @type {string}
     * @memberof Pickup
     */
    'pickup_id'?: string;
    /**
     * Label IDs that will be included in the pickup request
     * @type {Array<string>}
     * @memberof Pickup
     */
    'label_ids'?: Array<string>;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date and time.
     * @type {string}
     * @memberof Pickup
     */
    'created_at'?: string;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date and time.
     * @type {string}
     * @memberof Pickup
     */
    'cancelled_at'?: string;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof Pickup
     */
    'carrier_id'?: string;
    /**
     * The carrier confirmation number for the scheduled pickup.
     * @type {string}
     * @memberof Pickup
     */
    'confirmation_number'?: string | null;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof Pickup
     */
    'warehouse_id'?: string;
    /**
     *
     * @type {Address}
     * @memberof Pickup
     */
    'pickup_address'?: Address;
    /**
     *
     * @type {ContactDetails}
     * @memberof Pickup
     */
    'contact_details'?: ContactDetails;
    /**
     * Used by some carriers to give special instructions for a package pickup
     * @type {string}
     * @memberof Pickup
     */
    'pickup_notes'?: string;
    /**
     *
     * @type {PickupWindow}
     * @memberof Pickup
     */
    'pickup_window'?: PickupWindow;
    /**
     * An array of available pickup windows. Carriers can return multiple times that they will pickup packages.
     * @type {Array<PickupWindows>}
     * @memberof Pickup
     */
    'pickup_windows'?: Array<PickupWindows>;
}
/**
 * A pickup response body
 * @export
 * @interface PickupResponseBody
 */
export interface PickupResponseBody {
    /**
     * Pickup Resource ID
     * @type {string}
     * @memberof PickupResponseBody
     */
    'pickup_id': string;
    /**
     * Label IDs that will be included in the pickup request
     * @type {Array<string>}
     * @memberof PickupResponseBody
     */
    'label_ids': Array<string>;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date and time.
     * @type {string}
     * @memberof PickupResponseBody
     */
    'created_at': string;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date and time.
     * @type {string}
     * @memberof PickupResponseBody
     */
    'cancelled_at'?: string;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof PickupResponseBody
     */
    'carrier_id': string;
    /**
     * The carrier confirmation number for the scheduled pickup.
     * @type {string}
     * @memberof PickupResponseBody
     */
    'confirmation_number': string | null;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof PickupResponseBody
     */
    'warehouse_id': string;
    /**
     *
     * @type {Address}
     * @memberof PickupResponseBody
     */
    'pickup_address': Address;
    /**
     *
     * @type {ContactDetails}
     * @memberof PickupResponseBody
     */
    'contact_details': ContactDetails;
    /**
     * Used by some carriers to give special instructions for a package pickup
     * @type {string}
     * @memberof PickupResponseBody
     */
    'pickup_notes'?: string;
    /**
     *
     * @type {PickupWindow}
     * @memberof PickupResponseBody
     */
    'pickup_window': PickupWindow;
    /**
     * An array of available pickup windows. Carriers can return multiple times that they will pickup packages.
     * @type {Array<PickupWindows>}
     * @memberof PickupResponseBody
     */
    'pickup_windows'?: Array<PickupWindows>;
}
/**
 * The desired time range for the package pickup.
 * @export
 * @interface PickupWindow
 */
export interface PickupWindow {
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date and time.
     * @type {string}
     * @memberof PickupWindow
     */
    'start_at': string;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date and time.
     * @type {string}
     * @memberof PickupWindow
     */
    'end_at': string;
}
/**
 *
 * @export
 * @interface PickupWindows
 */
export interface PickupWindows {
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date and time.
     * @type {string}
     * @memberof PickupWindows
     */
    'start_at'?: string;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date and time.
     * @type {string}
     * @memberof PickupWindows
     */
    'end_at'?: string;
}
/**
 * A process batch request body
 * @export
 * @interface ProcessBatchRequestBody
 */
export interface ProcessBatchRequestBody {
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date and time.
     * @type {string}
     * @memberof ProcessBatchRequestBody
     */
    'ship_date'?: string;
    /**
     *
     * @type {LabelLayout}
     * @memberof ProcessBatchRequestBody
     */
    'label_layout'?: LabelLayout;
    /**
     *
     * @type {LabelFormat}
     * @memberof ProcessBatchRequestBody
     */
    'label_format'?: LabelFormat;
    /**
     *
     * @type {DisplayScheme}
     * @memberof ProcessBatchRequestBody
     */
    'display_scheme'?: DisplayScheme;
}
/**
 * The customs declaration for a single item in the shipment.
 * @export
 * @interface Products
 */
export interface Products {
    /**
     * A description of the item
     * @type {string}
     * @memberof Products
     */
    'description'?: string | null;
    /**
     * The quantity of this item in the shipment.
     * @type {number}
     * @memberof Products
     */
    'quantity'?: number;
    /**
     *
     * @type {MonetaryValue}
     * @memberof Products
     */
    'value'?: MonetaryValue;
    /**
     *
     * @type {Weight}
     * @memberof Products
     */
    'weight'?: Weight;
    /**
     * The [Harmonized Tariff Code](https://en.wikipedia.org/wiki/Harmonized_System) of this item.
     * @type {string}
     * @memberof Products
     */
    'harmonized_tariff_code'?: string | null;
    /**
     * A two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1)
     * @type {string}
     * @memberof Products
     */
    'country_of_origin'?: string | null;
    /**
     *
     * @type {string}
     * @memberof Products
     */
    'unit_of_measure'?: string | null;
    /**
     * The SKU (Stock Keeping Unit) of the item
     * @type {string}
     * @memberof Products
     */
    'sku'?: string | null;
    /**
     * Description of the Custom Item\'s SKU
     * @type {string}
     * @memberof Products
     */
    'sku_description'?: string | null;
    /**
     * Manufacturers Identification code
     * @type {string}
     * @memberof Products
     */
    'mid_code'?: string | null;
    /**
     * link to the item on the seller website
     * @type {string}
     * @memberof Products
     */
    'product_url'?: string | null;
    /**
     * VAT rate applicable to the item
     * @type {number}
     * @memberof Products
     */
    'vat_rate'?: number | null;
}
/**
 * A purchase label without shipment resource
 * @export
 * @interface PurchaseLabelWithoutShipment
 */
export interface PurchaseLabelWithoutShipment {
    /**
     *
     * @type {ValidateAddress}
     * @memberof PurchaseLabelWithoutShipment
     */
    'validate_address'?: ValidateAddress;
    /**
     *
     * @type {LabelLayout}
     * @memberof PurchaseLabelWithoutShipment
     */
    'label_layout'?: LabelLayout;
    /**
     *
     * @type {LabelFormat}
     * @memberof PurchaseLabelWithoutShipment
     */
    'label_format'?: LabelFormat;
    /**
     *
     * @type {LabelDownloadType}
     * @memberof PurchaseLabelWithoutShipment
     */
    'label_download_type'?: LabelDownloadType;
    /**
     *
     * @type {DisplayScheme}
     * @memberof PurchaseLabelWithoutShipment
     */
    'display_scheme'?: DisplayScheme;
}
/**
 * A rate
 * @export
 * @interface Rate
 */
export interface Rate {
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof Rate
     */
    'rate_id': string;
    /**
     *
     * @type {RateType}
     * @memberof Rate
     */
    'rate_type': RateType;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof Rate
     */
    'carrier_id': string;
    /**
     *
     * @type {RateShippingAmount}
     * @memberof Rate
     */
    'shipping_amount': RateShippingAmount;
    /**
     *
     * @type {RateInsuranceAmount}
     * @memberof Rate
     */
    'insurance_amount': RateInsuranceAmount;
    /**
     *
     * @type {RateConfirmationAmount}
     * @memberof Rate
     */
    'confirmation_amount': RateConfirmationAmount;
    /**
     *
     * @type {RateOtherAmount}
     * @memberof Rate
     */
    'other_amount': RateOtherAmount;
    /**
     *
     * @type {RateTaxAmount}
     * @memberof Rate
     */
    'tax_amount'?: RateTaxAmount;
    /**
     * Certain carriers base [their rates](https://blog.stamps.com/2017/09/08/usps-postal-zones/) off of custom zones that vary depending upon the ship_to and ship_from location
     * @type {number}
     * @memberof Rate
     */
    'zone': number | null;
    /**
     * package type that this rate was estimated for
     * @type {string}
     * @memberof Rate
     */
    'package_type': string | null;
    /**
     * The number of days estimated for delivery, this will show the _actual_ delivery time if for example, the package gets shipped on a Friday
     * @type {number}
     * @memberof Rate
     */
    'delivery_days'?: number;
    /**
     * Indicates if the rate is guaranteed.
     * @type {boolean}
     * @memberof Rate
     */
    'guaranteed_service': boolean;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date, but not a specific time.  The value _may_ contain a time component, but it will be set to `00:00:00` UTC by ShipEngine.
     * @type {string}
     * @memberof Rate
     */
    'estimated_delivery_date'?: string;
    /**
     * The carrier delivery days
     * @type {string}
     * @memberof Rate
     */
    'carrier_delivery_days'?: string;
    /**
     * ship date
     * @type {string}
     * @memberof Rate
     */
    'ship_date'?: string;
    /**
     * Indicates if the rates been negotiated
     * @type {boolean}
     * @memberof Rate
     */
    'negotiated_rate': boolean;
    /**
     * service type
     * @type {string}
     * @memberof Rate
     */
    'service_type': string;
    /**
     * service code for the rate
     * @type {string}
     * @memberof Rate
     */
    'service_code': string;
    /**
     * Indicates if rate is trackable
     * @type {boolean}
     * @memberof Rate
     */
    'trackable': boolean;
    /**
     * carrier code
     * @type {string}
     * @memberof Rate
     */
    'carrier_code': string;
    /**
     * carrier nickname
     * @type {string}
     * @memberof Rate
     */
    'carrier_nickname': string;
    /**
     * carrier friendly name
     * @type {string}
     * @memberof Rate
     */
    'carrier_friendly_name': string;
    /**
     *
     * @type {ValidationStatus}
     * @memberof Rate
     */
    'validation_status': ValidationStatus;
    /**
     * The warning messages
     * @type {Array<string>}
     * @memberof Rate
     */
    'warning_messages': Array<string>;
    /**
     * The error messages
     * @type {Array<string>}
     * @memberof Rate
     */
    'error_messages': Array<string>;
}
/**
 * The confirmation amount
 * @export
 * @interface RateConfirmationAmount
 */
export interface RateConfirmationAmount {
    /**
     * The currencies that are supported by ShipEngine are the ones that specified by ISO 4217: https://www.iso.org/iso-4217-currency-codes.html
     * @type {string}
     * @memberof RateConfirmationAmount
     */
    'currency': string;
    /**
     * The monetary amount, in the specified currency.
     * @type {number}
     * @memberof RateConfirmationAmount
     */
    'amount': number;
}
/**
 * A rate estimate
 * @export
 * @interface RateEstimate
 */
export interface RateEstimate {
    /**
     *
     * @type {RateType}
     * @memberof RateEstimate
     */
    'rate_type': RateType;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof RateEstimate
     */
    'carrier_id': string;
    /**
     *
     * @type {RateShippingAmount}
     * @memberof RateEstimate
     */
    'shipping_amount': RateShippingAmount;
    /**
     *
     * @type {RateInsuranceAmount}
     * @memberof RateEstimate
     */
    'insurance_amount': RateInsuranceAmount;
    /**
     *
     * @type {RateConfirmationAmount}
     * @memberof RateEstimate
     */
    'confirmation_amount': RateConfirmationAmount;
    /**
     *
     * @type {RateOtherAmount}
     * @memberof RateEstimate
     */
    'other_amount': RateOtherAmount;
    /**
     *
     * @type {RateTaxAmount}
     * @memberof RateEstimate
     */
    'tax_amount'?: RateTaxAmount;
    /**
     * Certain carriers base [their rates](https://blog.stamps.com/2017/09/08/usps-postal-zones/) off of custom zones that vary depending upon the ship_to and ship_from location
     * @type {number}
     * @memberof RateEstimate
     */
    'zone': number | null;
    /**
     * package type that this rate was estimated for
     * @type {string}
     * @memberof RateEstimate
     */
    'package_type': string | null;
    /**
     * The number of days estimated for delivery, this will show the _actual_ delivery time if for example, the package gets shipped on a Friday
     * @type {number}
     * @memberof RateEstimate
     */
    'delivery_days'?: number;
    /**
     * Indicates if the rate is guaranteed.
     * @type {boolean}
     * @memberof RateEstimate
     */
    'guaranteed_service': boolean;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date, but not a specific time.  The value _may_ contain a time component, but it will be set to `00:00:00` UTC by ShipEngine.
     * @type {string}
     * @memberof RateEstimate
     */
    'estimated_delivery_date'?: string;
    /**
     * The carrier delivery days
     * @type {string}
     * @memberof RateEstimate
     */
    'carrier_delivery_days'?: string;
    /**
     * ship date
     * @type {string}
     * @memberof RateEstimate
     */
    'ship_date'?: string;
    /**
     * Indicates if the rates been negotiated
     * @type {boolean}
     * @memberof RateEstimate
     */
    'negotiated_rate': boolean;
    /**
     * service type
     * @type {string}
     * @memberof RateEstimate
     */
    'service_type': string;
    /**
     * service code for the rate
     * @type {string}
     * @memberof RateEstimate
     */
    'service_code': string;
    /**
     * Indicates if rate is trackable
     * @type {boolean}
     * @memberof RateEstimate
     */
    'trackable': boolean;
    /**
     * carrier code
     * @type {string}
     * @memberof RateEstimate
     */
    'carrier_code': string;
    /**
     * carrier nickname
     * @type {string}
     * @memberof RateEstimate
     */
    'carrier_nickname': string;
    /**
     * carrier friendly name
     * @type {string}
     * @memberof RateEstimate
     */
    'carrier_friendly_name': string;
    /**
     *
     * @type {ValidationStatus}
     * @memberof RateEstimate
     */
    'validation_status': ValidationStatus;
    /**
     * The warning messages
     * @type {Array<string>}
     * @memberof RateEstimate
     */
    'warning_messages': Array<string>;
    /**
     * The error messages
     * @type {Array<string>}
     * @memberof RateEstimate
     */
    'error_messages': Array<string>;
}
/**
 *
 * @export
 * @interface RateEstimateByCarrierId
 */
export interface RateEstimateByCarrierId {
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof RateEstimateByCarrierId
     */
    'carrier_id'?: string;
}
/**
 *
 * @export
 * @interface RateEstimateByCarrierIds
 */
export interface RateEstimateByCarrierIds {
    /**
     * Array of Carrier Ids
     * @type {Array<string>}
     * @memberof RateEstimateByCarrierIds
     */
    'carrier_ids'?: Array<string>;
}
/**
 *
 * @export
 * @interface RateEstimateOptions
 */
export interface RateEstimateOptions {
    /**
     * A two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1)
     * @type {string}
     * @memberof RateEstimateOptions
     */
    'from_country_code'?: string;
    /**
     * postal code
     * @type {string}
     * @memberof RateEstimateOptions
     */
    'from_postal_code'?: string;
    /**
     * from postal code
     * @type {string}
     * @memberof RateEstimateOptions
     */
    'from_city_locality'?: string;
    /**
     * From state province
     * @type {string}
     * @memberof RateEstimateOptions
     */
    'from_state_province'?: string;
    /**
     * A two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1)
     * @type {string}
     * @memberof RateEstimateOptions
     */
    'to_country_code'?: string;
    /**
     * postal code
     * @type {string}
     * @memberof RateEstimateOptions
     */
    'to_postal_code'?: string;
    /**
     * The city locality the package is being shipped to
     * @type {string}
     * @memberof RateEstimateOptions
     */
    'to_city_locality'?: string;
    /**
     * To state province
     * @type {string}
     * @memberof RateEstimateOptions
     */
    'to_state_province'?: string;
    /**
     *
     * @type {Weight}
     * @memberof RateEstimateOptions
     */
    'weight'?: Weight;
    /**
     *
     * @type {Dimensions}
     * @memberof RateEstimateOptions
     */
    'dimensions'?: Dimensions;
    /**
     *
     * @type {DeliveryConfirmation}
     * @memberof RateEstimateOptions
     */
    'confirmation'?: DeliveryConfirmation;
    /**
     *
     * @type {AddressResidentialIndicator}
     * @memberof RateEstimateOptions
     */
    'address_residential_indicator'?: AddressResidentialIndicator;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date and time.
     * @type {string}
     * @memberof RateEstimateOptions
     */
    'ship_date'?: string;
}
/**
 * The insurance amount
 * @export
 * @interface RateInsuranceAmount
 */
export interface RateInsuranceAmount {
    /**
     * The currencies that are supported by ShipEngine are the ones that specified by ISO 4217: https://www.iso.org/iso-4217-currency-codes.html
     * @type {string}
     * @memberof RateInsuranceAmount
     */
    'currency': string;
    /**
     * The monetary amount, in the specified currency.
     * @type {number}
     * @memberof RateInsuranceAmount
     */
    'amount': number;
}
/**
 * Any other charges associated with this rate
 * @export
 * @interface RateOtherAmount
 */
export interface RateOtherAmount {
    /**
     * The currencies that are supported by ShipEngine are the ones that specified by ISO 4217: https://www.iso.org/iso-4217-currency-codes.html
     * @type {string}
     * @memberof RateOtherAmount
     */
    'currency': string;
    /**
     * The monetary amount, in the specified currency.
     * @type {number}
     * @memberof RateOtherAmount
     */
    'amount': number;
}
/**
 * A rate request body
 * @export
 * @interface RateRequestBody
 */
export interface RateRequestBody {
    /**
     * Array of carrier ids to get rates for
     * @type {Array<string>}
     * @memberof RateRequestBody
     */
    'carrier_ids': Array<string>;
    /**
     *
     * @type {Array<string>}
     * @memberof RateRequestBody
     */
    'package_types'?: Array<string>;
    /**
     *
     * @type {Array<string>}
     * @memberof RateRequestBody
     */
    'service_codes'?: Array<string>;
    /**
     * Calculate the duties and tariffs for cross border shipments.
     * @type {boolean}
     * @memberof RateRequestBody
     */
    'calculate_tax_amount'?: boolean;
    /**
     * The currencies that are supported by ShipEngine are the ones that specified by ISO 4217: https://www.iso.org/iso-4217-currency-codes.html
     * @type {string}
     * @memberof RateRequestBody
     */
    'preferred_currency'?: string;
    /**
     * Indicate if it\'s a return shipment
     * @type {boolean}
     * @memberof RateRequestBody
     */
    'is_return'?: boolean;
}
/**
 *
 * @export
 * @interface RateRequestByShipmentIds
 */
export interface RateRequestByShipmentIds {
    /**
     * The array of shipment IDs
     * @type {Array<string>}
     * @memberof RateRequestByShipmentIds
     */
    'shipment_ids': Array<string>;
}
/**
 *
 * @export
 * @interface RateRequestByShipments
 */
export interface RateRequestByShipments {
    /**
     * The array of shipments to get bulk rate estimates for
     * @type {Array<AddressValidatingShipment>}
     * @memberof RateRequestByShipments
     */
    'shipments': Array<AddressValidatingShipment>;
}
/**
 *
 * @export
 * @interface RateRequestOptions
 */
export interface RateRequestOptions {
    /**
     *
     * @type {RateRequestBody}
     * @memberof RateRequestOptions
     */
    'rate_options'?: RateRequestBody;
}
/**
 *
 * @export
 * @interface RateRequestRateOptions
 */
export interface RateRequestRateOptions {
    /**
     *
     * @type {RateRequestBody}
     * @memberof RateRequestRateOptions
     */
    'rate_options'?: RateRequestBody;
}
/**
 *
 * @export
 * @interface RateResponse
 */
export interface RateResponse {
    /**
     *
     * @type {RatesInformation}
     * @memberof RateResponse
     */
    'rate_response'?: RatesInformation;
}
/**
 * The possible rate response status values
 * @export
 * @enum {string}
 */
export declare const RateResponseStatus: {
    readonly Working: "working";
    readonly Completed: "completed";
    readonly Partial: "partial";
    readonly Error: "error";
};
export type RateResponseStatus = typeof RateResponseStatus[keyof typeof RateResponseStatus];
/**
 * The shipping amount
 * @export
 * @interface RateShippingAmount
 */
export interface RateShippingAmount {
    /**
     * The currencies that are supported by ShipEngine are the ones that specified by ISO 4217: https://www.iso.org/iso-4217-currency-codes.html
     * @type {string}
     * @memberof RateShippingAmount
     */
    'currency': string;
    /**
     * The monetary amount, in the specified currency.
     * @type {number}
     * @memberof RateShippingAmount
     */
    'amount': number;
}
/**
 * Tariff and additional taxes associated with an international shipment.
 * @export
 * @interface RateTaxAmount
 */
export interface RateTaxAmount {
    /**
     * The currencies that are supported by ShipEngine are the ones that specified by ISO 4217: https://www.iso.org/iso-4217-currency-codes.html
     * @type {string}
     * @memberof RateTaxAmount
     */
    'currency': string;
    /**
     * The monetary amount, in the specified currency.
     * @type {number}
     * @memberof RateTaxAmount
     */
    'amount': number;
}
/**
 * The possible rate type values
 * @export
 * @enum {string}
 */
export declare const RateType: {
    readonly Check: "check";
    readonly Shipment: "shipment";
};
export type RateType = typeof RateType[keyof typeof RateType];
/**
 * A rates information resource
 * @export
 * @interface RatesInformation
 */
export interface RatesInformation {
    /**
     * An array of shipment rates
     * @type {Array<RatesInformationRatesInner>}
     * @memberof RatesInformation
     */
    'rates'?: Array<RatesInformationRatesInner>;
    /**
     * An array of invalid shipment rates
     * @type {Array<RatesInformationInvalidRatesInner>}
     * @memberof RatesInformation
     */
    'invalid_rates'?: Array<RatesInformationInvalidRatesInner>;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof RatesInformation
     */
    'rate_request_id'?: string;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof RatesInformation
     */
    'shipment_id'?: string;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof RatesInformation
     */
    'created_at'?: string;
    /**
     *
     * @type {RateResponseStatus}
     * @memberof RatesInformation
     */
    'status'?: RateResponseStatus;
    /**
     *
     * @type {Array<ModelError>}
     * @memberof RatesInformation
     */
    'errors'?: Array<ModelError>;
}
/**
 * Invalid Shipment Rate
 * @export
 * @interface RatesInformationInvalidRatesInner
 */
export interface RatesInformationInvalidRatesInner {
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof RatesInformationInvalidRatesInner
     */
    'rate_id': string;
    /**
     *
     * @type {RateType}
     * @memberof RatesInformationInvalidRatesInner
     */
    'rate_type': RateType;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof RatesInformationInvalidRatesInner
     */
    'carrier_id': string;
    /**
     *
     * @type {RateShippingAmount}
     * @memberof RatesInformationInvalidRatesInner
     */
    'shipping_amount': RateShippingAmount;
    /**
     *
     * @type {RateInsuranceAmount}
     * @memberof RatesInformationInvalidRatesInner
     */
    'insurance_amount': RateInsuranceAmount;
    /**
     *
     * @type {RateConfirmationAmount}
     * @memberof RatesInformationInvalidRatesInner
     */
    'confirmation_amount': RateConfirmationAmount;
    /**
     *
     * @type {RateOtherAmount}
     * @memberof RatesInformationInvalidRatesInner
     */
    'other_amount': RateOtherAmount;
    /**
     *
     * @type {RateTaxAmount}
     * @memberof RatesInformationInvalidRatesInner
     */
    'tax_amount'?: RateTaxAmount;
    /**
     * Certain carriers base [their rates](https://blog.stamps.com/2017/09/08/usps-postal-zones/) off of custom zones that vary depending upon the ship_to and ship_from location
     * @type {number}
     * @memberof RatesInformationInvalidRatesInner
     */
    'zone': number | null;
    /**
     * package type that this rate was estimated for
     * @type {string}
     * @memberof RatesInformationInvalidRatesInner
     */
    'package_type': string | null;
    /**
     * The number of days estimated for delivery, this will show the _actual_ delivery time if for example, the package gets shipped on a Friday
     * @type {number}
     * @memberof RatesInformationInvalidRatesInner
     */
    'delivery_days'?: number;
    /**
     * Indicates if the rate is guaranteed.
     * @type {boolean}
     * @memberof RatesInformationInvalidRatesInner
     */
    'guaranteed_service': boolean;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date, but not a specific time.  The value _may_ contain a time component, but it will be set to `00:00:00` UTC by ShipEngine.
     * @type {string}
     * @memberof RatesInformationInvalidRatesInner
     */
    'estimated_delivery_date'?: string;
    /**
     * The carrier delivery days
     * @type {string}
     * @memberof RatesInformationInvalidRatesInner
     */
    'carrier_delivery_days'?: string;
    /**
     * ship date
     * @type {string}
     * @memberof RatesInformationInvalidRatesInner
     */
    'ship_date'?: string;
    /**
     * Indicates if the rates been negotiated
     * @type {boolean}
     * @memberof RatesInformationInvalidRatesInner
     */
    'negotiated_rate': boolean;
    /**
     * service type
     * @type {string}
     * @memberof RatesInformationInvalidRatesInner
     */
    'service_type': string;
    /**
     * service code for the rate
     * @type {string}
     * @memberof RatesInformationInvalidRatesInner
     */
    'service_code': string;
    /**
     * Indicates if rate is trackable
     * @type {boolean}
     * @memberof RatesInformationInvalidRatesInner
     */
    'trackable': boolean;
    /**
     * carrier code
     * @type {string}
     * @memberof RatesInformationInvalidRatesInner
     */
    'carrier_code': string;
    /**
     * carrier nickname
     * @type {string}
     * @memberof RatesInformationInvalidRatesInner
     */
    'carrier_nickname': string;
    /**
     * carrier friendly name
     * @type {string}
     * @memberof RatesInformationInvalidRatesInner
     */
    'carrier_friendly_name': string;
    /**
     *
     * @type {ValidationStatus}
     * @memberof RatesInformationInvalidRatesInner
     */
    'validation_status': ValidationStatus;
    /**
     * The warning messages
     * @type {Array<string>}
     * @memberof RatesInformationInvalidRatesInner
     */
    'warning_messages': Array<string>;
    /**
     * The error messages
     * @type {Array<string>}
     * @memberof RatesInformationInvalidRatesInner
     */
    'error_messages': Array<string>;
}
/**
 * Shipment Rates
 * @export
 * @interface RatesInformationRatesInner
 */
export interface RatesInformationRatesInner {
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof RatesInformationRatesInner
     */
    'rate_id': string;
    /**
     *
     * @type {RateType}
     * @memberof RatesInformationRatesInner
     */
    'rate_type': RateType;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof RatesInformationRatesInner
     */
    'carrier_id': string;
    /**
     *
     * @type {RateShippingAmount}
     * @memberof RatesInformationRatesInner
     */
    'shipping_amount': RateShippingAmount;
    /**
     *
     * @type {RateInsuranceAmount}
     * @memberof RatesInformationRatesInner
     */
    'insurance_amount': RateInsuranceAmount;
    /**
     *
     * @type {RateConfirmationAmount}
     * @memberof RatesInformationRatesInner
     */
    'confirmation_amount': RateConfirmationAmount;
    /**
     *
     * @type {RateOtherAmount}
     * @memberof RatesInformationRatesInner
     */
    'other_amount': RateOtherAmount;
    /**
     *
     * @type {RateTaxAmount}
     * @memberof RatesInformationRatesInner
     */
    'tax_amount'?: RateTaxAmount;
    /**
     * Certain carriers base [their rates](https://blog.stamps.com/2017/09/08/usps-postal-zones/) off of custom zones that vary depending upon the ship_to and ship_from location
     * @type {number}
     * @memberof RatesInformationRatesInner
     */
    'zone': number | null;
    /**
     * package type that this rate was estimated for
     * @type {string}
     * @memberof RatesInformationRatesInner
     */
    'package_type': string | null;
    /**
     * The number of days estimated for delivery, this will show the _actual_ delivery time if for example, the package gets shipped on a Friday
     * @type {number}
     * @memberof RatesInformationRatesInner
     */
    'delivery_days'?: number;
    /**
     * Indicates if the rate is guaranteed.
     * @type {boolean}
     * @memberof RatesInformationRatesInner
     */
    'guaranteed_service': boolean;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date, but not a specific time.  The value _may_ contain a time component, but it will be set to `00:00:00` UTC by ShipEngine.
     * @type {string}
     * @memberof RatesInformationRatesInner
     */
    'estimated_delivery_date'?: string;
    /**
     * The carrier delivery days
     * @type {string}
     * @memberof RatesInformationRatesInner
     */
    'carrier_delivery_days'?: string;
    /**
     * ship date
     * @type {string}
     * @memberof RatesInformationRatesInner
     */
    'ship_date'?: string;
    /**
     * Indicates if the rates been negotiated
     * @type {boolean}
     * @memberof RatesInformationRatesInner
     */
    'negotiated_rate': boolean;
    /**
     * service type
     * @type {string}
     * @memberof RatesInformationRatesInner
     */
    'service_type': string;
    /**
     * service code for the rate
     * @type {string}
     * @memberof RatesInformationRatesInner
     */
    'service_code': string;
    /**
     * Indicates if rate is trackable
     * @type {boolean}
     * @memberof RatesInformationRatesInner
     */
    'trackable': boolean;
    /**
     * carrier code
     * @type {string}
     * @memberof RatesInformationRatesInner
     */
    'carrier_code': string;
    /**
     * carrier nickname
     * @type {string}
     * @memberof RatesInformationRatesInner
     */
    'carrier_nickname': string;
    /**
     * carrier friendly name
     * @type {string}
     * @memberof RatesInformationRatesInner
     */
    'carrier_friendly_name': string;
    /**
     *
     * @type {ValidationStatus}
     * @memberof RatesInformationRatesInner
     */
    'validation_status': ValidationStatus;
    /**
     * The warning messages
     * @type {Array<string>}
     * @memberof RatesInformationRatesInner
     */
    'warning_messages': Array<string>;
    /**
     * The error messages
     * @type {Array<string>}
     * @memberof RatesInformationRatesInner
     */
    'error_messages': Array<string>;
}
/**
 * The possible normalized reasons a label void request may not have been approved
 * @export
 * @enum {string}
 */
export declare const ReasonCode: {
    readonly Unknown: "unknown";
    readonly Unspecified: "unspecified";
    readonly ValidationFailed: "validation_failed";
    readonly LabelNotFoundWithinVoidPeriod: "label_not_found_within_void_period";
    readonly LabelAlreadyUsed: "label_already_used";
    readonly LabelAlreadyVoided: "label_already_voided";
    readonly ContactCarrier: "contact_carrier";
};
export type ReasonCode = typeof ReasonCode[keyof typeof ReasonCode];
/**
 * An entity is a single piece of data that was recognized in unstructured text.  For example, a city, a postal code, package dimensions, insured value, etc.  Each entity includes the original text and the parsed value.
 * @export
 * @interface RecognizedEntity
 */
export interface RecognizedEntity {
    /**
     * The Entity type (e.g. \"weight\", \"person\", \"address_line1\", etc.)
     * @type {string}
     * @memberof RecognizedEntity
     */
    'type': string;
    /**
     * A confidence score between zero and one that indicates how certain the API is that it correctly recognized this entity
     * @type {number}
     * @memberof RecognizedEntity
     */
    'score': number;
    /**
     * The substring from the original text that was recognized as this entity
     * @type {string}
     * @memberof RecognizedEntity
     */
    'text': string;
    /**
     * The index of the first character of this entity within the original text
     * @type {number}
     * @memberof RecognizedEntity
     */
    'start_index': number;
    /**
     * The index of the last character of this entity within the original text
     * @type {number}
     * @memberof RecognizedEntity
     */
    'end_index': number;
    /**
     * The normalized value of the entity.  Most entity results have a `value` field, which is the normalized value of the entity.  For example, if the substring \"john doe\" was recognized as a \"person\" entity, then the value might be normalized to have proper capitalization (e.g. \"John Doe\").  Or if the substring \"ft worth\" was recognized as a \"city\" entity, then the value might be normalized to \"Fort Worth\".  Some entities have other information in addition to, or instead of a `value`.  For example, a \"dimensions\" entity will have separate fields for `length`, `width`, `height`, and `unit`.
     * @type {{ [key: string]: any; }}
     * @memberof RecognizedEntity
     */
    'result'?: {
        [key: string]: any;
    };
}
/**
 * The resource to return a redirect URL to.
 * @export
 * @enum {string}
 */
export declare const Redirect: {
    readonly ShipengineDashboard: "shipengine-dashboard";
};
export type Redirect = typeof Redirect[keyof typeof Redirect];
/**
 * A modify batch request body
 * @export
 * @interface RemoveFromBatchRequestBody
 */
export interface RemoveFromBatchRequestBody {
    /**
     * The Shipment Ids to be modified on the batch
     * @type {Array<string>}
     * @memberof RemoveFromBatchRequestBody
     */
    'shipment_ids'?: Array<string>;
    /**
     * Array of Rate IDs to be modifed on the batch
     * @type {Array<string>}
     * @memberof RemoveFromBatchRequestBody
     */
    'rate_ids'?: Array<string>;
}
/**
 * A response message that displays when additional info is needed for an address validation request.
 * @export
 * @interface ResponseMessage
 */
export interface ResponseMessage {
    /**
     *
     * @type {AddressValidationCode}
     * @memberof ResponseMessage
     */
    'code': AddressValidationCode;
    /**
     * Message explaining the address validation error
     * @type {string}
     * @memberof ResponseMessage
     */
    'message': string;
    /**
     *
     * @type {AddressValidationMessageType}
     * @memberof ResponseMessage
     */
    'type': AddressValidationMessageType;
    /**
     *
     * @type {AddressValidationDetailCode}
     * @memberof ResponseMessage
     */
    'detail_code': AddressValidationDetailCode | null;
}
/**
 * A schedule pickup request body
 * @export
 * @interface SchedulePickupRequestBody
 */
export interface SchedulePickupRequestBody {
    /**
     * Pickup Resource ID
     * @type {string}
     * @memberof SchedulePickupRequestBody
     */
    'pickup_id'?: string;
    /**
     * Label IDs that will be included in the pickup request
     * @type {Array<string>}
     * @memberof SchedulePickupRequestBody
     */
    'label_ids': Array<string>;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date and time.
     * @type {string}
     * @memberof SchedulePickupRequestBody
     */
    'created_at'?: string;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date and time.
     * @type {string}
     * @memberof SchedulePickupRequestBody
     */
    'cancelled_at'?: string;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof SchedulePickupRequestBody
     */
    'carrier_id'?: string;
    /**
     * The carrier confirmation number for the scheduled pickup.
     * @type {string}
     * @memberof SchedulePickupRequestBody
     */
    'confirmation_number'?: string | null;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof SchedulePickupRequestBody
     */
    'warehouse_id'?: string;
    /**
     *
     * @type {Address}
     * @memberof SchedulePickupRequestBody
     */
    'pickup_address'?: Address;
    /**
     *
     * @type {ContactDetails}
     * @memberof SchedulePickupRequestBody
     */
    'contact_details': ContactDetails;
    /**
     * Used by some carriers to give special instructions for a package pickup
     * @type {string}
     * @memberof SchedulePickupRequestBody
     */
    'pickup_notes'?: string;
    /**
     *
     * @type {PickupWindow}
     * @memberof SchedulePickupRequestBody
     */
    'pickup_window': PickupWindow;
    /**
     * An array of available pickup windows. Carriers can return multiple times that they will pickup packages.
     * @type {Array<PickupWindows>}
     * @memberof SchedulePickupRequestBody
     */
    'pickup_windows'?: Array<PickupWindows>;
}
/**
 *
 * @export
 * @interface SchedulePickupResponseBody
 */
export interface SchedulePickupResponseBody {
    /**
     * Pickup Resource ID
     * @type {string}
     * @memberof SchedulePickupResponseBody
     */
    'pickup_id'?: string;
    /**
     * Label IDs that will be included in the pickup request
     * @type {Array<string>}
     * @memberof SchedulePickupResponseBody
     */
    'label_ids'?: Array<string>;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date and time.
     * @type {string}
     * @memberof SchedulePickupResponseBody
     */
    'created_at'?: string;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date and time.
     * @type {string}
     * @memberof SchedulePickupResponseBody
     */
    'cancelled_at'?: string;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof SchedulePickupResponseBody
     */
    'carrier_id'?: string;
    /**
     * The carrier confirmation number for the scheduled pickup.
     * @type {string}
     * @memberof SchedulePickupResponseBody
     */
    'confirmation_number'?: string | null;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof SchedulePickupResponseBody
     */
    'warehouse_id'?: string;
    /**
     *
     * @type {Address}
     * @memberof SchedulePickupResponseBody
     */
    'pickup_address'?: Address;
    /**
     *
     * @type {ContactDetails}
     * @memberof SchedulePickupResponseBody
     */
    'contact_details'?: ContactDetails;
    /**
     * Used by some carriers to give special instructions for a package pickup
     * @type {string}
     * @memberof SchedulePickupResponseBody
     */
    'pickup_notes'?: string;
    /**
     *
     * @type {PickupWindow}
     * @memberof SchedulePickupResponseBody
     */
    'pickup_window'?: PickupWindow;
    /**
     * An array of available pickup windows. Carriers can return multiple times that they will pickup packages.
     * @type {Array<PickupWindows>}
     * @memberof SchedulePickupResponseBody
     */
    'pickup_windows'?: Array<PickupWindows>;
    /**
     * A UUID (a.k.a. GUID) that uniquely identifies a resource
     * @type {string}
     * @memberof SchedulePickupResponseBody
     */
    'request_id': string;
    /**
     * The errors associated with the failed API call
     * @type {Array<ModelError>}
     * @memberof SchedulePickupResponseBody
     */
    'errors': Array<ModelError>;
}
/**
 * A service offered by the carrier
 * @export
 * @interface Service
 */
export interface Service {
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof Service
     */
    'carrier_id'?: string;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof Service
     */
    'carrier_code'?: string;
    /**
     * service code
     * @type {string}
     * @memberof Service
     */
    'service_code'?: string;
    /**
     * User friendly service name
     * @type {string}
     * @memberof Service
     */
    'name'?: string;
    /**
     * Supports domestic shipping
     * @type {boolean}
     * @memberof Service
     */
    'domestic'?: boolean;
    /**
     * Supports international shipping.
     * @type {boolean}
     * @memberof Service
     */
    'international'?: boolean;
    /**
     * Carrier supports multiple packages per shipment
     * @type {boolean}
     * @memberof Service
     */
    'is_multi_package_supported'?: boolean;
}
/**
 * The information necessary to ship a package, such as the origin, the destination, the carrier service, and the package dimensions and weight.  > **Note:** Either `ship_from` or `warehouse_id` must be set.
 * @export
 * @interface Shipment
 */
export interface Shipment {
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof Shipment
     */
    'shipment_id': string;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof Shipment
     */
    'carrier_id': string;
    /**
     * A [carrier service](https://www.shipengine.com/docs/shipping/use-a-carrier-service/), such as `fedex_ground`, `usps_first_class_mail`, `flat_rate_envelope`, etc.
     * @type {string}
     * @memberof Shipment
     */
    'service_code': string;
    /**
     * ID that the Order Source assigned
     * @type {string}
     * @memberof Shipment
     */
    'external_order_id'?: string | null;
    /**
     * Describe the packages included in this shipment as related to potential metadata that was imported from external order sources
     * @type {Array<ShipmentItem>}
     * @memberof Shipment
     */
    'items'?: Array<ShipmentItem>;
    /**
     *
     * @type {Array<TaxIdentifier>}
     * @memberof Shipment
     */
    'tax_identifiers'?: Array<TaxIdentifier> | null;
    /**
     * A unique user-defined key to identify a shipment.  This can be used to retrieve the shipment.  > **Warning:** The `external_shipment_id` is limited to 50 characters. Any additional characters will be truncated.
     * @type {string}
     * @memberof Shipment
     */
    'external_shipment_id'?: string | null;
    /**
     * A non-unique user-defined number used to identify a shipment.  If undefined, this will match the external_shipment_id of the shipment.  > **Warning:** The `shipment_number` is limited to 50 characters. Any additional characters will be truncated.
     * @type {string}
     * @memberof Shipment
     */
    'shipment_number'?: string | null;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date, but not a specific time.  The value _may_ contain a time component, but it will be set to `00:00:00` UTC by ShipEngine.
     * @type {string}
     * @memberof Shipment
     */
    'ship_date': string;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date and time.
     * @type {string}
     * @memberof Shipment
     */
    'created_at': string;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date and time.
     * @type {string}
     * @memberof Shipment
     */
    'modified_at': string;
    /**
     *
     * @type {ShipmentStatus}
     * @memberof Shipment
     */
    'shipment_status': ShipmentStatus;
    /**
     *
     * @type {ShippingAddress}
     * @memberof Shipment
     */
    'ship_to': ShippingAddress;
    /**
     *
     * @type {ShippingAddress}
     * @memberof Shipment
     */
    'ship_from': ShippingAddress;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof Shipment
     */
    'warehouse_id': string | null;
    /**
     *
     * @type {ShippingAddress}
     * @memberof Shipment
     */
    'return_to': ShippingAddress;
    /**
     * An optional indicator if the shipment is intended to be a return. Defaults to false if not provided.
     * @type {boolean}
     * @memberof Shipment
     */
    'is_return'?: boolean | null;
    /**
     *
     * @type {DeliveryConfirmation}
     * @memberof Shipment
     */
    'confirmation': DeliveryConfirmation;
    /**
     *
     * @type {PartialShipmentCustoms}
     * @memberof Shipment
     */
    'customs': PartialShipmentCustoms | null;
    /**
     *
     * @type {AdvancedShipmentOptions}
     * @memberof Shipment
     */
    'advanced_options': AdvancedShipmentOptions;
    /**
     *
     * @type {InsuranceProvider}
     * @memberof Shipment
     */
    'insurance_provider': InsuranceProvider;
    /**
     * Arbitrary tags associated with this shipment.  Tags can be used to categorize shipments, and shipments can be queried by their tags.
     * @type {Array<Tag>}
     * @memberof Shipment
     */
    'tags': Array<Tag>;
    /**
     *
     * @type {OrderSourceName}
     * @memberof Shipment
     */
    'order_source_code'?: OrderSourceName;
    /**
     * The packages in the shipment.  > **Note:** Some carriers only allow one package per shipment.  If you attempt to create a multi-package shipment for a carrier that doesn\'t allow it, an error will be returned.
     * @type {Array<Package>}
     * @memberof Shipment
     */
    'packages': Array<Package>;
    /**
     *
     * @type {PartialShipmentTotalWeight}
     * @memberof Shipment
     */
    'total_weight': PartialShipmentTotalWeight;
}
/**
 *
 * @export
 * @interface ShipmentIdRequest
 */
export interface ShipmentIdRequest {
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof ShipmentIdRequest
     */
    'shipment_id'?: string;
}
/**
 * A shipment item
 * @export
 * @interface ShipmentItem
 */
export interface ShipmentItem {
    /**
     * item name
     * @type {string}
     * @memberof ShipmentItem
     */
    'name'?: string;
    /**
     * sales order id
     * @type {string}
     * @memberof ShipmentItem
     */
    'sales_order_id'?: string | null;
    /**
     * sales order item id
     * @type {string}
     * @memberof ShipmentItem
     */
    'sales_order_item_id'?: string | null;
    /**
     * The quantity of this item included in the shipment
     * @type {number}
     * @memberof ShipmentItem
     */
    'quantity'?: number;
    /**
     * Item Stock Keeping Unit
     * @type {string}
     * @memberof ShipmentItem
     */
    'sku'?: string | null;
    /**
     * external order id
     * @type {string}
     * @memberof ShipmentItem
     */
    'external_order_id'?: string | null;
    /**
     * external order item id
     * @type {string}
     * @memberof ShipmentItem
     */
    'external_order_item_id'?: string | null;
    /**
     * Amazon Standard Identification Number
     * @type {string}
     * @memberof ShipmentItem
     */
    'asin'?: string | null;
    /**
     *
     * @type {OrderSourceName}
     * @memberof ShipmentItem
     */
    'order_source_code'?: OrderSourceName;
}
/**
 *
 * @export
 * @interface ShipmentRequest
 */
export interface ShipmentRequest {
    /**
     *
     * @type {AddressValidatingShipment}
     * @memberof ShipmentRequest
     */
    'shipment'?: AddressValidatingShipment;
}
/**
 * The possible shipment status values
 * @export
 * @enum {string}
 */
export declare const ShipmentStatus: {
    readonly Pending: "pending";
    readonly Processing: "processing";
    readonly LabelPurchased: "label_purchased";
    readonly Cancelled: "cancelled";
};
export type ShipmentStatus = typeof ShipmentStatus[keyof typeof ShipmentStatus];
/**
 * The possible shipments sort by values
 * @export
 * @enum {string}
 */
export declare const ShipmentsSortBy: {
    readonly ModifiedAt: "modified_at";
    readonly CreatedAt: "created_at";
};
export type ShipmentsSortBy = typeof ShipmentsSortBy[keyof typeof ShipmentsSortBy];
/**
 *
 * @export
 * @interface ShippingAddress
 */
export interface ShippingAddress {
    /**
     * The name of a contact person at this address.  This field may be set instead of - or in addition to - the `company_name` field.
     * @type {string}
     * @memberof ShippingAddress
     */
    'name': string;
    /**
     * The phone number of a contact person at this address.  The format of this phone number varies depending on the country.
     * @type {string}
     * @memberof ShippingAddress
     */
    'phone': string;
    /**
     * Email for the address owner.
     * @type {string}
     * @memberof ShippingAddress
     */
    'email'?: string | null;
    /**
     * If this is a business address, then the company name should be specified here.
     * @type {string}
     * @memberof ShippingAddress
     */
    'company_name'?: string | null;
    /**
     * The first line of the street address.  For some addresses, this may be the only line.  Other addresses may require 2 or 3 lines.
     * @type {string}
     * @memberof ShippingAddress
     */
    'address_line1': string;
    /**
     * The second line of the street address.  For some addresses, this line may not be needed.
     * @type {string}
     * @memberof ShippingAddress
     */
    'address_line2'?: string | null;
    /**
     * The third line of the street address.  For some addresses, this line may not be needed.
     * @type {string}
     * @memberof ShippingAddress
     */
    'address_line3'?: string | null;
    /**
     * The name of the city or locality
     * @type {string}
     * @memberof ShippingAddress
     */
    'city_locality': string;
    /**
     * The state or province.  For some countries (including the U.S.) only abbreviations are allowed.  Other countries allow the full name or abbreviation.
     * @type {string}
     * @memberof ShippingAddress
     */
    'state_province': string;
    /**
     * postal code
     * @type {string}
     * @memberof ShippingAddress
     */
    'postal_code': string;
    /**
     * A two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1)
     * @type {string}
     * @memberof ShippingAddress
     */
    'country_code': string;
    /**
     *
     * @type {AddressResidentialIndicator}
     * @memberof ShippingAddress
     */
    'address_residential_indicator': AddressResidentialIndicator;
    /**
     * Additional text about how to handle the shipment at this address.
     * @type {string}
     * @memberof ShippingAddress
     */
    'instructions'?: string | null;
}
/**
 * The possible smart post hub values
 * @export
 * @enum {string}
 */
export declare const SmartPostHub: {
    readonly None: "none";
    readonly AllentownPa: "allentown_pa";
    readonly AtlantaGa: "atlanta_ga";
    readonly BaltimoreMd: "baltimore_md";
    readonly CharlotteNc: "charlotte_nc";
    readonly ChinoCa: "chino_ca";
    readonly DallasTx: "dallas_tx";
    readonly DenverCo: "denver_co";
    readonly DetroitMi: "detroit_mi";
    readonly EdisonNj: "edison_nj";
    readonly GroveCityOh: "grove_city_oh";
    readonly GroveportOh: "groveport_oh";
    readonly HoustonTx: "houston_tx";
    readonly IndianapolisIn: "indianapolis_in";
    readonly KansasCityKs: "kansas_city_ks";
    readonly LosAngelesCa: "los_angeles_ca";
    readonly MartinsburgWv: "martinsburg_wv";
    readonly MemphisTn: "memphis_tn";
    readonly MinneapolisMn: "minneapolis_mn";
    readonly NewBerlinWi: "new_berlin_wi";
    readonly NorthboroughMa: "northborough_ma";
    readonly OrlandoFl: "orlando_fl";
    readonly PhoneixAz: "phoneix_az";
    readonly PittsburghPa: "pittsburgh_pa";
    readonly RenoNv: "reno_nv";
    readonly SacramentoCa: "sacramento_ca";
    readonly SaltLakeCityUt: "salt_lake_city_ut";
    readonly SeattleWa: "seattle_wa";
    readonly StLouisMo: "st_louis_mo";
    readonly WindsorCt: "windsor_ct";
    readonly NewarkNy: "newark_ny";
    readonly SouthBrunswickNj: "south_brunswick_nj";
    readonly ScrantonPa: "scranton_pa";
    readonly WheelingIl: "wheeling_il";
};
export type SmartPostHub = typeof SmartPostHub[keyof typeof SmartPostHub];
/**
 * Controls the sort order of queries  |Value     |Description |:---------|:----------------------------------------------------- |`asc`     |Return results in ascending order |`desc`    |Return results in descending order
 * @export
 * @enum {string}
 */
export declare const SortDir: {
    readonly Asc: "asc";
    readonly Desc: "desc";
};
export type SortDir = typeof SortDir[keyof typeof SortDir];
/**
 * The tracking status codes  |Value       |Description |:---------  |:----------------------------------------------------- |`un` | Unknown |`ac` | Accepted |`it` | In Transit |`de` | Delivered |`ex` | Exception |`at` | Delivery Attempt |`ny` | Not Yet In System
 * @export
 * @enum {string}
 */
export declare const StatusCode: {
    readonly Un: "un";
    readonly Ac: "ac";
    readonly It: "it";
    readonly De: "de";
    readonly Ex: "ex";
    readonly At: "at";
    readonly Ny: "ny";
};
export type StatusCode = typeof StatusCode[keyof typeof StatusCode];
/**
 * Tags are arbitrary strings that you can use to categorize shipments.  For example, you may want to use tags to distinguish between domestic and international shipments, or between insured and uninsured shipments.  Or maybe you want to create a tag for each of your customers so you can easily retrieve every shipment for a customer.
 * @export
 * @interface Tag
 */
export interface Tag {
    /**
     * The tag name.
     * @type {string}
     * @memberof Tag
     */
    'name': string;
}
/**
 * A shipment add tag response body
 * @export
 * @interface TagShipmentResponseBody
 */
export interface TagShipmentResponseBody {
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof TagShipmentResponseBody
     */
    'shipment_id': string;
    /**
     *
     * @type {TagShipmentResponseBodyTag}
     * @memberof TagShipmentResponseBody
     */
    'tag': TagShipmentResponseBodyTag;
}
/**
 * The tag that is now associated with this shipment
 * @export
 * @interface TagShipmentResponseBodyTag
 */
export interface TagShipmentResponseBodyTag {
    /**
     * The tag name.
     * @type {string}
     * @memberof TagShipmentResponseBodyTag
     */
    'name': string;
}
/**
 * A tax identifier object
 * @export
 * @interface TaxIdentifier
 */
export interface TaxIdentifier {
    /**
     *
     * @type {TaxableEntityType}
     * @memberof TaxIdentifier
     */
    'taxable_entity_type': TaxableEntityType;
    /**
     *
     * @type {IdentifierType}
     * @memberof TaxIdentifier
     */
    'identifier_type': IdentifierType;
    /**
     * The authority that issued this tax. This must be a valid 2 character ISO 3166 Alpha 2 country code.
     * @type {string}
     * @memberof TaxIdentifier
     */
    'issuing_authority': string;
    /**
     * The value of the identifier
     * @type {string}
     * @memberof TaxIdentifier
     */
    'value': string;
}
/**
 * The taxable entity type for this tax item. Valid values include the following  |Value       |Description |:---------  |:----------------------------------------------------- |`shipper`   | The shipper is responsible for this tax. |`recipient` | The recipient of the shipment is responsible for this tax. |`ior`       | The importer of records is responsible for tax.
 * @export
 * @enum {string}
 */
export declare const TaxableEntityType: {
    readonly Shipper: "shipper";
    readonly Recipient: "recipient";
    readonly Ior: "ior";
};
export type TaxableEntityType = typeof TaxableEntityType[keyof typeof TaxableEntityType];
/**
 *
 * @export
 * @interface TokensGetEphemeralTokenResponseBodyYaml
 */
export interface TokensGetEphemeralTokenResponseBodyYaml {
    /**
     * The requested token that expires in 10 seconds.
     * @type {string}
     * @memberof TokensGetEphemeralTokenResponseBodyYaml
     */
    'token'?: string;
    /**
     * The redirect url formatted with the requested token.
     * @type {string}
     * @memberof TokensGetEphemeralTokenResponseBodyYaml
     */
    'redirect_url'?: string;
}
/**
 * A track event
 * @export
 * @interface TrackEvent
 */
export interface TrackEvent {
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date and time.
     * @type {string}
     * @memberof TrackEvent
     */
    'occurred_at': string;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date and time.
     * @type {string}
     * @memberof TrackEvent
     */
    'carrier_occurred_at'?: string;
    /**
     * Event description
     * @type {string}
     * @memberof TrackEvent
     */
    'description'?: string;
    /**
     * City locality
     * @type {string}
     * @memberof TrackEvent
     */
    'city_locality': string;
    /**
     * State province
     * @type {string}
     * @memberof TrackEvent
     */
    'state_province': string;
    /**
     * Postal code
     * @type {string}
     * @memberof TrackEvent
     */
    'postal_code': string;
    /**
     * A two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1)
     * @type {string}
     * @memberof TrackEvent
     */
    'country_code'?: string;
    /**
     * Company Name
     * @type {string}
     * @memberof TrackEvent
     */
    'company_name'?: string;
    /**
     * Signer information
     * @type {string}
     * @memberof TrackEvent
     */
    'signer'?: string;
    /**
     * Event Code
     * @type {string}
     * @memberof TrackEvent
     */
    'event_code'?: string;
    /**
     * Carrier detail code
     * @type {string}
     * @memberof TrackEvent
     */
    'carrier_detail_code': string;
    /**
     *
     * @type {StatusCode}
     * @memberof TrackEvent
     */
    'status_code': StatusCode;
    /**
     * Event Status Description
     * @type {string}
     * @memberof TrackEvent
     */
    'status_description': string;
    /**
     * Carrier status code
     * @type {string}
     * @memberof TrackEvent
     */
    'carrier_status_code': string;
    /**
     * carrier status description
     * @type {string}
     * @memberof TrackEvent
     */
    'carrier_status_description': string;
    /**
     * Latitude coordinate of tracking event.
     * @type {number}
     * @memberof TrackEvent
     */
    'latitude'?: number;
    /**
     * Longitude coordinate of tracking event.
     * @type {number}
     * @memberof TrackEvent
     */
    'longitude'?: number;
}
/**
 * A tracking information resource
 * @export
 * @interface TrackingInformation
 */
export interface TrackingInformation {
    /**
     * A tracking number for a package. The format depends on the carrier.
     * @type {string}
     * @memberof TrackingInformation
     */
    'tracking_number'?: string;
    /**
     * Carrier Tracking Url, if available
     * @type {string}
     * @memberof TrackingInformation
     */
    'tracking_url'?: string;
    /**
     *
     * @type {StatusCode}
     * @memberof TrackingInformation
     */
    'status_code'?: StatusCode;
    /**
     * A [shipping carrier](https://www.shipengine.com/docs/carriers/setup/), such as `fedex`, `dhl_express`, `stamps_com`, etc.
     * @type {string}
     * @memberof TrackingInformation
     */
    'carrier_code'?: string;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof TrackingInformation
     */
    'carrier_id'?: string;
    /**
     * Status description
     * @type {string}
     * @memberof TrackingInformation
     */
    'status_description'?: string;
    /**
     * Carrier status code
     * @type {string}
     * @memberof TrackingInformation
     */
    'carrier_status_code'?: string;
    /**
     * Carrier detail code
     * @type {string}
     * @memberof TrackingInformation
     */
    'carrier_detail_code'?: string;
    /**
     * carrier status description
     * @type {string}
     * @memberof TrackingInformation
     */
    'carrier_status_description'?: string;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date and time.
     * @type {string}
     * @memberof TrackingInformation
     */
    'ship_date'?: string;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date and time.
     * @type {string}
     * @memberof TrackingInformation
     */
    'estimated_delivery_date'?: string;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date and time.
     * @type {string}
     * @memberof TrackingInformation
     */
    'actual_delivery_date'?: string;
    /**
     * Exception description
     * @type {string}
     * @memberof TrackingInformation
     */
    'exception_description'?: string;
    /**
     * The events that have occured during the lifetime of this tracking number.
     * @type {Array<TrackEvent>}
     * @memberof TrackingInformation
     */
    'events'?: Array<TrackEvent>;
}
/**
 * The different statuses that can apply to a shipment.
 * @export
 * @enum {string}
 */
export declare const TrackingStatus: {
    readonly Unknown: "unknown";
    readonly InTransit: "in_transit";
    readonly Error: "error";
    readonly Delivered: "delivered";
};
export type TrackingStatus = typeof TrackingStatus[keyof typeof TrackingStatus];
/**
 * A ShipEngine account settings images request body
 * @export
 * @interface UpdateAccountSettingsImageRequestBody
 */
export interface UpdateAccountSettingsImageRequestBody {
    /**
     * Used to identify an image resource.
     * @type {string}
     * @memberof UpdateAccountSettingsImageRequestBody
     */
    'label_image_id'?: string;
    /**
     * A human readable name for the image.
     * @type {string}
     * @memberof UpdateAccountSettingsImageRequestBody
     */
    'name'?: string;
    /**
     * Indicates whether this image is set as default.
     * @type {boolean}
     * @memberof UpdateAccountSettingsImageRequestBody
     */
    'is_default': boolean;
    /**
     * The image type
     * @type {string}
     * @memberof UpdateAccountSettingsImageRequestBody
     */
    'image_content_type'?: UpdateAccountSettingsImageRequestBodyImageContentTypeEnum;
    /**
     * A base64 encoded string representation of the image.
     * @type {string}
     * @memberof UpdateAccountSettingsImageRequestBody
     */
    'image_data'?: string;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date and time.
     * @type {string}
     * @memberof UpdateAccountSettingsImageRequestBody
     */
    'created_at'?: string;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date and time.
     * @type {string}
     * @memberof UpdateAccountSettingsImageRequestBody
     */
    'modified_at'?: string;
}
export declare const UpdateAccountSettingsImageRequestBodyImageContentTypeEnum: {
    readonly Png: "image/png";
    readonly Jpeg: "image/jpeg";
};
export type UpdateAccountSettingsImageRequestBodyImageContentTypeEnum = typeof UpdateAccountSettingsImageRequestBodyImageContentTypeEnum[keyof typeof UpdateAccountSettingsImageRequestBodyImageContentTypeEnum];
/**
 * An amazon buy shipping account settings request body
 * @export
 * @interface UpdateAmazonBuyShippingRequestBody
 */
export interface UpdateAmazonBuyShippingRequestBody {
    /**
     * Email
     * @type {string}
     * @memberof UpdateAmazonBuyShippingRequestBody
     */
    'email'?: string;
}
/**
 * @type UpdateCarrierSettingsRequestBody
 * @export
 */
export type UpdateCarrierSettingsRequestBody = UpdateAmazonBuyShippingRequestBody | UpdateDhlExpressSettingsRequestBody | UpdateFedexSettingsRequestBody | UpdateNewgisticsSettingsRequestBody | UpdateUpsSettingsRequestBody;
/**
 * An update dhl express settings request body
 * @export
 * @interface UpdateDhlExpressSettingsRequestBody
 */
export interface UpdateDhlExpressSettingsRequestBody {
    /**
     * Account nickname
     * @type {string}
     * @memberof UpdateDhlExpressSettingsRequestBody
     */
    'nickname'?: string;
    /**
     * Indicates if the account number should be hidden on the archive documentation
     * @type {boolean}
     * @memberof UpdateDhlExpressSettingsRequestBody
     */
    'should_hide_account_number_on_archive_doc'?: boolean;
    /**
     * Indicates if this is primary account
     * @type {boolean}
     * @memberof UpdateDhlExpressSettingsRequestBody
     */
    'is_primary_account'?: boolean;
}
/**
 * An update Fedex settings request body
 * @export
 * @interface UpdateFedexSettingsRequestBody
 */
export interface UpdateFedexSettingsRequestBody {
    /**
     * Account nickname
     * @type {string}
     * @memberof UpdateFedexSettingsRequestBody
     */
    'nickname'?: string;
    /**
     *
     * @type {FedexPickupType}
     * @memberof UpdateFedexSettingsRequestBody
     */
    'pickup_type'?: FedexPickupType;
    /**
     *
     * @type {SmartPostHub}
     * @memberof UpdateFedexSettingsRequestBody
     */
    'smart_post_hub'?: SmartPostHub;
    /**
     *
     * @type {AncillaryServiceEndorsement}
     * @memberof UpdateFedexSettingsRequestBody
     */
    'smart_post_endorsement'?: AncillaryServiceEndorsement;
    /**
     *
     * @type {boolean}
     * @memberof UpdateFedexSettingsRequestBody
     */
    'is_primary_account'?: boolean;
    /**
     *
     * @type {string}
     * @memberof UpdateFedexSettingsRequestBody
     */
    'signature_image'?: string;
    /**
     *
     * @type {string}
     * @memberof UpdateFedexSettingsRequestBody
     */
    'letterhead_image'?: string;
}
/**
 * A newgistics account settings request body
 * @export
 * @interface UpdateNewgisticsSettingsRequestBody
 */
export interface UpdateNewgisticsSettingsRequestBody {
    /**
     *
     * @type {boolean}
     * @memberof UpdateNewgisticsSettingsRequestBody
     */
    'include_barcode_with_order_number'?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof UpdateNewgisticsSettingsRequestBody
     */
    'receive_email_on_manifest_processing'?: boolean;
}
/**
 * An update package type request body
 * @export
 * @interface UpdatePackageTypeRequestBody
 */
export interface UpdatePackageTypeRequestBody {
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof UpdatePackageTypeRequestBody
     */
    'package_id'?: string;
    /**
     * A [package type](https://www.shipengine.com/docs/reference/list-carrier-packages/), such as `thick_envelope`, `small_flat_rate_box`, `large_package`, etc.  Use the code `package` for custom or unknown package types.
     * @type {string}
     * @memberof UpdatePackageTypeRequestBody
     */
    'package_code': string;
    /**
     *
     * @type {string}
     * @memberof UpdatePackageTypeRequestBody
     */
    'name': string;
    /**
     *
     * @type {Dimensions}
     * @memberof UpdatePackageTypeRequestBody
     */
    'dimensions'?: Dimensions;
    /**
     * Provides a helpful description for the custom package.
     * @type {string}
     * @memberof UpdatePackageTypeRequestBody
     */
    'description'?: string | null;
}
/**
 *
 * @export
 * @interface UpdateShipmentFields
 */
export interface UpdateShipmentFields {
    /**
     *
     * @type {ValidateAddress}
     * @memberof UpdateShipmentFields
     */
    'validate_address'?: ValidateAddress;
}
/**
 * An update shipment request body
 * @export
 * @interface UpdateShipmentRequestBody
 */
export interface UpdateShipmentRequestBody {
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof UpdateShipmentRequestBody
     */
    'shipment_id'?: string;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof UpdateShipmentRequestBody
     */
    'carrier_id'?: string;
    /**
     * A [carrier service](https://www.shipengine.com/docs/shipping/use-a-carrier-service/), such as `fedex_ground`, `usps_first_class_mail`, `flat_rate_envelope`, etc.
     * @type {string}
     * @memberof UpdateShipmentRequestBody
     */
    'service_code'?: string;
    /**
     * ID that the Order Source assigned
     * @type {string}
     * @memberof UpdateShipmentRequestBody
     */
    'external_order_id'?: string | null;
    /**
     * Describe the packages included in this shipment as related to potential metadata that was imported from external order sources
     * @type {Array<ShipmentItem>}
     * @memberof UpdateShipmentRequestBody
     */
    'items'?: Array<ShipmentItem>;
    /**
     *
     * @type {Array<TaxIdentifier>}
     * @memberof UpdateShipmentRequestBody
     */
    'tax_identifiers'?: Array<TaxIdentifier> | null;
    /**
     * A unique user-defined key to identify a shipment.  This can be used to retrieve the shipment.  > **Warning:** The `external_shipment_id` is limited to 50 characters. Any additional characters will be truncated.
     * @type {string}
     * @memberof UpdateShipmentRequestBody
     */
    'external_shipment_id'?: string | null;
    /**
     * A non-unique user-defined number used to identify a shipment.  If undefined, this will match the external_shipment_id of the shipment.  > **Warning:** The `shipment_number` is limited to 50 characters. Any additional characters will be truncated.
     * @type {string}
     * @memberof UpdateShipmentRequestBody
     */
    'shipment_number'?: string | null;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date, but not a specific time.  The value _may_ contain a time component, but it will be set to `00:00:00` UTC by ShipEngine.
     * @type {string}
     * @memberof UpdateShipmentRequestBody
     */
    'ship_date'?: string;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date and time.
     * @type {string}
     * @memberof UpdateShipmentRequestBody
     */
    'created_at'?: string;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date and time.
     * @type {string}
     * @memberof UpdateShipmentRequestBody
     */
    'modified_at'?: string;
    /**
     *
     * @type {ShipmentStatus}
     * @memberof UpdateShipmentRequestBody
     */
    'shipment_status'?: ShipmentStatus;
    /**
     *
     * @type {ShippingAddress}
     * @memberof UpdateShipmentRequestBody
     */
    'ship_to': ShippingAddress;
    /**
     *
     * @type {ShippingAddress}
     * @memberof UpdateShipmentRequestBody
     */
    'ship_from': ShippingAddress;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof UpdateShipmentRequestBody
     */
    'warehouse_id'?: string | null;
    /**
     *
     * @type {ShippingAddress}
     * @memberof UpdateShipmentRequestBody
     */
    'return_to'?: ShippingAddress;
    /**
     * An optional indicator if the shipment is intended to be a return. Defaults to false if not provided.
     * @type {boolean}
     * @memberof UpdateShipmentRequestBody
     */
    'is_return'?: boolean | null;
    /**
     *
     * @type {DeliveryConfirmation}
     * @memberof UpdateShipmentRequestBody
     */
    'confirmation'?: DeliveryConfirmation;
    /**
     *
     * @type {PartialShipmentCustoms}
     * @memberof UpdateShipmentRequestBody
     */
    'customs'?: PartialShipmentCustoms | null;
    /**
     *
     * @type {AdvancedShipmentOptions}
     * @memberof UpdateShipmentRequestBody
     */
    'advanced_options'?: AdvancedShipmentOptions;
    /**
     *
     * @type {InsuranceProvider}
     * @memberof UpdateShipmentRequestBody
     */
    'insurance_provider'?: InsuranceProvider;
    /**
     * Arbitrary tags associated with this shipment.  Tags can be used to categorize shipments, and shipments can be queried by their tags.
     * @type {Array<Tag>}
     * @memberof UpdateShipmentRequestBody
     */
    'tags'?: Array<Tag>;
    /**
     *
     * @type {OrderSourceName}
     * @memberof UpdateShipmentRequestBody
     */
    'order_source_code'?: OrderSourceName;
    /**
     * The packages in the shipment.  > **Note:** Some carriers only allow one package per shipment.  If you attempt to create a multi-package shipment for a carrier that doesn\'t allow it, an error will be returned.
     * @type {Array<Package>}
     * @memberof UpdateShipmentRequestBody
     */
    'packages'?: Array<Package>;
    /**
     *
     * @type {PartialShipmentTotalWeight}
     * @memberof UpdateShipmentRequestBody
     */
    'total_weight'?: PartialShipmentTotalWeight;
    /**
     *
     * @type {ValidateAddress}
     * @memberof UpdateShipmentRequestBody
     */
    'validate_address'?: ValidateAddress;
}
/**
 * An update shipment response body
 * @export
 * @interface UpdateShipmentResponseBody
 */
export interface UpdateShipmentResponseBody {
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof UpdateShipmentResponseBody
     */
    'shipment_id': string;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof UpdateShipmentResponseBody
     */
    'carrier_id': string;
    /**
     * A [carrier service](https://www.shipengine.com/docs/shipping/use-a-carrier-service/), such as `fedex_ground`, `usps_first_class_mail`, `flat_rate_envelope`, etc.
     * @type {string}
     * @memberof UpdateShipmentResponseBody
     */
    'service_code': string;
    /**
     * ID that the Order Source assigned
     * @type {string}
     * @memberof UpdateShipmentResponseBody
     */
    'external_order_id'?: string | null;
    /**
     * Describe the packages included in this shipment as related to potential metadata that was imported from external order sources
     * @type {Array<ShipmentItem>}
     * @memberof UpdateShipmentResponseBody
     */
    'items'?: Array<ShipmentItem>;
    /**
     *
     * @type {Array<TaxIdentifier>}
     * @memberof UpdateShipmentResponseBody
     */
    'tax_identifiers'?: Array<TaxIdentifier> | null;
    /**
     * A unique user-defined key to identify a shipment.  This can be used to retrieve the shipment.  > **Warning:** The `external_shipment_id` is limited to 50 characters. Any additional characters will be truncated.
     * @type {string}
     * @memberof UpdateShipmentResponseBody
     */
    'external_shipment_id'?: string | null;
    /**
     * A non-unique user-defined number used to identify a shipment.  If undefined, this will match the external_shipment_id of the shipment.  > **Warning:** The `shipment_number` is limited to 50 characters. Any additional characters will be truncated.
     * @type {string}
     * @memberof UpdateShipmentResponseBody
     */
    'shipment_number'?: string | null;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date, but not a specific time.  The value _may_ contain a time component, but it will be set to `00:00:00` UTC by ShipEngine.
     * @type {string}
     * @memberof UpdateShipmentResponseBody
     */
    'ship_date': string;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date and time.
     * @type {string}
     * @memberof UpdateShipmentResponseBody
     */
    'created_at': string;
    /**
     * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date and time.
     * @type {string}
     * @memberof UpdateShipmentResponseBody
     */
    'modified_at'?: string;
    /**
     *
     * @type {ShipmentStatus}
     * @memberof UpdateShipmentResponseBody
     */
    'shipment_status': ShipmentStatus;
    /**
     *
     * @type {ShippingAddress}
     * @memberof UpdateShipmentResponseBody
     */
    'ship_to': ShippingAddress;
    /**
     *
     * @type {ShippingAddress}
     * @memberof UpdateShipmentResponseBody
     */
    'ship_from': ShippingAddress;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof UpdateShipmentResponseBody
     */
    'warehouse_id'?: string | null;
    /**
     *
     * @type {ShippingAddress}
     * @memberof UpdateShipmentResponseBody
     */
    'return_to': ShippingAddress;
    /**
     * An optional indicator if the shipment is intended to be a return. Defaults to false if not provided.
     * @type {boolean}
     * @memberof UpdateShipmentResponseBody
     */
    'is_return'?: boolean | null;
    /**
     *
     * @type {DeliveryConfirmation}
     * @memberof UpdateShipmentResponseBody
     */
    'confirmation': DeliveryConfirmation;
    /**
     *
     * @type {PartialShipmentCustoms}
     * @memberof UpdateShipmentResponseBody
     */
    'customs': PartialShipmentCustoms | null;
    /**
     *
     * @type {AdvancedShipmentOptions}
     * @memberof UpdateShipmentResponseBody
     */
    'advanced_options': AdvancedShipmentOptions;
    /**
     *
     * @type {InsuranceProvider}
     * @memberof UpdateShipmentResponseBody
     */
    'insurance_provider': InsuranceProvider;
    /**
     * Arbitrary tags associated with this shipment.  Tags can be used to categorize shipments, and shipments can be queried by their tags.
     * @type {Array<Tag>}
     * @memberof UpdateShipmentResponseBody
     */
    'tags': Array<Tag>;
    /**
     *
     * @type {OrderSourceName}
     * @memberof UpdateShipmentResponseBody
     */
    'order_source_code'?: OrderSourceName;
    /**
     * The packages in the shipment.  > **Note:** Some carriers only allow one package per shipment.  If you attempt to create a multi-package shipment for a carrier that doesn\'t allow it, an error will be returned.
     * @type {Array<Package>}
     * @memberof UpdateShipmentResponseBody
     */
    'packages': Array<Package>;
    /**
     *
     * @type {PartialShipmentTotalWeight}
     * @memberof UpdateShipmentResponseBody
     */
    'total_weight': PartialShipmentTotalWeight;
    /**
     * An array of errors that occurred while creating shipment.
     * @type {Array<string>}
     * @memberof UpdateShipmentResponseBody
     * @deprecated
     */
    'errors': Array<string>;
    /**
     *
     * @type {AddressValidationResult}
     * @memberof UpdateShipmentResponseBody
     */
    'address_validation': AddressValidationResult;
}
/**
 * An update UPS settings request body
 * @export
 * @interface UpdateUpsSettingsRequestBody
 */
export interface UpdateUpsSettingsRequestBody {
    /**
     * nickname
     * @type {string}
     * @memberof UpdateUpsSettingsRequestBody
     */
    'nickname'?: string;
    /**
     * Indicates if this is the primary UPS account
     * @type {boolean}
     * @memberof UpdateUpsSettingsRequestBody
     */
    'is_primary_account'?: boolean;
    /**
     *
     * @type {UpsPickupType}
     * @memberof UpdateUpsSettingsRequestBody
     */
    'pickup_type'?: UpsPickupType;
    /**
     * The use carbon neutral shipping program
     * @type {boolean}
     * @memberof UpdateUpsSettingsRequestBody
     */
    'use_carbon_neutral_shipping_program'?: boolean;
    /**
     * The use ground freight pricing
     * @type {boolean}
     * @memberof UpdateUpsSettingsRequestBody
     */
    'use_ground_freight_pricing'?: boolean;
    /**
     * The use consolidation services
     * @type {boolean}
     * @memberof UpdateUpsSettingsRequestBody
     */
    'use_consolidation_services'?: boolean;
    /**
     * The use order number on mail innovations labels
     * @type {boolean}
     * @memberof UpdateUpsSettingsRequestBody
     */
    'use_order_number_on_mail_innovations_labels'?: boolean;
    /**
     *
     * @type {AncillaryServiceEndorsement}
     * @memberof UpdateUpsSettingsRequestBody
     */
    'mail_innovations_endorsement'?: AncillaryServiceEndorsement;
    /**
     * mail innovations cost center
     * @type {string}
     * @memberof UpdateUpsSettingsRequestBody
     */
    'mail_innovations_cost_center'?: string;
    /**
     * The use negotiated rates
     * @type {boolean}
     * @memberof UpdateUpsSettingsRequestBody
     */
    'use_negotiated_rates'?: boolean;
    /**
     * account postal code
     * @type {string}
     * @memberof UpdateUpsSettingsRequestBody
     */
    'account_postal_code'?: string;
    /**
     *
     * @type {UpsInvoice}
     * @memberof UpdateUpsSettingsRequestBody
     */
    'invoice'?: UpsInvoice;
}
/**
 * An update warehouse request body
 * @export
 * @interface UpdateWarehouseRequestBody
 */
export interface UpdateWarehouseRequestBody {
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof UpdateWarehouseRequestBody
     */
    'warehouse_id'?: string;
    /**
     * Designates which single warehouse is the default on the account
     * @type {boolean}
     * @memberof UpdateWarehouseRequestBody
     */
    'is_default'?: boolean | null;
    /**
     * Name of the warehouse
     * @type {string}
     * @memberof UpdateWarehouseRequestBody
     */
    'name': string;
    /**
     * Timestamp that indicates when the warehouse was created
     * @type {string}
     * @memberof UpdateWarehouseRequestBody
     */
    'created_at'?: string;
    /**
     *
     * @type {Address}
     * @memberof UpdateWarehouseRequestBody
     */
    'origin_address': Address;
    /**
     *
     * @type {Address}
     * @memberof UpdateWarehouseRequestBody
     */
    'return_address'?: Address;
}
/**
 * An update warehouse settings request body
 * @export
 * @interface UpdateWarehouseSettingsRequestBody
 */
export interface UpdateWarehouseSettingsRequestBody {
    /**
     * The default property on the warehouse.
     * @type {boolean}
     * @memberof UpdateWarehouseSettingsRequestBody
     */
    'is_default'?: boolean | null;
}
/**
 * An update webhook request body
 * @export
 * @interface UpdateWebhookRequestBody
 */
export interface UpdateWebhookRequestBody {
    /**
     * A URL
     * @type {string}
     * @memberof UpdateWebhookRequestBody
     */
    'url'?: string;
}
/**
 * UPS account settings
 * @export
 * @interface UpsAccountSettings
 */
export interface UpsAccountSettings {
    /**
     * nickname
     * @type {string}
     * @memberof UpsAccountSettings
     */
    'nickname'?: string;
    /**
     * Indicates if this is the primary UPS account
     * @type {boolean}
     * @memberof UpsAccountSettings
     */
    'is_primary_account'?: boolean;
    /**
     *
     * @type {UpsPickupType}
     * @memberof UpsAccountSettings
     */
    'pickup_type'?: UpsPickupType;
    /**
     * The use carbon neutral shipping program
     * @type {boolean}
     * @memberof UpsAccountSettings
     */
    'use_carbon_neutral_shipping_program'?: boolean;
    /**
     * The use ground freight pricing
     * @type {boolean}
     * @memberof UpsAccountSettings
     */
    'use_ground_freight_pricing'?: boolean;
    /**
     * The use consolidation services
     * @type {boolean}
     * @memberof UpsAccountSettings
     */
    'use_consolidation_services'?: boolean;
    /**
     * The use order number on mail innovations labels
     * @type {boolean}
     * @memberof UpsAccountSettings
     */
    'use_order_number_on_mail_innovations_labels'?: boolean;
    /**
     *
     * @type {AncillaryServiceEndorsement}
     * @memberof UpsAccountSettings
     */
    'mail_innovations_endorsement'?: AncillaryServiceEndorsement;
    /**
     * mail innovations cost center
     * @type {string}
     * @memberof UpsAccountSettings
     */
    'mail_innovations_cost_center'?: string;
    /**
     * The use negotiated rates
     * @type {boolean}
     * @memberof UpsAccountSettings
     */
    'use_negotiated_rates'?: boolean;
    /**
     * account postal code
     * @type {string}
     * @memberof UpsAccountSettings
     */
    'account_postal_code'?: string;
    /**
     *
     * @type {UpsInvoice}
     * @memberof UpsAccountSettings
     */
    'invoice'?: UpsInvoice;
}
/**
 * UPS invoice
 * @export
 * @interface UpsInvoice
 */
export interface UpsInvoice {
    /**
     * invoice date
     * @type {string}
     * @memberof UpsInvoice
     */
    'invoice_date'?: string;
    /**
     * invoice number
     * @type {string}
     * @memberof UpsInvoice
     */
    'invoice_number'?: string;
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof UpsInvoice
     */
    'control_id'?: string;
    /**
     *
     * @type {number}
     * @memberof UpsInvoice
     */
    'invoice_amount'?: number;
    /**
     *
     * @type {string}
     * @memberof UpsInvoice
     */
    'invoice_currency_code'?: string;
}
/**
 * The possible ups pickup type values
 * @export
 * @enum {string}
 */
export declare const UpsPickupType: {
    readonly DailyPickup: "daily_pickup";
    readonly OccasionalPickup: "occasional_pickup";
    readonly CustomerCounter: "customer_counter";
};
export type UpsPickupType = typeof UpsPickupType[keyof typeof UpsPickupType];
/**
 * A UPS settings response body
 * @export
 * @interface UpsSettingsResponseBody
 */
export interface UpsSettingsResponseBody {
    /**
     * nickname
     * @type {string}
     * @memberof UpsSettingsResponseBody
     */
    'nickname'?: string;
    /**
     * Indicates if this is the primary UPS account
     * @type {boolean}
     * @memberof UpsSettingsResponseBody
     */
    'is_primary_account'?: boolean;
    /**
     *
     * @type {UpsPickupType}
     * @memberof UpsSettingsResponseBody
     */
    'pickup_type'?: UpsPickupType;
    /**
     * The use carbon neutral shipping program
     * @type {boolean}
     * @memberof UpsSettingsResponseBody
     */
    'use_carbon_neutral_shipping_program'?: boolean;
    /**
     * The use ground freight pricing
     * @type {boolean}
     * @memberof UpsSettingsResponseBody
     */
    'use_ground_freight_pricing'?: boolean;
    /**
     * The use consolidation services
     * @type {boolean}
     * @memberof UpsSettingsResponseBody
     */
    'use_consolidation_services'?: boolean;
    /**
     * The use order number on mail innovations labels
     * @type {boolean}
     * @memberof UpsSettingsResponseBody
     */
    'use_order_number_on_mail_innovations_labels'?: boolean;
    /**
     *
     * @type {AncillaryServiceEndorsement}
     * @memberof UpsSettingsResponseBody
     */
    'mail_innovations_endorsement'?: AncillaryServiceEndorsement;
    /**
     * mail innovations cost center
     * @type {string}
     * @memberof UpsSettingsResponseBody
     */
    'mail_innovations_cost_center'?: string;
    /**
     * The use negotiated rates
     * @type {boolean}
     * @memberof UpsSettingsResponseBody
     */
    'use_negotiated_rates'?: boolean;
    /**
     * account postal code
     * @type {string}
     * @memberof UpsSettingsResponseBody
     */
    'account_postal_code'?: string;
    /**
     *
     * @type {UpsInvoice}
     * @memberof UpsSettingsResponseBody
     */
    'invoice'?: UpsInvoice;
}
/**
 * The possible validate address values
 * @export
 * @enum {string}
 */
export declare const ValidateAddress: {
    readonly NoValidation: "no_validation";
    readonly ValidateOnly: "validate_only";
    readonly ValidateAndClean: "validate_and_clean";
};
export type ValidateAddress = typeof ValidateAddress[keyof typeof ValidateAddress];
/**
 * The address validation response body
 * @export
 * @interface ValidateAddressResponseBodyInner
 */
export interface ValidateAddressResponseBodyInner {
    /**
     *
     * @type {AddressValidationStatus}
     * @memberof ValidateAddressResponseBodyInner
     */
    'status': AddressValidationStatus;
    /**
     *
     * @type {Address}
     * @memberof ValidateAddressResponseBodyInner
     */
    'original_address': Address;
    /**
     *
     * @type {Address}
     * @memberof ValidateAddressResponseBodyInner
     */
    'matched_address': Address | null;
    /**
     * The list of messages that were generated during the address validation request.
     * @type {Array<ResponseMessage>}
     * @memberof ValidateAddressResponseBodyInner
     */
    'messages': Array<ResponseMessage>;
}
/**
 *
 * @export
 * @interface ValidateShipmentFields
 */
export interface ValidateShipmentFields {
    /**
     *
     * @type {ValidateAddress}
     * @memberof ValidateShipmentFields
     */
    'validate_address'?: ValidateAddress;
}
/**
 * The possible validation status values
 * @export
 * @enum {string}
 */
export declare const ValidationStatus: {
    readonly Valid: "valid";
    readonly Invalid: "invalid";
    readonly HasWarnings: "has_warnings";
    readonly Unknown: "unknown";
};
export type ValidationStatus = typeof ValidationStatus[keyof typeof ValidationStatus];
/**
 * A void label response body
 * @export
 * @interface VoidLabelResponseBody
 */
export interface VoidLabelResponseBody {
    /**
     * Indicates whether the attempt to void the label was successful
     * @type {boolean}
     * @memberof VoidLabelResponseBody
     */
    'approved': boolean;
    /**
     *
     * @type {string}
     * @memberof VoidLabelResponseBody
     */
    'message': string;
    /**
     *
     * @type {ReasonCode}
     * @memberof VoidLabelResponseBody
     */
    'reason_code'?: ReasonCode;
}
/**
 * A warehouse
 * @export
 * @interface Warehouse
 */
export interface Warehouse {
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof Warehouse
     */
    'warehouse_id'?: string;
    /**
     * Designates which single warehouse is the default on the account
     * @type {boolean}
     * @memberof Warehouse
     */
    'is_default'?: boolean | null;
    /**
     * Name of the warehouse
     * @type {string}
     * @memberof Warehouse
     */
    'name'?: string;
    /**
     * Timestamp that indicates when the warehouse was created
     * @type {string}
     * @memberof Warehouse
     */
    'created_at'?: string;
    /**
     *
     * @type {Address}
     * @memberof Warehouse
     */
    'origin_address'?: Address;
    /**
     *
     * @type {Address}
     * @memberof Warehouse
     */
    'return_address'?: Address;
}
/**
 * A webhook
 * @export
 * @interface Webhook
 */
export interface Webhook {
    /**
     * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
     * @type {string}
     * @memberof Webhook
     */
    'webhook_id'?: string;
    /**
     * A URL
     * @type {string}
     * @memberof Webhook
     */
    'url'?: string;
    /**
     *
     * @type {WebhookEvent}
     * @memberof Webhook
     */
    'event'?: WebhookEvent;
}
/**
 * The possible webook event values
 * @export
 * @enum {string}
 */
export declare const WebhookEvent: {
    readonly Batch: "batch";
    readonly CarrierConnected: "carrier_connected";
    readonly OrderSourceRefreshComplete: "order_source_refresh_complete";
    readonly Rate: "rate";
    readonly ReportComplete: "report_complete";
    readonly SalesOrdersImported: "sales_orders_imported";
    readonly Track: "track";
};
export type WebhookEvent = typeof WebhookEvent[keyof typeof WebhookEvent];
/**
 * The weight of a package
 * @export
 * @interface Weight
 */
export interface Weight {
    /**
     * The weight, in the specified unit
     * @type {number}
     * @memberof Weight
     */
    'value': number;
    /**
     *
     * @type {WeightUnit}
     * @memberof Weight
     */
    'unit': WeightUnit;
}
/**
 * The possible weight unit values
 * @export
 * @enum {string}
 */
export declare const WeightUnit: {
    readonly Pound: "pound";
    readonly Ounce: "ounce";
    readonly Gram: "gram";
    readonly Kilogram: "kilogram";
};
export type WeightUnit = typeof WeightUnit[keyof typeof WeightUnit];
/**
 * AccountApi - axios parameter creator
 * @export
 */
export declare const AccountApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Create an Account Image
     * @summary Create an Account Image
     * @param {CreateAccountSettingsImageRequestBody} createAccountSettingsImageRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createAccountImage: (createAccountSettingsImageRequestBody: CreateAccountSettingsImageRequestBody, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Delete Account Image By Id
     * @summary Delete Account Image By Id
     * @param {string} labelImageId Label Image Id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteAccountImageById: (labelImageId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Retrieve information for an account image.
     * @summary Get Account Image By ID
     * @param {string} labelImageId Label Image Id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getAccountSettingsImagesById: (labelImageId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * List all account images for the ShipEngine account
     * @summary List Account Images
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAccountImages: (options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * List all account settings for the ShipEngine account
     * @summary List Account Settings
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAccountSettings: (options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Update information for an account image.
     * @summary Update Account Image By ID
     * @param {string} labelImageId Label Image Id
     * @param {UpdateAccountSettingsImageRequestBody} updateAccountSettingsImageRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateAccountSettingsImagesById: (labelImageId: string, updateAccountSettingsImageRequestBody: UpdateAccountSettingsImageRequestBody, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * AccountApi - functional programming interface
 * @export
 */
export declare const AccountApiFp: (configuration?: Configuration) => {
    /**
     * Create an Account Image
     * @summary Create an Account Image
     * @param {CreateAccountSettingsImageRequestBody} createAccountSettingsImageRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createAccountImage(createAccountSettingsImageRequestBody: CreateAccountSettingsImageRequestBody, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetAccountSettingsImagesResponseBody>>;
    /**
     * Delete Account Image By Id
     * @summary Delete Account Image By Id
     * @param {string} labelImageId Label Image Id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteAccountImageById(labelImageId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>>;
    /**
     * Retrieve information for an account image.
     * @summary Get Account Image By ID
     * @param {string} labelImageId Label Image Id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getAccountSettingsImagesById(labelImageId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetAccountSettingsImagesResponseBody>>;
    /**
     * List all account images for the ShipEngine account
     * @summary List Account Images
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAccountImages(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ListAccountSettingsImagesResponseBody>>;
    /**
     * List all account settings for the ShipEngine account
     * @summary List Account Settings
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAccountSettings(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetAccountSettingsResponseBody>>;
    /**
     * Update information for an account image.
     * @summary Update Account Image By ID
     * @param {string} labelImageId Label Image Id
     * @param {UpdateAccountSettingsImageRequestBody} updateAccountSettingsImageRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateAccountSettingsImagesById(labelImageId: string, updateAccountSettingsImageRequestBody: UpdateAccountSettingsImageRequestBody, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>>;
};
/**
 * AccountApi - factory interface
 * @export
 */
export declare const AccountApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Create an Account Image
     * @summary Create an Account Image
     * @param {CreateAccountSettingsImageRequestBody} createAccountSettingsImageRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createAccountImage(createAccountSettingsImageRequestBody: CreateAccountSettingsImageRequestBody, options?: any): AxiosPromise<GetAccountSettingsImagesResponseBody>;
    /**
     * Delete Account Image By Id
     * @summary Delete Account Image By Id
     * @param {string} labelImageId Label Image Id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteAccountImageById(labelImageId: string, options?: any): AxiosPromise<string>;
    /**
     * Retrieve information for an account image.
     * @summary Get Account Image By ID
     * @param {string} labelImageId Label Image Id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getAccountSettingsImagesById(labelImageId: string, options?: any): AxiosPromise<GetAccountSettingsImagesResponseBody>;
    /**
     * List all account images for the ShipEngine account
     * @summary List Account Images
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAccountImages(options?: any): AxiosPromise<ListAccountSettingsImagesResponseBody>;
    /**
     * List all account settings for the ShipEngine account
     * @summary List Account Settings
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAccountSettings(options?: any): AxiosPromise<GetAccountSettingsResponseBody>;
    /**
     * Update information for an account image.
     * @summary Update Account Image By ID
     * @param {string} labelImageId Label Image Id
     * @param {UpdateAccountSettingsImageRequestBody} updateAccountSettingsImageRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateAccountSettingsImagesById(labelImageId: string, updateAccountSettingsImageRequestBody: UpdateAccountSettingsImageRequestBody, options?: any): AxiosPromise<string>;
};
/**
 * AccountApi - object-oriented interface
 * @export
 * @class AccountApi
 * @extends {BaseAPI}
 */
export declare class AccountApi extends BaseAPI {
    /**
     * Create an Account Image
     * @summary Create an Account Image
     * @param {CreateAccountSettingsImageRequestBody} createAccountSettingsImageRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AccountApi
     */
    createAccountImage(createAccountSettingsImageRequestBody: CreateAccountSettingsImageRequestBody, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetAccountSettingsImagesResponseBody, any>>;
    /**
     * Delete Account Image By Id
     * @summary Delete Account Image By Id
     * @param {string} labelImageId Label Image Id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AccountApi
     */
    deleteAccountImageById(labelImageId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<string, any>>;
    /**
     * Retrieve information for an account image.
     * @summary Get Account Image By ID
     * @param {string} labelImageId Label Image Id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AccountApi
     */
    getAccountSettingsImagesById(labelImageId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetAccountSettingsImagesResponseBody, any>>;
    /**
     * List all account images for the ShipEngine account
     * @summary List Account Images
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AccountApi
     */
    listAccountImages(options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<ListAccountSettingsImagesResponseBody, any>>;
    /**
     * List all account settings for the ShipEngine account
     * @summary List Account Settings
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AccountApi
     */
    listAccountSettings(options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetAccountSettingsResponseBody, any>>;
    /**
     * Update information for an account image.
     * @summary Update Account Image By ID
     * @param {string} labelImageId Label Image Id
     * @param {UpdateAccountSettingsImageRequestBody} updateAccountSettingsImageRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AccountApi
     */
    updateAccountSettingsImagesById(labelImageId: string, updateAccountSettingsImageRequestBody: UpdateAccountSettingsImageRequestBody, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<string, any>>;
}
/**
 * AddressesApi - axios parameter creator
 * @export
 */
export declare const AddressesApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * The address-recognition API makes it easy for you to extract address data from unstructured text, including the recipient name, line 1, line 2, city, postal code, and more.  Data often enters your system as unstructured text (for example: emails, SMS messages, support tickets, or other documents). ShipEngine\'s address-recognition API helps you extract meaningful, structured data from this unstructured text. The parsed address data is returned in the same structure that\'s used for other ShipEngine APIs, such as address validation, rate quotes, and shipping labels.  > **Note:** Address recognition is currently supported for the United States, Canada, Australia, New Zealand, the United Kingdom, and Ireland.
     * @summary Parse an address
     * @param {ParseAddressRequestBody} parseAddressRequestBody The only required field is &#x60;text&#x60;, which is the text to be parsed. You can optionally also provide an &#x60;address&#x60; containing already-known values. For example, you may already know the recipient\&#39;s name, city, and country, and only want to parse the street address into separate lines.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    parseAddress: (parseAddressRequestBody: ParseAddressRequestBody, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Address validation ensures accurate addresses and can lead to reduced shipping costs by preventing address correction surcharges. ShipEngine cross references multiple databases to validate addresses and identify potential deliverability issues.
     * @summary Validate An Address
     * @param {Array<AddressToValidate>} addressToValidate
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    validateAddress: (addressToValidate: Array<AddressToValidate>, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * AddressesApi - functional programming interface
 * @export
 */
export declare const AddressesApiFp: (configuration?: Configuration) => {
    /**
     * The address-recognition API makes it easy for you to extract address data from unstructured text, including the recipient name, line 1, line 2, city, postal code, and more.  Data often enters your system as unstructured text (for example: emails, SMS messages, support tickets, or other documents). ShipEngine\'s address-recognition API helps you extract meaningful, structured data from this unstructured text. The parsed address data is returned in the same structure that\'s used for other ShipEngine APIs, such as address validation, rate quotes, and shipping labels.  > **Note:** Address recognition is currently supported for the United States, Canada, Australia, New Zealand, the United Kingdom, and Ireland.
     * @summary Parse an address
     * @param {ParseAddressRequestBody} parseAddressRequestBody The only required field is &#x60;text&#x60;, which is the text to be parsed. You can optionally also provide an &#x60;address&#x60; containing already-known values. For example, you may already know the recipient\&#39;s name, city, and country, and only want to parse the street address into separate lines.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    parseAddress(parseAddressRequestBody: ParseAddressRequestBody, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ParseAddressResponseBody>>;
    /**
     * Address validation ensures accurate addresses and can lead to reduced shipping costs by preventing address correction surcharges. ShipEngine cross references multiple databases to validate addresses and identify potential deliverability issues.
     * @summary Validate An Address
     * @param {Array<AddressToValidate>} addressToValidate
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    validateAddress(addressToValidate: Array<AddressToValidate>, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<ValidateAddressResponseBodyInner>>>;
};
/**
 * AddressesApi - factory interface
 * @export
 */
export declare const AddressesApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * The address-recognition API makes it easy for you to extract address data from unstructured text, including the recipient name, line 1, line 2, city, postal code, and more.  Data often enters your system as unstructured text (for example: emails, SMS messages, support tickets, or other documents). ShipEngine\'s address-recognition API helps you extract meaningful, structured data from this unstructured text. The parsed address data is returned in the same structure that\'s used for other ShipEngine APIs, such as address validation, rate quotes, and shipping labels.  > **Note:** Address recognition is currently supported for the United States, Canada, Australia, New Zealand, the United Kingdom, and Ireland.
     * @summary Parse an address
     * @param {ParseAddressRequestBody} parseAddressRequestBody The only required field is &#x60;text&#x60;, which is the text to be parsed. You can optionally also provide an &#x60;address&#x60; containing already-known values. For example, you may already know the recipient\&#39;s name, city, and country, and only want to parse the street address into separate lines.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    parseAddress(parseAddressRequestBody: ParseAddressRequestBody, options?: any): AxiosPromise<ParseAddressResponseBody>;
    /**
     * Address validation ensures accurate addresses and can lead to reduced shipping costs by preventing address correction surcharges. ShipEngine cross references multiple databases to validate addresses and identify potential deliverability issues.
     * @summary Validate An Address
     * @param {Array<AddressToValidate>} addressToValidate
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    validateAddress(addressToValidate: Array<AddressToValidate>, options?: any): AxiosPromise<Array<ValidateAddressResponseBodyInner>>;
};
/**
 * AddressesApi - object-oriented interface
 * @export
 * @class AddressesApi
 * @extends {BaseAPI}
 */
export declare class AddressesApi extends BaseAPI {
    /**
     * The address-recognition API makes it easy for you to extract address data from unstructured text, including the recipient name, line 1, line 2, city, postal code, and more.  Data often enters your system as unstructured text (for example: emails, SMS messages, support tickets, or other documents). ShipEngine\'s address-recognition API helps you extract meaningful, structured data from this unstructured text. The parsed address data is returned in the same structure that\'s used for other ShipEngine APIs, such as address validation, rate quotes, and shipping labels.  > **Note:** Address recognition is currently supported for the United States, Canada, Australia, New Zealand, the United Kingdom, and Ireland.
     * @summary Parse an address
     * @param {ParseAddressRequestBody} parseAddressRequestBody The only required field is &#x60;text&#x60;, which is the text to be parsed. You can optionally also provide an &#x60;address&#x60; containing already-known values. For example, you may already know the recipient\&#39;s name, city, and country, and only want to parse the street address into separate lines.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AddressesApi
     */
    parseAddress(parseAddressRequestBody: ParseAddressRequestBody, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<ParseAddressResponseBody, any>>;
    /**
     * Address validation ensures accurate addresses and can lead to reduced shipping costs by preventing address correction surcharges. ShipEngine cross references multiple databases to validate addresses and identify potential deliverability issues.
     * @summary Validate An Address
     * @param {Array<AddressToValidate>} addressToValidate
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AddressesApi
     */
    validateAddress(addressToValidate: Array<AddressToValidate>, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<ValidateAddressResponseBodyInner[], any>>;
}
/**
 * BatchesApi - axios parameter creator
 * @export
 */
export declare const BatchesApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Add a Shipment or Rate to a Batch
     * @summary Add to a Batch
     * @param {string} batchId Batch ID
     * @param {AddToBatchRequestBody} addToBatchRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addToBatch: (batchId: string, addToBatchRequestBody: AddToBatchRequestBody, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Create a Batch
     * @summary Create A Batch
     * @param {CreateBatchRequestBody} createBatchRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createBatch: (createBatchRequestBody: CreateBatchRequestBody, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Delete Batch By Id
     * @summary Delete Batch By Id
     * @param {string} batchId Batch ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteBatch: (batchId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get Batch By External ID
     * @summary Get Batch By External ID
     * @param {string} externalBatchId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getBatchByExternalId: (externalBatchId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get Batch By ID
     * @summary Get Batch By ID
     * @param {string} batchId Batch ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getBatchById: (batchId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Error handling in batches are handled differently than in a single synchronous request. You must retrieve the status of your batch by [getting a batch](https://www.shipengine.com/docs/reference/get-batch-by-id/) and getting an overview of the statuses or you can list errors directly here below to get detailed information about the errors.
     * @summary Get Batch Errors
     * @param {string} batchId Batch ID
     * @param {number} [page] Return a specific page of results. Defaults to the first page. If set to a number that\&#39;s greater than the number of pages of results, an empty page is returned.
     * @param {number} [pagesize]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listBatchErrors: (batchId: string, page?: number, pagesize?: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * List Batches associated with your Shipengine account
     * @summary List Batches
     * @param {BatchStatus} [status]
     * @param {number} [page] Return a specific page of results. Defaults to the first page. If set to a number that\&#39;s greater than the number of pages of results, an empty page is returned.
     * @param {number} [pageSize] The number of results to return per response.
     * @param {SortDir} [sortDir] Controls the sort order of the query.
     * @param {string} [batchNumber] Batch Number
     * @param {BatchesSortBy} [sortBy]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listBatches: (status?: BatchStatus, page?: number, pageSize?: number, sortDir?: SortDir, batchNumber?: string, sortBy?: BatchesSortBy, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Process Batch ID Labels
     * @summary Process Batch ID Labels
     * @param {string} batchId Batch ID
     * @param {ProcessBatchRequestBody} processBatchRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    processBatch: (batchId: string, processBatchRequestBody: ProcessBatchRequestBody, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Remove a shipment or rate from a batch
     * @summary Remove From Batch
     * @param {string} batchId Batch ID
     * @param {RemoveFromBatchRequestBody} removeFromBatchRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    removeFromBatch: (batchId: string, removeFromBatchRequestBody: RemoveFromBatchRequestBody, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Update Batch By Id
     * @summary Update Batch By Id
     * @param {string} batchId Batch ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateBatch: (batchId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * BatchesApi - functional programming interface
 * @export
 */
export declare const BatchesApiFp: (configuration?: Configuration) => {
    /**
     * Add a Shipment or Rate to a Batch
     * @summary Add to a Batch
     * @param {string} batchId Batch ID
     * @param {AddToBatchRequestBody} addToBatchRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addToBatch(batchId: string, addToBatchRequestBody: AddToBatchRequestBody, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>>;
    /**
     * Create a Batch
     * @summary Create A Batch
     * @param {CreateBatchRequestBody} createBatchRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createBatch(createBatchRequestBody: CreateBatchRequestBody, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CreateBatchResponseBody>>;
    /**
     * Delete Batch By Id
     * @summary Delete Batch By Id
     * @param {string} batchId Batch ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteBatch(batchId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>>;
    /**
     * Get Batch By External ID
     * @summary Get Batch By External ID
     * @param {string} externalBatchId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getBatchByExternalId(externalBatchId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetBatchByExternalIdResponseBody>>;
    /**
     * Get Batch By ID
     * @summary Get Batch By ID
     * @param {string} batchId Batch ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getBatchById(batchId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetBatchByIdResponseBody>>;
    /**
     * Error handling in batches are handled differently than in a single synchronous request. You must retrieve the status of your batch by [getting a batch](https://www.shipengine.com/docs/reference/get-batch-by-id/) and getting an overview of the statuses or you can list errors directly here below to get detailed information about the errors.
     * @summary Get Batch Errors
     * @param {string} batchId Batch ID
     * @param {number} [page] Return a specific page of results. Defaults to the first page. If set to a number that\&#39;s greater than the number of pages of results, an empty page is returned.
     * @param {number} [pagesize]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listBatchErrors(batchId: string, page?: number, pagesize?: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ListBatchErrorsResponseBody>>;
    /**
     * List Batches associated with your Shipengine account
     * @summary List Batches
     * @param {BatchStatus} [status]
     * @param {number} [page] Return a specific page of results. Defaults to the first page. If set to a number that\&#39;s greater than the number of pages of results, an empty page is returned.
     * @param {number} [pageSize] The number of results to return per response.
     * @param {SortDir} [sortDir] Controls the sort order of the query.
     * @param {string} [batchNumber] Batch Number
     * @param {BatchesSortBy} [sortBy]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listBatches(status?: BatchStatus, page?: number, pageSize?: number, sortDir?: SortDir, batchNumber?: string, sortBy?: BatchesSortBy, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ListBatchesResponseBody>>;
    /**
     * Process Batch ID Labels
     * @summary Process Batch ID Labels
     * @param {string} batchId Batch ID
     * @param {ProcessBatchRequestBody} processBatchRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    processBatch(batchId: string, processBatchRequestBody: ProcessBatchRequestBody, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>>;
    /**
     * Remove a shipment or rate from a batch
     * @summary Remove From Batch
     * @param {string} batchId Batch ID
     * @param {RemoveFromBatchRequestBody} removeFromBatchRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    removeFromBatch(batchId: string, removeFromBatchRequestBody: RemoveFromBatchRequestBody, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>>;
    /**
     * Update Batch By Id
     * @summary Update Batch By Id
     * @param {string} batchId Batch ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateBatch(batchId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>>;
};
/**
 * BatchesApi - factory interface
 * @export
 */
export declare const BatchesApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Add a Shipment or Rate to a Batch
     * @summary Add to a Batch
     * @param {string} batchId Batch ID
     * @param {AddToBatchRequestBody} addToBatchRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addToBatch(batchId: string, addToBatchRequestBody: AddToBatchRequestBody, options?: any): AxiosPromise<string>;
    /**
     * Create a Batch
     * @summary Create A Batch
     * @param {CreateBatchRequestBody} createBatchRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createBatch(createBatchRequestBody: CreateBatchRequestBody, options?: any): AxiosPromise<CreateBatchResponseBody>;
    /**
     * Delete Batch By Id
     * @summary Delete Batch By Id
     * @param {string} batchId Batch ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteBatch(batchId: string, options?: any): AxiosPromise<string>;
    /**
     * Get Batch By External ID
     * @summary Get Batch By External ID
     * @param {string} externalBatchId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getBatchByExternalId(externalBatchId: string, options?: any): AxiosPromise<GetBatchByExternalIdResponseBody>;
    /**
     * Get Batch By ID
     * @summary Get Batch By ID
     * @param {string} batchId Batch ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getBatchById(batchId: string, options?: any): AxiosPromise<GetBatchByIdResponseBody>;
    /**
     * Error handling in batches are handled differently than in a single synchronous request. You must retrieve the status of your batch by [getting a batch](https://www.shipengine.com/docs/reference/get-batch-by-id/) and getting an overview of the statuses or you can list errors directly here below to get detailed information about the errors.
     * @summary Get Batch Errors
     * @param {string} batchId Batch ID
     * @param {number} [page] Return a specific page of results. Defaults to the first page. If set to a number that\&#39;s greater than the number of pages of results, an empty page is returned.
     * @param {number} [pagesize]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listBatchErrors(batchId: string, page?: number, pagesize?: number, options?: any): AxiosPromise<ListBatchErrorsResponseBody>;
    /**
     * List Batches associated with your Shipengine account
     * @summary List Batches
     * @param {BatchStatus} [status]
     * @param {number} [page] Return a specific page of results. Defaults to the first page. If set to a number that\&#39;s greater than the number of pages of results, an empty page is returned.
     * @param {number} [pageSize] The number of results to return per response.
     * @param {SortDir} [sortDir] Controls the sort order of the query.
     * @param {string} [batchNumber] Batch Number
     * @param {BatchesSortBy} [sortBy]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listBatches(status?: BatchStatus, page?: number, pageSize?: number, sortDir?: SortDir, batchNumber?: string, sortBy?: BatchesSortBy, options?: any): AxiosPromise<ListBatchesResponseBody>;
    /**
     * Process Batch ID Labels
     * @summary Process Batch ID Labels
     * @param {string} batchId Batch ID
     * @param {ProcessBatchRequestBody} processBatchRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    processBatch(batchId: string, processBatchRequestBody: ProcessBatchRequestBody, options?: any): AxiosPromise<string>;
    /**
     * Remove a shipment or rate from a batch
     * @summary Remove From Batch
     * @param {string} batchId Batch ID
     * @param {RemoveFromBatchRequestBody} removeFromBatchRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    removeFromBatch(batchId: string, removeFromBatchRequestBody: RemoveFromBatchRequestBody, options?: any): AxiosPromise<string>;
    /**
     * Update Batch By Id
     * @summary Update Batch By Id
     * @param {string} batchId Batch ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateBatch(batchId: string, options?: any): AxiosPromise<string>;
};
/**
 * BatchesApi - object-oriented interface
 * @export
 * @class BatchesApi
 * @extends {BaseAPI}
 */
export declare class BatchesApi extends BaseAPI {
    /**
     * Add a Shipment or Rate to a Batch
     * @summary Add to a Batch
     * @param {string} batchId Batch ID
     * @param {AddToBatchRequestBody} addToBatchRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BatchesApi
     */
    addToBatch(batchId: string, addToBatchRequestBody: AddToBatchRequestBody, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<string, any>>;
    /**
     * Create a Batch
     * @summary Create A Batch
     * @param {CreateBatchRequestBody} createBatchRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BatchesApi
     */
    createBatch(createBatchRequestBody: CreateBatchRequestBody, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<CreateBatchResponseBody, any>>;
    /**
     * Delete Batch By Id
     * @summary Delete Batch By Id
     * @param {string} batchId Batch ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BatchesApi
     */
    deleteBatch(batchId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<string, any>>;
    /**
     * Get Batch By External ID
     * @summary Get Batch By External ID
     * @param {string} externalBatchId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BatchesApi
     */
    getBatchByExternalId(externalBatchId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetBatchByExternalIdResponseBody, any>>;
    /**
     * Get Batch By ID
     * @summary Get Batch By ID
     * @param {string} batchId Batch ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BatchesApi
     */
    getBatchById(batchId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetBatchByIdResponseBody, any>>;
    /**
     * Error handling in batches are handled differently than in a single synchronous request. You must retrieve the status of your batch by [getting a batch](https://www.shipengine.com/docs/reference/get-batch-by-id/) and getting an overview of the statuses or you can list errors directly here below to get detailed information about the errors.
     * @summary Get Batch Errors
     * @param {string} batchId Batch ID
     * @param {number} [page] Return a specific page of results. Defaults to the first page. If set to a number that\&#39;s greater than the number of pages of results, an empty page is returned.
     * @param {number} [pagesize]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BatchesApi
     */
    listBatchErrors(batchId: string, page?: number, pagesize?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<ListBatchErrorsResponseBody, any>>;
    /**
     * List Batches associated with your Shipengine account
     * @summary List Batches
     * @param {BatchStatus} [status]
     * @param {number} [page] Return a specific page of results. Defaults to the first page. If set to a number that\&#39;s greater than the number of pages of results, an empty page is returned.
     * @param {number} [pageSize] The number of results to return per response.
     * @param {SortDir} [sortDir] Controls the sort order of the query.
     * @param {string} [batchNumber] Batch Number
     * @param {BatchesSortBy} [sortBy]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BatchesApi
     */
    listBatches(status?: BatchStatus, page?: number, pageSize?: number, sortDir?: SortDir, batchNumber?: string, sortBy?: BatchesSortBy, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<ListBatchesResponseBody, any>>;
    /**
     * Process Batch ID Labels
     * @summary Process Batch ID Labels
     * @param {string} batchId Batch ID
     * @param {ProcessBatchRequestBody} processBatchRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BatchesApi
     */
    processBatch(batchId: string, processBatchRequestBody: ProcessBatchRequestBody, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<string, any>>;
    /**
     * Remove a shipment or rate from a batch
     * @summary Remove From Batch
     * @param {string} batchId Batch ID
     * @param {RemoveFromBatchRequestBody} removeFromBatchRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BatchesApi
     */
    removeFromBatch(batchId: string, removeFromBatchRequestBody: RemoveFromBatchRequestBody, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<string, any>>;
    /**
     * Update Batch By Id
     * @summary Update Batch By Id
     * @param {string} batchId Batch ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BatchesApi
     */
    updateBatch(batchId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<string, any>>;
}
/**
 * CarrierAccountsApi - axios parameter creator
 * @export
 */
export declare const CarrierAccountsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Connect a carrier account
     * @summary Connect a carrier account
     * @param {CarrierName} carrierName The carrier name, such as &#x60;stamps_com&#x60;, &#x60;ups&#x60;, &#x60;fedex&#x60;, or &#x60;dhl_express&#x60;.
     * @param {ConnectCarrierRequestBody} connectCarrierRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    connectCarrier: (carrierName: CarrierName, connectCarrierRequestBody: ConnectCarrierRequestBody, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Disconnect a carrier
     * @summary Disconnect a carrier
     * @param {CarrierName} carrierName The carrier name, such as &#x60;stamps_com&#x60;, &#x60;ups&#x60;, &#x60;fedex&#x60;, or &#x60;dhl_express&#x60;.
     * @param {string} carrierId Carrier ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    disconnectCarrier: (carrierName: CarrierName, carrierId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get carrier settings
     * @summary Get carrier settings
     * @param {CarrierNameWithSettings} carrierName The carrier name, such as &#x60;ups&#x60;, &#x60;fedex&#x60;, or &#x60;dhl_express&#x60;.
     * @param {string} carrierId Carrier ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCarrierSettings: (carrierName: CarrierNameWithSettings, carrierId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Update carrier settings
     * @summary Update carrier settings
     * @param {CarrierNameWithSettings} carrierName The carrier name, such as &#x60;ups&#x60;, &#x60;fedex&#x60;, or &#x60;dhl_express&#x60;.
     * @param {string} carrierId Carrier ID
     * @param {UpdateCarrierSettingsRequestBody} updateCarrierSettingsRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateCarrierSettings: (carrierName: CarrierNameWithSettings, carrierId: string, updateCarrierSettingsRequestBody: UpdateCarrierSettingsRequestBody, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * CarrierAccountsApi - functional programming interface
 * @export
 */
export declare const CarrierAccountsApiFp: (configuration?: Configuration) => {
    /**
     * Connect a carrier account
     * @summary Connect a carrier account
     * @param {CarrierName} carrierName The carrier name, such as &#x60;stamps_com&#x60;, &#x60;ups&#x60;, &#x60;fedex&#x60;, or &#x60;dhl_express&#x60;.
     * @param {ConnectCarrierRequestBody} connectCarrierRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    connectCarrier(carrierName: CarrierName, connectCarrierRequestBody: ConnectCarrierRequestBody, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ConnectCarrierResponseBody>>;
    /**
     * Disconnect a carrier
     * @summary Disconnect a carrier
     * @param {CarrierName} carrierName The carrier name, such as &#x60;stamps_com&#x60;, &#x60;ups&#x60;, &#x60;fedex&#x60;, or &#x60;dhl_express&#x60;.
     * @param {string} carrierId Carrier ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    disconnectCarrier(carrierName: CarrierName, carrierId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>>;
    /**
     * Get carrier settings
     * @summary Get carrier settings
     * @param {CarrierNameWithSettings} carrierName The carrier name, such as &#x60;ups&#x60;, &#x60;fedex&#x60;, or &#x60;dhl_express&#x60;.
     * @param {string} carrierId Carrier ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCarrierSettings(carrierName: CarrierNameWithSettings, carrierId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetCarrierSettingsResponseBody>>;
    /**
     * Update carrier settings
     * @summary Update carrier settings
     * @param {CarrierNameWithSettings} carrierName The carrier name, such as &#x60;ups&#x60;, &#x60;fedex&#x60;, or &#x60;dhl_express&#x60;.
     * @param {string} carrierId Carrier ID
     * @param {UpdateCarrierSettingsRequestBody} updateCarrierSettingsRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateCarrierSettings(carrierName: CarrierNameWithSettings, carrierId: string, updateCarrierSettingsRequestBody: UpdateCarrierSettingsRequestBody, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>>;
};
/**
 * CarrierAccountsApi - factory interface
 * @export
 */
export declare const CarrierAccountsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Connect a carrier account
     * @summary Connect a carrier account
     * @param {CarrierName} carrierName The carrier name, such as &#x60;stamps_com&#x60;, &#x60;ups&#x60;, &#x60;fedex&#x60;, or &#x60;dhl_express&#x60;.
     * @param {ConnectCarrierRequestBody} connectCarrierRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    connectCarrier(carrierName: CarrierName, connectCarrierRequestBody: ConnectCarrierRequestBody, options?: any): AxiosPromise<ConnectCarrierResponseBody>;
    /**
     * Disconnect a carrier
     * @summary Disconnect a carrier
     * @param {CarrierName} carrierName The carrier name, such as &#x60;stamps_com&#x60;, &#x60;ups&#x60;, &#x60;fedex&#x60;, or &#x60;dhl_express&#x60;.
     * @param {string} carrierId Carrier ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    disconnectCarrier(carrierName: CarrierName, carrierId: string, options?: any): AxiosPromise<string>;
    /**
     * Get carrier settings
     * @summary Get carrier settings
     * @param {CarrierNameWithSettings} carrierName The carrier name, such as &#x60;ups&#x60;, &#x60;fedex&#x60;, or &#x60;dhl_express&#x60;.
     * @param {string} carrierId Carrier ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCarrierSettings(carrierName: CarrierNameWithSettings, carrierId: string, options?: any): AxiosPromise<GetCarrierSettingsResponseBody>;
    /**
     * Update carrier settings
     * @summary Update carrier settings
     * @param {CarrierNameWithSettings} carrierName The carrier name, such as &#x60;ups&#x60;, &#x60;fedex&#x60;, or &#x60;dhl_express&#x60;.
     * @param {string} carrierId Carrier ID
     * @param {UpdateCarrierSettingsRequestBody} updateCarrierSettingsRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateCarrierSettings(carrierName: CarrierNameWithSettings, carrierId: string, updateCarrierSettingsRequestBody: UpdateCarrierSettingsRequestBody, options?: any): AxiosPromise<string>;
};
/**
 * CarrierAccountsApi - object-oriented interface
 * @export
 * @class CarrierAccountsApi
 * @extends {BaseAPI}
 */
export declare class CarrierAccountsApi extends BaseAPI {
    /**
     * Connect a carrier account
     * @summary Connect a carrier account
     * @param {CarrierName} carrierName The carrier name, such as &#x60;stamps_com&#x60;, &#x60;ups&#x60;, &#x60;fedex&#x60;, or &#x60;dhl_express&#x60;.
     * @param {ConnectCarrierRequestBody} connectCarrierRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CarrierAccountsApi
     */
    connectCarrier(carrierName: CarrierName, connectCarrierRequestBody: ConnectCarrierRequestBody, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<ConnectCarrierResponseBody, any>>;
    /**
     * Disconnect a carrier
     * @summary Disconnect a carrier
     * @param {CarrierName} carrierName The carrier name, such as &#x60;stamps_com&#x60;, &#x60;ups&#x60;, &#x60;fedex&#x60;, or &#x60;dhl_express&#x60;.
     * @param {string} carrierId Carrier ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CarrierAccountsApi
     */
    disconnectCarrier(carrierName: CarrierName, carrierId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<string, any>>;
    /**
     * Get carrier settings
     * @summary Get carrier settings
     * @param {CarrierNameWithSettings} carrierName The carrier name, such as &#x60;ups&#x60;, &#x60;fedex&#x60;, or &#x60;dhl_express&#x60;.
     * @param {string} carrierId Carrier ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CarrierAccountsApi
     */
    getCarrierSettings(carrierName: CarrierNameWithSettings, carrierId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetCarrierSettingsResponseBody, any>>;
    /**
     * Update carrier settings
     * @summary Update carrier settings
     * @param {CarrierNameWithSettings} carrierName The carrier name, such as &#x60;ups&#x60;, &#x60;fedex&#x60;, or &#x60;dhl_express&#x60;.
     * @param {string} carrierId Carrier ID
     * @param {UpdateCarrierSettingsRequestBody} updateCarrierSettingsRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CarrierAccountsApi
     */
    updateCarrierSettings(carrierName: CarrierNameWithSettings, carrierId: string, updateCarrierSettingsRequestBody: UpdateCarrierSettingsRequestBody, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<string, any>>;
}
/**
 * CarriersApi - axios parameter creator
 * @export
 */
export declare const CarriersApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Add Funds To A Carrier
     * @summary Add Funds To Carrier
     * @param {string} carrierId Carrier ID
     * @param {AddFundsToCarrierRequestBody} addFundsToCarrierRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addFundsToCarrier: (carrierId: string, addFundsToCarrierRequestBody: AddFundsToCarrierRequestBody, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Retrive carrier info by ID
     * @summary Get Carrier By ID
     * @param {string} carrierId Carrier ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCarrierById: (carrierId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get a list of the options available for the carrier
     * @summary Get Carrier Options
     * @param {string} carrierId Carrier ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCarrierOptions: (carrierId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * List the package types associated with the carrier
     * @summary List Carrier Package Types
     * @param {string} carrierId Carrier ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listCarrierPackageTypes: (carrierId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * List the services associated with the carrier ID
     * @summary List Carrier Services
     * @param {string} carrierId Carrier ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listCarrierServices: (carrierId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * List all carriers that have been added to this account
     * @summary List Carriers
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listCarriers: (options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * CarriersApi - functional programming interface
 * @export
 */
export declare const CarriersApiFp: (configuration?: Configuration) => {
    /**
     * Add Funds To A Carrier
     * @summary Add Funds To Carrier
     * @param {string} carrierId Carrier ID
     * @param {AddFundsToCarrierRequestBody} addFundsToCarrierRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addFundsToCarrier(carrierId: string, addFundsToCarrierRequestBody: AddFundsToCarrierRequestBody, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AddFundsToCarrierResponseBody>>;
    /**
     * Retrive carrier info by ID
     * @summary Get Carrier By ID
     * @param {string} carrierId Carrier ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCarrierById(carrierId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetCarrierByIdResponseBody>>;
    /**
     * Get a list of the options available for the carrier
     * @summary Get Carrier Options
     * @param {string} carrierId Carrier ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCarrierOptions(carrierId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetCarrierOptionsResponseBody>>;
    /**
     * List the package types associated with the carrier
     * @summary List Carrier Package Types
     * @param {string} carrierId Carrier ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listCarrierPackageTypes(carrierId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ListCarrierPackageTypesResponseBody>>;
    /**
     * List the services associated with the carrier ID
     * @summary List Carrier Services
     * @param {string} carrierId Carrier ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listCarrierServices(carrierId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ListCarrierServicesResponseBody>>;
    /**
     * List all carriers that have been added to this account
     * @summary List Carriers
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listCarriers(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetCarriersResponseBody>>;
};
/**
 * CarriersApi - factory interface
 * @export
 */
export declare const CarriersApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Add Funds To A Carrier
     * @summary Add Funds To Carrier
     * @param {string} carrierId Carrier ID
     * @param {AddFundsToCarrierRequestBody} addFundsToCarrierRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addFundsToCarrier(carrierId: string, addFundsToCarrierRequestBody: AddFundsToCarrierRequestBody, options?: any): AxiosPromise<AddFundsToCarrierResponseBody>;
    /**
     * Retrive carrier info by ID
     * @summary Get Carrier By ID
     * @param {string} carrierId Carrier ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCarrierById(carrierId: string, options?: any): AxiosPromise<GetCarrierByIdResponseBody>;
    /**
     * Get a list of the options available for the carrier
     * @summary Get Carrier Options
     * @param {string} carrierId Carrier ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCarrierOptions(carrierId: string, options?: any): AxiosPromise<GetCarrierOptionsResponseBody>;
    /**
     * List the package types associated with the carrier
     * @summary List Carrier Package Types
     * @param {string} carrierId Carrier ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listCarrierPackageTypes(carrierId: string, options?: any): AxiosPromise<ListCarrierPackageTypesResponseBody>;
    /**
     * List the services associated with the carrier ID
     * @summary List Carrier Services
     * @param {string} carrierId Carrier ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listCarrierServices(carrierId: string, options?: any): AxiosPromise<ListCarrierServicesResponseBody>;
    /**
     * List all carriers that have been added to this account
     * @summary List Carriers
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listCarriers(options?: any): AxiosPromise<GetCarriersResponseBody>;
};
/**
 * CarriersApi - object-oriented interface
 * @export
 * @class CarriersApi
 * @extends {BaseAPI}
 */
export declare class CarriersApi extends BaseAPI {
    /**
     * Add Funds To A Carrier
     * @summary Add Funds To Carrier
     * @param {string} carrierId Carrier ID
     * @param {AddFundsToCarrierRequestBody} addFundsToCarrierRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CarriersApi
     */
    addFundsToCarrier(carrierId: string, addFundsToCarrierRequestBody: AddFundsToCarrierRequestBody, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<AddFundsToCarrierResponseBody, any>>;
    /**
     * Retrive carrier info by ID
     * @summary Get Carrier By ID
     * @param {string} carrierId Carrier ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CarriersApi
     */
    getCarrierById(carrierId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetCarrierByIdResponseBody, any>>;
    /**
     * Get a list of the options available for the carrier
     * @summary Get Carrier Options
     * @param {string} carrierId Carrier ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CarriersApi
     */
    getCarrierOptions(carrierId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetCarrierOptionsResponseBody, any>>;
    /**
     * List the package types associated with the carrier
     * @summary List Carrier Package Types
     * @param {string} carrierId Carrier ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CarriersApi
     */
    listCarrierPackageTypes(carrierId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<ListCarrierPackageTypesResponseBody, any>>;
    /**
     * List the services associated with the carrier ID
     * @summary List Carrier Services
     * @param {string} carrierId Carrier ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CarriersApi
     */
    listCarrierServices(carrierId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<ListCarrierServicesResponseBody, any>>;
    /**
     * List all carriers that have been added to this account
     * @summary List Carriers
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CarriersApi
     */
    listCarriers(options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetCarriersResponseBody, any>>;
}
/**
 * DownloadsApi - axios parameter creator
 * @export
 */
export declare const DownloadsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Get File
     * @summary Download File
     * @param {string} subdir
     * @param {string} filename
     * @param {string} dir
     * @param {string} [download]
     * @param {number} [rotation]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    downloadFile: (subdir: string, filename: string, dir: string, download?: string, rotation?: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * DownloadsApi - functional programming interface
 * @export
 */
export declare const DownloadsApiFp: (configuration?: Configuration) => {
    /**
     * Get File
     * @summary Download File
     * @param {string} subdir
     * @param {string} filename
     * @param {string} dir
     * @param {string} [download]
     * @param {number} [rotation]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    downloadFile(subdir: string, filename: string, dir: string, download?: string, rotation?: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<File>>;
};
/**
 * DownloadsApi - factory interface
 * @export
 */
export declare const DownloadsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Get File
     * @summary Download File
     * @param {string} subdir
     * @param {string} filename
     * @param {string} dir
     * @param {string} [download]
     * @param {number} [rotation]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    downloadFile(subdir: string, filename: string, dir: string, download?: string, rotation?: number, options?: any): AxiosPromise<File>;
};
/**
 * DownloadsApi - object-oriented interface
 * @export
 * @class DownloadsApi
 * @extends {BaseAPI}
 */
export declare class DownloadsApi extends BaseAPI {
    /**
     * Get File
     * @summary Download File
     * @param {string} subdir
     * @param {string} filename
     * @param {string} dir
     * @param {string} [download]
     * @param {number} [rotation]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DownloadsApi
     */
    downloadFile(subdir: string, filename: string, dir: string, download?: string, rotation?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<File, any>>;
}
/**
 * InsuranceApi - axios parameter creator
 * @export
 */
export declare const InsuranceApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * You may need to auto fund your account from time to time. For example, if you don\'t normally ship items over $100, and may want to add funds to insurance rather than keeping the account funded.
     * @summary Add Funds To Insurance
     * @param {AddFundsToInsuranceRequestBody} addFundsToInsuranceRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addFundsToInsurance: (addFundsToInsuranceRequestBody: AddFundsToInsuranceRequestBody, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Connect a Shipsurance Account
     * @summary Connect a Shipsurance Account
     * @param {ConnectInsurerRequestBody} connectInsurerRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    connectInsurer: (connectInsurerRequestBody: ConnectInsurerRequestBody, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Disconnect a Shipsurance Account
     * @summary Disconnect a Shipsurance Account
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    disconnectInsurer: (options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Retrieve the balance of your Shipsurance account.
     * @summary Get Insurance Funds Balance
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getInsuranceBalance: (options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * InsuranceApi - functional programming interface
 * @export
 */
export declare const InsuranceApiFp: (configuration?: Configuration) => {
    /**
     * You may need to auto fund your account from time to time. For example, if you don\'t normally ship items over $100, and may want to add funds to insurance rather than keeping the account funded.
     * @summary Add Funds To Insurance
     * @param {AddFundsToInsuranceRequestBody} addFundsToInsuranceRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addFundsToInsurance(addFundsToInsuranceRequestBody: AddFundsToInsuranceRequestBody, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AddFundsToInsuranceResponseBody>>;
    /**
     * Connect a Shipsurance Account
     * @summary Connect a Shipsurance Account
     * @param {ConnectInsurerRequestBody} connectInsurerRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    connectInsurer(connectInsurerRequestBody: ConnectInsurerRequestBody, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
    /**
     * Disconnect a Shipsurance Account
     * @summary Disconnect a Shipsurance Account
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    disconnectInsurer(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
    /**
     * Retrieve the balance of your Shipsurance account.
     * @summary Get Insurance Funds Balance
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getInsuranceBalance(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetInsuranceBalanceResponseBody>>;
};
/**
 * InsuranceApi - factory interface
 * @export
 */
export declare const InsuranceApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * You may need to auto fund your account from time to time. For example, if you don\'t normally ship items over $100, and may want to add funds to insurance rather than keeping the account funded.
     * @summary Add Funds To Insurance
     * @param {AddFundsToInsuranceRequestBody} addFundsToInsuranceRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addFundsToInsurance(addFundsToInsuranceRequestBody: AddFundsToInsuranceRequestBody, options?: any): AxiosPromise<AddFundsToInsuranceResponseBody>;
    /**
     * Connect a Shipsurance Account
     * @summary Connect a Shipsurance Account
     * @param {ConnectInsurerRequestBody} connectInsurerRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    connectInsurer(connectInsurerRequestBody: ConnectInsurerRequestBody, options?: any): AxiosPromise<object>;
    /**
     * Disconnect a Shipsurance Account
     * @summary Disconnect a Shipsurance Account
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    disconnectInsurer(options?: any): AxiosPromise<object>;
    /**
     * Retrieve the balance of your Shipsurance account.
     * @summary Get Insurance Funds Balance
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getInsuranceBalance(options?: any): AxiosPromise<GetInsuranceBalanceResponseBody>;
};
/**
 * InsuranceApi - object-oriented interface
 * @export
 * @class InsuranceApi
 * @extends {BaseAPI}
 */
export declare class InsuranceApi extends BaseAPI {
    /**
     * You may need to auto fund your account from time to time. For example, if you don\'t normally ship items over $100, and may want to add funds to insurance rather than keeping the account funded.
     * @summary Add Funds To Insurance
     * @param {AddFundsToInsuranceRequestBody} addFundsToInsuranceRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InsuranceApi
     */
    addFundsToInsurance(addFundsToInsuranceRequestBody: AddFundsToInsuranceRequestBody, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<AddFundsToInsuranceResponseBody, any>>;
    /**
     * Connect a Shipsurance Account
     * @summary Connect a Shipsurance Account
     * @param {ConnectInsurerRequestBody} connectInsurerRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InsuranceApi
     */
    connectInsurer(connectInsurerRequestBody: ConnectInsurerRequestBody, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<object, any>>;
    /**
     * Disconnect a Shipsurance Account
     * @summary Disconnect a Shipsurance Account
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InsuranceApi
     */
    disconnectInsurer(options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<object, any>>;
    /**
     * Retrieve the balance of your Shipsurance account.
     * @summary Get Insurance Funds Balance
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InsuranceApi
     */
    getInsuranceBalance(options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetInsuranceBalanceResponseBody, any>>;
}
/**
 * LabelsApi - axios parameter creator
 * @export
 */
export declare const LabelsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Purchase and print a label for shipment
     * @summary Purchase Label
     * @param {CreateLabelRequestBody} createLabelRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createLabel: (createLabelRequestBody: CreateLabelRequestBody, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * When retrieving rates for shipments using the `/rates` endpoint, the returned information contains a `rate_id` property that can be used to generate a label without having to refill in the shipment information repeatedly.
     * @summary Purchase Label with Rate ID
     * @param {string} rateId Rate ID
     * @param {CreateLabelFromRateRequestBody} createLabelFromRateRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createLabelFromRate: (rateId: string, createLabelFromRateRequestBody: CreateLabelFromRateRequestBody, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Purchase a label using a shipment ID that has already been created with the desired address and package info.
     * @summary Purchase Label with Shipment ID
     * @param {string} shipmentId Shipment ID
     * @param {CreateLabelFromShipmentRequestBody} createLabelFromShipmentRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createLabelFromShipment: (shipmentId: string, createLabelFromShipmentRequestBody: CreateLabelFromShipmentRequestBody, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Create a return label
     * @summary Create a return label
     * @param {string} labelId Label ID
     * @param {CreateReturnLabelRequestBody} createReturnLabelRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createReturnLabel: (labelId: string, createReturnLabelRequestBody: CreateReturnLabelRequestBody, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Find a label by using the external shipment id that was used during label creation
     * @summary Get Label By External Shipment ID
     * @param {string} externalShipmentId
     * @param {LabelDownloadType} [labelDownloadType]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLabelByExternalShipmentId: (externalShipmentId: string, labelDownloadType?: LabelDownloadType, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Retrieve information for individual labels.
     * @summary Get Label By ID
     * @param {string} labelId Label ID
     * @param {LabelDownloadType} [labelDownloadType]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLabelById: (labelId: string, labelDownloadType?: LabelDownloadType, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Retrieve the label\'s tracking information
     * @summary Get Label Tracking Information
     * @param {string} labelId Label ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getTrackingLogFromLabel: (labelId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * This endpoint returns a list of labels that you\'ve [created](https://www.shipengine.com/docs/labels/create-a-label/). You can optionally filter the results as well as control their sort order and the number of results returned at a time.  By default, all labels are returned, 25 at a time, starting with the most recently created ones.  You can combine multiple filter options to narrow-down the results.  For example, if you only want to get your UPS labels for your east coast warehouse you could query by both `warehouse_id` and `carrier_id`
     * @summary List labels
     * @param {LabelStatus} [labelStatus] Only return labels that are currently in the specified status
     * @param {string} [serviceCode] Only return labels for a specific [carrier service](https://www.shipengine.com/docs/shipping/use-a-carrier-service/)
     * @param {string} [carrierId] Only return labels for a specific [carrier account](https://www.shipengine.com/docs/carriers/setup/)
     * @param {string} [trackingNumber] Only return labels with a specific tracking number
     * @param {string} [batchId] Only return labels that were created in a specific [batch](https://www.shipengine.com/docs/labels/bulk/)
     * @param {string} [rateId] Rate ID
     * @param {string} [shipmentId] Shipment ID
     * @param {string} [warehouseId] Only return labels that originate from a specific [warehouse](https://www.shipengine.com/docs/shipping/ship-from-a-warehouse/)
     * @param {string} [createdAtStart] Only return labels that were created on or after a specific date/time
     * @param {string} [createdAtEnd] Only return labels that were created on or before a specific date/time
     * @param {number} [page] Return a specific page of results. Defaults to the first page. If set to a number that\&#39;s greater than the number of pages of results, an empty page is returned.
     * @param {number} [pageSize] The number of results to return per response.
     * @param {SortDir} [sortDir] Controls the sort order of the query.
     * @param {ListLabelsSortByEnum} [sortBy] Controls which field the query is sorted by.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listLabels: (labelStatus?: LabelStatus, serviceCode?: string, carrierId?: string, trackingNumber?: string, batchId?: string, rateId?: string, shipmentId?: string, warehouseId?: string, createdAtStart?: string, createdAtEnd?: string, page?: number, pageSize?: number, sortDir?: SortDir, sortBy?: ListLabelsSortByEnum, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Void a label by ID to get a refund.
     * @summary Void a Label By ID
     * @param {string} labelId Label ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    voidLabel: (labelId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * LabelsApi - functional programming interface
 * @export
 */
export declare const LabelsApiFp: (configuration?: Configuration) => {
    /**
     * Purchase and print a label for shipment
     * @summary Purchase Label
     * @param {CreateLabelRequestBody} createLabelRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createLabel(createLabelRequestBody: CreateLabelRequestBody, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CreateLabelResponseBody>>;
    /**
     * When retrieving rates for shipments using the `/rates` endpoint, the returned information contains a `rate_id` property that can be used to generate a label without having to refill in the shipment information repeatedly.
     * @summary Purchase Label with Rate ID
     * @param {string} rateId Rate ID
     * @param {CreateLabelFromRateRequestBody} createLabelFromRateRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createLabelFromRate(rateId: string, createLabelFromRateRequestBody: CreateLabelFromRateRequestBody, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CreateLabelFromRateResponseBody>>;
    /**
     * Purchase a label using a shipment ID that has already been created with the desired address and package info.
     * @summary Purchase Label with Shipment ID
     * @param {string} shipmentId Shipment ID
     * @param {CreateLabelFromShipmentRequestBody} createLabelFromShipmentRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createLabelFromShipment(shipmentId: string, createLabelFromShipmentRequestBody: CreateLabelFromShipmentRequestBody, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CreateLabelFromShipmentResponseBody>>;
    /**
     * Create a return label
     * @summary Create a return label
     * @param {string} labelId Label ID
     * @param {CreateReturnLabelRequestBody} createReturnLabelRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createReturnLabel(labelId: string, createReturnLabelRequestBody: CreateReturnLabelRequestBody, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CreateReturnLabelResponseBody>>;
    /**
     * Find a label by using the external shipment id that was used during label creation
     * @summary Get Label By External Shipment ID
     * @param {string} externalShipmentId
     * @param {LabelDownloadType} [labelDownloadType]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLabelByExternalShipmentId(externalShipmentId: string, labelDownloadType?: LabelDownloadType, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetLabelByExternalShipmentIdResponseBody>>;
    /**
     * Retrieve information for individual labels.
     * @summary Get Label By ID
     * @param {string} labelId Label ID
     * @param {LabelDownloadType} [labelDownloadType]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLabelById(labelId: string, labelDownloadType?: LabelDownloadType, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetLabelByIdResponseBody>>;
    /**
     * Retrieve the label\'s tracking information
     * @summary Get Label Tracking Information
     * @param {string} labelId Label ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getTrackingLogFromLabel(labelId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetTrackingLogFromLabelResponseBody>>;
    /**
     * This endpoint returns a list of labels that you\'ve [created](https://www.shipengine.com/docs/labels/create-a-label/). You can optionally filter the results as well as control their sort order and the number of results returned at a time.  By default, all labels are returned, 25 at a time, starting with the most recently created ones.  You can combine multiple filter options to narrow-down the results.  For example, if you only want to get your UPS labels for your east coast warehouse you could query by both `warehouse_id` and `carrier_id`
     * @summary List labels
     * @param {LabelStatus} [labelStatus] Only return labels that are currently in the specified status
     * @param {string} [serviceCode] Only return labels for a specific [carrier service](https://www.shipengine.com/docs/shipping/use-a-carrier-service/)
     * @param {string} [carrierId] Only return labels for a specific [carrier account](https://www.shipengine.com/docs/carriers/setup/)
     * @param {string} [trackingNumber] Only return labels with a specific tracking number
     * @param {string} [batchId] Only return labels that were created in a specific [batch](https://www.shipengine.com/docs/labels/bulk/)
     * @param {string} [rateId] Rate ID
     * @param {string} [shipmentId] Shipment ID
     * @param {string} [warehouseId] Only return labels that originate from a specific [warehouse](https://www.shipengine.com/docs/shipping/ship-from-a-warehouse/)
     * @param {string} [createdAtStart] Only return labels that were created on or after a specific date/time
     * @param {string} [createdAtEnd] Only return labels that were created on or before a specific date/time
     * @param {number} [page] Return a specific page of results. Defaults to the first page. If set to a number that\&#39;s greater than the number of pages of results, an empty page is returned.
     * @param {number} [pageSize] The number of results to return per response.
     * @param {SortDir} [sortDir] Controls the sort order of the query.
     * @param {ListLabelsSortByEnum} [sortBy] Controls which field the query is sorted by.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listLabels(labelStatus?: LabelStatus, serviceCode?: string, carrierId?: string, trackingNumber?: string, batchId?: string, rateId?: string, shipmentId?: string, warehouseId?: string, createdAtStart?: string, createdAtEnd?: string, page?: number, pageSize?: number, sortDir?: SortDir, sortBy?: ListLabelsSortByEnum, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ListLabelsResponseBody>>;
    /**
     * Void a label by ID to get a refund.
     * @summary Void a Label By ID
     * @param {string} labelId Label ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    voidLabel(labelId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<VoidLabelResponseBody>>;
};
/**
 * LabelsApi - factory interface
 * @export
 */
export declare const LabelsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Purchase and print a label for shipment
     * @summary Purchase Label
     * @param {CreateLabelRequestBody} createLabelRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createLabel(createLabelRequestBody: CreateLabelRequestBody, options?: any): AxiosPromise<CreateLabelResponseBody>;
    /**
     * When retrieving rates for shipments using the `/rates` endpoint, the returned information contains a `rate_id` property that can be used to generate a label without having to refill in the shipment information repeatedly.
     * @summary Purchase Label with Rate ID
     * @param {string} rateId Rate ID
     * @param {CreateLabelFromRateRequestBody} createLabelFromRateRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createLabelFromRate(rateId: string, createLabelFromRateRequestBody: CreateLabelFromRateRequestBody, options?: any): AxiosPromise<CreateLabelFromRateResponseBody>;
    /**
     * Purchase a label using a shipment ID that has already been created with the desired address and package info.
     * @summary Purchase Label with Shipment ID
     * @param {string} shipmentId Shipment ID
     * @param {CreateLabelFromShipmentRequestBody} createLabelFromShipmentRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createLabelFromShipment(shipmentId: string, createLabelFromShipmentRequestBody: CreateLabelFromShipmentRequestBody, options?: any): AxiosPromise<CreateLabelFromShipmentResponseBody>;
    /**
     * Create a return label
     * @summary Create a return label
     * @param {string} labelId Label ID
     * @param {CreateReturnLabelRequestBody} createReturnLabelRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createReturnLabel(labelId: string, createReturnLabelRequestBody: CreateReturnLabelRequestBody, options?: any): AxiosPromise<CreateReturnLabelResponseBody>;
    /**
     * Find a label by using the external shipment id that was used during label creation
     * @summary Get Label By External Shipment ID
     * @param {string} externalShipmentId
     * @param {LabelDownloadType} [labelDownloadType]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLabelByExternalShipmentId(externalShipmentId: string, labelDownloadType?: LabelDownloadType, options?: any): AxiosPromise<GetLabelByExternalShipmentIdResponseBody>;
    /**
     * Retrieve information for individual labels.
     * @summary Get Label By ID
     * @param {string} labelId Label ID
     * @param {LabelDownloadType} [labelDownloadType]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLabelById(labelId: string, labelDownloadType?: LabelDownloadType, options?: any): AxiosPromise<GetLabelByIdResponseBody>;
    /**
     * Retrieve the label\'s tracking information
     * @summary Get Label Tracking Information
     * @param {string} labelId Label ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getTrackingLogFromLabel(labelId: string, options?: any): AxiosPromise<GetTrackingLogFromLabelResponseBody>;
    /**
     * This endpoint returns a list of labels that you\'ve [created](https://www.shipengine.com/docs/labels/create-a-label/). You can optionally filter the results as well as control their sort order and the number of results returned at a time.  By default, all labels are returned, 25 at a time, starting with the most recently created ones.  You can combine multiple filter options to narrow-down the results.  For example, if you only want to get your UPS labels for your east coast warehouse you could query by both `warehouse_id` and `carrier_id`
     * @summary List labels
     * @param {LabelStatus} [labelStatus] Only return labels that are currently in the specified status
     * @param {string} [serviceCode] Only return labels for a specific [carrier service](https://www.shipengine.com/docs/shipping/use-a-carrier-service/)
     * @param {string} [carrierId] Only return labels for a specific [carrier account](https://www.shipengine.com/docs/carriers/setup/)
     * @param {string} [trackingNumber] Only return labels with a specific tracking number
     * @param {string} [batchId] Only return labels that were created in a specific [batch](https://www.shipengine.com/docs/labels/bulk/)
     * @param {string} [rateId] Rate ID
     * @param {string} [shipmentId] Shipment ID
     * @param {string} [warehouseId] Only return labels that originate from a specific [warehouse](https://www.shipengine.com/docs/shipping/ship-from-a-warehouse/)
     * @param {string} [createdAtStart] Only return labels that were created on or after a specific date/time
     * @param {string} [createdAtEnd] Only return labels that were created on or before a specific date/time
     * @param {number} [page] Return a specific page of results. Defaults to the first page. If set to a number that\&#39;s greater than the number of pages of results, an empty page is returned.
     * @param {number} [pageSize] The number of results to return per response.
     * @param {SortDir} [sortDir] Controls the sort order of the query.
     * @param {ListLabelsSortByEnum} [sortBy] Controls which field the query is sorted by.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listLabels(labelStatus?: LabelStatus, serviceCode?: string, carrierId?: string, trackingNumber?: string, batchId?: string, rateId?: string, shipmentId?: string, warehouseId?: string, createdAtStart?: string, createdAtEnd?: string, page?: number, pageSize?: number, sortDir?: SortDir, sortBy?: ListLabelsSortByEnum, options?: any): AxiosPromise<ListLabelsResponseBody>;
    /**
     * Void a label by ID to get a refund.
     * @summary Void a Label By ID
     * @param {string} labelId Label ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    voidLabel(labelId: string, options?: any): AxiosPromise<VoidLabelResponseBody>;
};
/**
 * LabelsApi - object-oriented interface
 * @export
 * @class LabelsApi
 * @extends {BaseAPI}
 */
export declare class LabelsApi extends BaseAPI {
    /**
     * Purchase and print a label for shipment
     * @summary Purchase Label
     * @param {CreateLabelRequestBody} createLabelRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LabelsApi
     */
    createLabel(createLabelRequestBody: CreateLabelRequestBody, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<CreateLabelResponseBody, any>>;
    /**
     * When retrieving rates for shipments using the `/rates` endpoint, the returned information contains a `rate_id` property that can be used to generate a label without having to refill in the shipment information repeatedly.
     * @summary Purchase Label with Rate ID
     * @param {string} rateId Rate ID
     * @param {CreateLabelFromRateRequestBody} createLabelFromRateRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LabelsApi
     */
    createLabelFromRate(rateId: string, createLabelFromRateRequestBody: CreateLabelFromRateRequestBody, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<CreateLabelFromRateResponseBody, any>>;
    /**
     * Purchase a label using a shipment ID that has already been created with the desired address and package info.
     * @summary Purchase Label with Shipment ID
     * @param {string} shipmentId Shipment ID
     * @param {CreateLabelFromShipmentRequestBody} createLabelFromShipmentRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LabelsApi
     */
    createLabelFromShipment(shipmentId: string, createLabelFromShipmentRequestBody: CreateLabelFromShipmentRequestBody, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<CreateLabelFromShipmentResponseBody, any>>;
    /**
     * Create a return label
     * @summary Create a return label
     * @param {string} labelId Label ID
     * @param {CreateReturnLabelRequestBody} createReturnLabelRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LabelsApi
     */
    createReturnLabel(labelId: string, createReturnLabelRequestBody: CreateReturnLabelRequestBody, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<CreateReturnLabelResponseBody, any>>;
    /**
     * Find a label by using the external shipment id that was used during label creation
     * @summary Get Label By External Shipment ID
     * @param {string} externalShipmentId
     * @param {LabelDownloadType} [labelDownloadType]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LabelsApi
     */
    getLabelByExternalShipmentId(externalShipmentId: string, labelDownloadType?: LabelDownloadType, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetLabelByExternalShipmentIdResponseBody, any>>;
    /**
     * Retrieve information for individual labels.
     * @summary Get Label By ID
     * @param {string} labelId Label ID
     * @param {LabelDownloadType} [labelDownloadType]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LabelsApi
     */
    getLabelById(labelId: string, labelDownloadType?: LabelDownloadType, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetLabelByIdResponseBody, any>>;
    /**
     * Retrieve the label\'s tracking information
     * @summary Get Label Tracking Information
     * @param {string} labelId Label ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LabelsApi
     */
    getTrackingLogFromLabel(labelId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetTrackingLogFromLabelResponseBody, any>>;
    /**
     * This endpoint returns a list of labels that you\'ve [created](https://www.shipengine.com/docs/labels/create-a-label/). You can optionally filter the results as well as control their sort order and the number of results returned at a time.  By default, all labels are returned, 25 at a time, starting with the most recently created ones.  You can combine multiple filter options to narrow-down the results.  For example, if you only want to get your UPS labels for your east coast warehouse you could query by both `warehouse_id` and `carrier_id`
     * @summary List labels
     * @param {LabelStatus} [labelStatus] Only return labels that are currently in the specified status
     * @param {string} [serviceCode] Only return labels for a specific [carrier service](https://www.shipengine.com/docs/shipping/use-a-carrier-service/)
     * @param {string} [carrierId] Only return labels for a specific [carrier account](https://www.shipengine.com/docs/carriers/setup/)
     * @param {string} [trackingNumber] Only return labels with a specific tracking number
     * @param {string} [batchId] Only return labels that were created in a specific [batch](https://www.shipengine.com/docs/labels/bulk/)
     * @param {string} [rateId] Rate ID
     * @param {string} [shipmentId] Shipment ID
     * @param {string} [warehouseId] Only return labels that originate from a specific [warehouse](https://www.shipengine.com/docs/shipping/ship-from-a-warehouse/)
     * @param {string} [createdAtStart] Only return labels that were created on or after a specific date/time
     * @param {string} [createdAtEnd] Only return labels that were created on or before a specific date/time
     * @param {number} [page] Return a specific page of results. Defaults to the first page. If set to a number that\&#39;s greater than the number of pages of results, an empty page is returned.
     * @param {number} [pageSize] The number of results to return per response.
     * @param {SortDir} [sortDir] Controls the sort order of the query.
     * @param {ListLabelsSortByEnum} [sortBy] Controls which field the query is sorted by.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LabelsApi
     */
    listLabels(labelStatus?: LabelStatus, serviceCode?: string, carrierId?: string, trackingNumber?: string, batchId?: string, rateId?: string, shipmentId?: string, warehouseId?: string, createdAtStart?: string, createdAtEnd?: string, page?: number, pageSize?: number, sortDir?: SortDir, sortBy?: ListLabelsSortByEnum, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<ListLabelsResponseBody, any>>;
    /**
     * Void a label by ID to get a refund.
     * @summary Void a Label By ID
     * @param {string} labelId Label ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LabelsApi
     */
    voidLabel(labelId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<VoidLabelResponseBody, any>>;
}
/**
 * @export
 */
export declare const ListLabelsSortByEnum: {
    readonly ModifiedAt: "modified_at";
    readonly CreatedAt: "created_at";
};
export type ListLabelsSortByEnum = typeof ListLabelsSortByEnum[keyof typeof ListLabelsSortByEnum];
/**
 * ManifestsApi - axios parameter creator
 * @export
 */
export declare const ManifestsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Each ShipEngine manifest is created for a specific warehouse, so you\'ll need to provide the warehouse_id rather than the ship_from address. You can create a warehouse for each location that you want to create manifests for.
     * @summary Create Manifest
     * @param {CreateManifestRequestBody} createManifestRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createManifest: (createManifestRequestBody: CreateManifestRequestBody, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get Manifest By Id
     * @summary Get Manifest By Id
     * @param {string} manifestId The Manifest Id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getManifestById: (manifestId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get Manifest Request By Id
     * @summary Get Manifest Request By Id
     * @param {string} manifestRequestId The Manifest Request Id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getManifestRequestById: (manifestRequestId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Similar to querying shipments, we allow you to query manifests since there will likely be a large number over a long period of time.
     * @summary List Manifests
     * @param {string} [warehouseId] Warehouse ID
     * @param {string} [shipDateStart] ship date start range
     * @param {string} [shipDateEnd] ship date end range
     * @param {string} [createdAtStart] Used to create a filter for when a resource was created (ex. A shipment that was created after a certain time)
     * @param {string} [createdAtEnd] Used to create a filter for when a resource was created, (ex. A shipment that was created before a certain time)
     * @param {string} [carrierId] Carrier ID
     * @param {number} [page] Return a specific page of results. Defaults to the first page. If set to a number that\&#39;s greater than the number of pages of results, an empty page is returned.
     * @param {number} [pageSize] The number of results to return per response.
     * @param {Array<string>} [labelIds]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listManifests: (warehouseId?: string, shipDateStart?: string, shipDateEnd?: string, createdAtStart?: string, createdAtEnd?: string, carrierId?: string, page?: number, pageSize?: number, labelIds?: Array<string>, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * ManifestsApi - functional programming interface
 * @export
 */
export declare const ManifestsApiFp: (configuration?: Configuration) => {
    /**
     * Each ShipEngine manifest is created for a specific warehouse, so you\'ll need to provide the warehouse_id rather than the ship_from address. You can create a warehouse for each location that you want to create manifests for.
     * @summary Create Manifest
     * @param {CreateManifestRequestBody} createManifestRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createManifest(createManifestRequestBody: CreateManifestRequestBody, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CreateManifestResponseBody>>;
    /**
     * Get Manifest By Id
     * @summary Get Manifest By Id
     * @param {string} manifestId The Manifest Id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getManifestById(manifestId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetManifestByIdResponseBody>>;
    /**
     * Get Manifest Request By Id
     * @summary Get Manifest Request By Id
     * @param {string} manifestRequestId The Manifest Request Id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getManifestRequestById(manifestRequestId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CreateManifestResponseBody>>;
    /**
     * Similar to querying shipments, we allow you to query manifests since there will likely be a large number over a long period of time.
     * @summary List Manifests
     * @param {string} [warehouseId] Warehouse ID
     * @param {string} [shipDateStart] ship date start range
     * @param {string} [shipDateEnd] ship date end range
     * @param {string} [createdAtStart] Used to create a filter for when a resource was created (ex. A shipment that was created after a certain time)
     * @param {string} [createdAtEnd] Used to create a filter for when a resource was created, (ex. A shipment that was created before a certain time)
     * @param {string} [carrierId] Carrier ID
     * @param {number} [page] Return a specific page of results. Defaults to the first page. If set to a number that\&#39;s greater than the number of pages of results, an empty page is returned.
     * @param {number} [pageSize] The number of results to return per response.
     * @param {Array<string>} [labelIds]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listManifests(warehouseId?: string, shipDateStart?: string, shipDateEnd?: string, createdAtStart?: string, createdAtEnd?: string, carrierId?: string, page?: number, pageSize?: number, labelIds?: Array<string>, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ListManifestsResponseBody>>;
};
/**
 * ManifestsApi - factory interface
 * @export
 */
export declare const ManifestsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Each ShipEngine manifest is created for a specific warehouse, so you\'ll need to provide the warehouse_id rather than the ship_from address. You can create a warehouse for each location that you want to create manifests for.
     * @summary Create Manifest
     * @param {CreateManifestRequestBody} createManifestRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createManifest(createManifestRequestBody: CreateManifestRequestBody, options?: any): AxiosPromise<CreateManifestResponseBody>;
    /**
     * Get Manifest By Id
     * @summary Get Manifest By Id
     * @param {string} manifestId The Manifest Id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getManifestById(manifestId: string, options?: any): AxiosPromise<GetManifestByIdResponseBody>;
    /**
     * Get Manifest Request By Id
     * @summary Get Manifest Request By Id
     * @param {string} manifestRequestId The Manifest Request Id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getManifestRequestById(manifestRequestId: string, options?: any): AxiosPromise<CreateManifestResponseBody>;
    /**
     * Similar to querying shipments, we allow you to query manifests since there will likely be a large number over a long period of time.
     * @summary List Manifests
     * @param {string} [warehouseId] Warehouse ID
     * @param {string} [shipDateStart] ship date start range
     * @param {string} [shipDateEnd] ship date end range
     * @param {string} [createdAtStart] Used to create a filter for when a resource was created (ex. A shipment that was created after a certain time)
     * @param {string} [createdAtEnd] Used to create a filter for when a resource was created, (ex. A shipment that was created before a certain time)
     * @param {string} [carrierId] Carrier ID
     * @param {number} [page] Return a specific page of results. Defaults to the first page. If set to a number that\&#39;s greater than the number of pages of results, an empty page is returned.
     * @param {number} [pageSize] The number of results to return per response.
     * @param {Array<string>} [labelIds]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listManifests(warehouseId?: string, shipDateStart?: string, shipDateEnd?: string, createdAtStart?: string, createdAtEnd?: string, carrierId?: string, page?: number, pageSize?: number, labelIds?: Array<string>, options?: any): AxiosPromise<ListManifestsResponseBody>;
};
/**
 * ManifestsApi - object-oriented interface
 * @export
 * @class ManifestsApi
 * @extends {BaseAPI}
 */
export declare class ManifestsApi extends BaseAPI {
    /**
     * Each ShipEngine manifest is created for a specific warehouse, so you\'ll need to provide the warehouse_id rather than the ship_from address. You can create a warehouse for each location that you want to create manifests for.
     * @summary Create Manifest
     * @param {CreateManifestRequestBody} createManifestRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ManifestsApi
     */
    createManifest(createManifestRequestBody: CreateManifestRequestBody, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<CreateManifestResponseBody, any>>;
    /**
     * Get Manifest By Id
     * @summary Get Manifest By Id
     * @param {string} manifestId The Manifest Id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ManifestsApi
     */
    getManifestById(manifestId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetManifestByIdResponseBody, any>>;
    /**
     * Get Manifest Request By Id
     * @summary Get Manifest Request By Id
     * @param {string} manifestRequestId The Manifest Request Id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ManifestsApi
     */
    getManifestRequestById(manifestRequestId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<CreateManifestResponseBody, any>>;
    /**
     * Similar to querying shipments, we allow you to query manifests since there will likely be a large number over a long period of time.
     * @summary List Manifests
     * @param {string} [warehouseId] Warehouse ID
     * @param {string} [shipDateStart] ship date start range
     * @param {string} [shipDateEnd] ship date end range
     * @param {string} [createdAtStart] Used to create a filter for when a resource was created (ex. A shipment that was created after a certain time)
     * @param {string} [createdAtEnd] Used to create a filter for when a resource was created, (ex. A shipment that was created before a certain time)
     * @param {string} [carrierId] Carrier ID
     * @param {number} [page] Return a specific page of results. Defaults to the first page. If set to a number that\&#39;s greater than the number of pages of results, an empty page is returned.
     * @param {number} [pageSize] The number of results to return per response.
     * @param {Array<string>} [labelIds]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ManifestsApi
     */
    listManifests(warehouseId?: string, shipDateStart?: string, shipDateEnd?: string, createdAtStart?: string, createdAtEnd?: string, carrierId?: string, page?: number, pageSize?: number, labelIds?: Array<string>, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<ListManifestsResponseBody, any>>;
}
/**
 * PackagePickupsApi - axios parameter creator
 * @export
 */
export declare const PackagePickupsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Delete a previously-scheduled pickup by ID
     * @summary Delete a Scheduled Pickup
     * @param {string} pickupId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteScheduledPickup: (pickupId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get Pickup By ID
     * @summary Get Pickup By ID
     * @param {string} pickupId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getPickupById: (pickupId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * List all pickups that have been scheduled for this carrier
     * @summary List Scheduled Pickups
     * @param {string} [carrierId] Carrier ID
     * @param {string} [warehouseId] Warehouse ID
     * @param {string} [createdAtStart] Only return scheduled pickups that were created on or after a specific date/time
     * @param {string} [createdAtEnd] Only return scheduled pickups that were created on or before a specific date/time
     * @param {number} [page] Return a specific page of results. Defaults to the first page. If set to a number that\&#39;s greater than the number of pages of results, an empty page is returned.
     * @param {number} [pageSize] The number of results to return per response.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listScheduledPickups: (carrierId?: string, warehouseId?: string, createdAtStart?: string, createdAtEnd?: string, page?: number, pageSize?: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Schedule a package pickup with a carrier
     * @summary Schedule a Pickup
     * @param {SchedulePickupRequestBody} schedulePickupRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    schedulePickup: (schedulePickupRequestBody: SchedulePickupRequestBody, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * PackagePickupsApi - functional programming interface
 * @export
 */
export declare const PackagePickupsApiFp: (configuration?: Configuration) => {
    /**
     * Delete a previously-scheduled pickup by ID
     * @summary Delete a Scheduled Pickup
     * @param {string} pickupId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteScheduledPickup(pickupId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<DeletePickupByIdResponseBody>>;
    /**
     * Get Pickup By ID
     * @summary Get Pickup By ID
     * @param {string} pickupId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getPickupById(pickupId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetPickupByIdResponseBody>>;
    /**
     * List all pickups that have been scheduled for this carrier
     * @summary List Scheduled Pickups
     * @param {string} [carrierId] Carrier ID
     * @param {string} [warehouseId] Warehouse ID
     * @param {string} [createdAtStart] Only return scheduled pickups that were created on or after a specific date/time
     * @param {string} [createdAtEnd] Only return scheduled pickups that were created on or before a specific date/time
     * @param {number} [page] Return a specific page of results. Defaults to the first page. If set to a number that\&#39;s greater than the number of pages of results, an empty page is returned.
     * @param {number} [pageSize] The number of results to return per response.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listScheduledPickups(carrierId?: string, warehouseId?: string, createdAtStart?: string, createdAtEnd?: string, page?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetPickupsResponseBody>>;
    /**
     * Schedule a package pickup with a carrier
     * @summary Schedule a Pickup
     * @param {SchedulePickupRequestBody} schedulePickupRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    schedulePickup(schedulePickupRequestBody: SchedulePickupRequestBody, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SchedulePickupResponseBody>>;
};
/**
 * PackagePickupsApi - factory interface
 * @export
 */
export declare const PackagePickupsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Delete a previously-scheduled pickup by ID
     * @summary Delete a Scheduled Pickup
     * @param {string} pickupId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteScheduledPickup(pickupId: string, options?: any): AxiosPromise<DeletePickupByIdResponseBody>;
    /**
     * Get Pickup By ID
     * @summary Get Pickup By ID
     * @param {string} pickupId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getPickupById(pickupId: string, options?: any): AxiosPromise<GetPickupByIdResponseBody>;
    /**
     * List all pickups that have been scheduled for this carrier
     * @summary List Scheduled Pickups
     * @param {string} [carrierId] Carrier ID
     * @param {string} [warehouseId] Warehouse ID
     * @param {string} [createdAtStart] Only return scheduled pickups that were created on or after a specific date/time
     * @param {string} [createdAtEnd] Only return scheduled pickups that were created on or before a specific date/time
     * @param {number} [page] Return a specific page of results. Defaults to the first page. If set to a number that\&#39;s greater than the number of pages of results, an empty page is returned.
     * @param {number} [pageSize] The number of results to return per response.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listScheduledPickups(carrierId?: string, warehouseId?: string, createdAtStart?: string, createdAtEnd?: string, page?: number, pageSize?: number, options?: any): AxiosPromise<GetPickupsResponseBody>;
    /**
     * Schedule a package pickup with a carrier
     * @summary Schedule a Pickup
     * @param {SchedulePickupRequestBody} schedulePickupRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    schedulePickup(schedulePickupRequestBody: SchedulePickupRequestBody, options?: any): AxiosPromise<SchedulePickupResponseBody>;
};
/**
 * PackagePickupsApi - object-oriented interface
 * @export
 * @class PackagePickupsApi
 * @extends {BaseAPI}
 */
export declare class PackagePickupsApi extends BaseAPI {
    /**
     * Delete a previously-scheduled pickup by ID
     * @summary Delete a Scheduled Pickup
     * @param {string} pickupId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PackagePickupsApi
     */
    deleteScheduledPickup(pickupId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<DeletePickupByIdResponseBody, any>>;
    /**
     * Get Pickup By ID
     * @summary Get Pickup By ID
     * @param {string} pickupId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PackagePickupsApi
     */
    getPickupById(pickupId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetPickupByIdResponseBody, any>>;
    /**
     * List all pickups that have been scheduled for this carrier
     * @summary List Scheduled Pickups
     * @param {string} [carrierId] Carrier ID
     * @param {string} [warehouseId] Warehouse ID
     * @param {string} [createdAtStart] Only return scheduled pickups that were created on or after a specific date/time
     * @param {string} [createdAtEnd] Only return scheduled pickups that were created on or before a specific date/time
     * @param {number} [page] Return a specific page of results. Defaults to the first page. If set to a number that\&#39;s greater than the number of pages of results, an empty page is returned.
     * @param {number} [pageSize] The number of results to return per response.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PackagePickupsApi
     */
    listScheduledPickups(carrierId?: string, warehouseId?: string, createdAtStart?: string, createdAtEnd?: string, page?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetPickupsResponseBody, any>>;
    /**
     * Schedule a package pickup with a carrier
     * @summary Schedule a Pickup
     * @param {SchedulePickupRequestBody} schedulePickupRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PackagePickupsApi
     */
    schedulePickup(schedulePickupRequestBody: SchedulePickupRequestBody, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<SchedulePickupResponseBody, any>>;
}
/**
 * PackageTypesApi - axios parameter creator
 * @export
 */
export declare const PackageTypesApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Create a custom package type to better assist in getting accurate rate estimates
     * @summary Create Custom Package Type
     * @param {CreatePackageTypeRequestBody} createPackageTypeRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createPackageType: (createPackageTypeRequestBody: CreatePackageTypeRequestBody, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Delete a custom package using the ID
     * @summary Delete A Custom Package By ID
     * @param {string} packageId Package ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deletePackageType: (packageId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get Custom Package Type by ID
     * @summary Get Custom Package Type By ID
     * @param {string} packageId Package ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getPackageTypeById: (packageId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * List the custom package types associated with the account
     * @summary List Custom Package Types
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listPackageTypes: (options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Update the custom package type object by ID
     * @summary Update Custom Package Type By ID
     * @param {string} packageId Package ID
     * @param {UpdatePackageTypeRequestBody} updatePackageTypeRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updatePackageType: (packageId: string, updatePackageTypeRequestBody: UpdatePackageTypeRequestBody, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * PackageTypesApi - functional programming interface
 * @export
 */
export declare const PackageTypesApiFp: (configuration?: Configuration) => {
    /**
     * Create a custom package type to better assist in getting accurate rate estimates
     * @summary Create Custom Package Type
     * @param {CreatePackageTypeRequestBody} createPackageTypeRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createPackageType(createPackageTypeRequestBody: CreatePackageTypeRequestBody, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CreatePackageTypeResponseBody>>;
    /**
     * Delete a custom package using the ID
     * @summary Delete A Custom Package By ID
     * @param {string} packageId Package ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deletePackageType(packageId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>>;
    /**
     * Get Custom Package Type by ID
     * @summary Get Custom Package Type By ID
     * @param {string} packageId Package ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getPackageTypeById(packageId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetPackageTypeByIdResponseBody>>;
    /**
     * List the custom package types associated with the account
     * @summary List Custom Package Types
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listPackageTypes(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ListPackageTypesResponseBody>>;
    /**
     * Update the custom package type object by ID
     * @summary Update Custom Package Type By ID
     * @param {string} packageId Package ID
     * @param {UpdatePackageTypeRequestBody} updatePackageTypeRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updatePackageType(packageId: string, updatePackageTypeRequestBody: UpdatePackageTypeRequestBody, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>>;
};
/**
 * PackageTypesApi - factory interface
 * @export
 */
export declare const PackageTypesApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Create a custom package type to better assist in getting accurate rate estimates
     * @summary Create Custom Package Type
     * @param {CreatePackageTypeRequestBody} createPackageTypeRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createPackageType(createPackageTypeRequestBody: CreatePackageTypeRequestBody, options?: any): AxiosPromise<CreatePackageTypeResponseBody>;
    /**
     * Delete a custom package using the ID
     * @summary Delete A Custom Package By ID
     * @param {string} packageId Package ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deletePackageType(packageId: string, options?: any): AxiosPromise<string>;
    /**
     * Get Custom Package Type by ID
     * @summary Get Custom Package Type By ID
     * @param {string} packageId Package ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getPackageTypeById(packageId: string, options?: any): AxiosPromise<GetPackageTypeByIdResponseBody>;
    /**
     * List the custom package types associated with the account
     * @summary List Custom Package Types
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listPackageTypes(options?: any): AxiosPromise<ListPackageTypesResponseBody>;
    /**
     * Update the custom package type object by ID
     * @summary Update Custom Package Type By ID
     * @param {string} packageId Package ID
     * @param {UpdatePackageTypeRequestBody} updatePackageTypeRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updatePackageType(packageId: string, updatePackageTypeRequestBody: UpdatePackageTypeRequestBody, options?: any): AxiosPromise<string>;
};
/**
 * PackageTypesApi - object-oriented interface
 * @export
 * @class PackageTypesApi
 * @extends {BaseAPI}
 */
export declare class PackageTypesApi extends BaseAPI {
    /**
     * Create a custom package type to better assist in getting accurate rate estimates
     * @summary Create Custom Package Type
     * @param {CreatePackageTypeRequestBody} createPackageTypeRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PackageTypesApi
     */
    createPackageType(createPackageTypeRequestBody: CreatePackageTypeRequestBody, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<CreatePackageTypeResponseBody, any>>;
    /**
     * Delete a custom package using the ID
     * @summary Delete A Custom Package By ID
     * @param {string} packageId Package ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PackageTypesApi
     */
    deletePackageType(packageId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<string, any>>;
    /**
     * Get Custom Package Type by ID
     * @summary Get Custom Package Type By ID
     * @param {string} packageId Package ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PackageTypesApi
     */
    getPackageTypeById(packageId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetPackageTypeByIdResponseBody, any>>;
    /**
     * List the custom package types associated with the account
     * @summary List Custom Package Types
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PackageTypesApi
     */
    listPackageTypes(options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<ListPackageTypesResponseBody, any>>;
    /**
     * Update the custom package type object by ID
     * @summary Update Custom Package Type By ID
     * @param {string} packageId Package ID
     * @param {UpdatePackageTypeRequestBody} updatePackageTypeRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PackageTypesApi
     */
    updatePackageType(packageId: string, updatePackageTypeRequestBody: UpdatePackageTypeRequestBody, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<string, any>>;
}
/**
 * RatesApi - axios parameter creator
 * @export
 */
export declare const RatesApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * It\'s not uncommon that you want to give your customer the choice between whether they want to ship the fastest, cheapest, or the most trusted route. Most companies don\'t solely ship things using a single shipping option; so we provide functionality to show you all your options!
     * @summary Get Shipping Rates
     * @param {CalculateRatesRequestBody} calculateRatesRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    calculateRates: (calculateRatesRequestBody: CalculateRatesRequestBody, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get Bulk Shipment Rates
     * @summary Get Bulk Rates
     * @param {CompareBulkRatesRequestBody} compareBulkRatesRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    compareBulkRates: (compareBulkRatesRequestBody: CompareBulkRatesRequestBody, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get Rate Estimates
     * @summary Estimate Rates
     * @param {EstimateRatesRequestBody} estimateRatesRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    estimateRates: (estimateRatesRequestBody: EstimateRatesRequestBody, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Retrieve a previously queried rate by its ID
     * @summary Get Rate By ID
     * @param {string} rateId Rate ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getRateById: (rateId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * RatesApi - functional programming interface
 * @export
 */
export declare const RatesApiFp: (configuration?: Configuration) => {
    /**
     * It\'s not uncommon that you want to give your customer the choice between whether they want to ship the fastest, cheapest, or the most trusted route. Most companies don\'t solely ship things using a single shipping option; so we provide functionality to show you all your options!
     * @summary Get Shipping Rates
     * @param {CalculateRatesRequestBody} calculateRatesRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    calculateRates(calculateRatesRequestBody: CalculateRatesRequestBody, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CalculateRatesResponseBody>>;
    /**
     * Get Bulk Shipment Rates
     * @summary Get Bulk Rates
     * @param {CompareBulkRatesRequestBody} compareBulkRatesRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    compareBulkRates(compareBulkRatesRequestBody: CompareBulkRatesRequestBody, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<BulkRate>>>;
    /**
     * Get Rate Estimates
     * @summary Estimate Rates
     * @param {EstimateRatesRequestBody} estimateRatesRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    estimateRates(estimateRatesRequestBody: EstimateRatesRequestBody, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<RateEstimate>>>;
    /**
     * Retrieve a previously queried rate by its ID
     * @summary Get Rate By ID
     * @param {string} rateId Rate ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getRateById(rateId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetRateByIdResponseBody>>;
};
/**
 * RatesApi - factory interface
 * @export
 */
export declare const RatesApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * It\'s not uncommon that you want to give your customer the choice between whether they want to ship the fastest, cheapest, or the most trusted route. Most companies don\'t solely ship things using a single shipping option; so we provide functionality to show you all your options!
     * @summary Get Shipping Rates
     * @param {CalculateRatesRequestBody} calculateRatesRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    calculateRates(calculateRatesRequestBody: CalculateRatesRequestBody, options?: any): AxiosPromise<CalculateRatesResponseBody>;
    /**
     * Get Bulk Shipment Rates
     * @summary Get Bulk Rates
     * @param {CompareBulkRatesRequestBody} compareBulkRatesRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    compareBulkRates(compareBulkRatesRequestBody: CompareBulkRatesRequestBody, options?: any): AxiosPromise<Array<BulkRate>>;
    /**
     * Get Rate Estimates
     * @summary Estimate Rates
     * @param {EstimateRatesRequestBody} estimateRatesRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    estimateRates(estimateRatesRequestBody: EstimateRatesRequestBody, options?: any): AxiosPromise<Array<RateEstimate>>;
    /**
     * Retrieve a previously queried rate by its ID
     * @summary Get Rate By ID
     * @param {string} rateId Rate ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getRateById(rateId: string, options?: any): AxiosPromise<GetRateByIdResponseBody>;
};
/**
 * RatesApi - object-oriented interface
 * @export
 * @class RatesApi
 * @extends {BaseAPI}
 */
export declare class RatesApi extends BaseAPI {
    /**
     * It\'s not uncommon that you want to give your customer the choice between whether they want to ship the fastest, cheapest, or the most trusted route. Most companies don\'t solely ship things using a single shipping option; so we provide functionality to show you all your options!
     * @summary Get Shipping Rates
     * @param {CalculateRatesRequestBody} calculateRatesRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RatesApi
     */
    calculateRates(calculateRatesRequestBody: CalculateRatesRequestBody, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<CalculateRatesResponseBody, any>>;
    /**
     * Get Bulk Shipment Rates
     * @summary Get Bulk Rates
     * @param {CompareBulkRatesRequestBody} compareBulkRatesRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RatesApi
     */
    compareBulkRates(compareBulkRatesRequestBody: CompareBulkRatesRequestBody, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<BulkRate[], any>>;
    /**
     * Get Rate Estimates
     * @summary Estimate Rates
     * @param {EstimateRatesRequestBody} estimateRatesRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RatesApi
     */
    estimateRates(estimateRatesRequestBody: EstimateRatesRequestBody, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<RateEstimate[], any>>;
    /**
     * Retrieve a previously queried rate by its ID
     * @summary Get Rate By ID
     * @param {string} rateId Rate ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RatesApi
     */
    getRateById(rateId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetRateByIdResponseBody, any>>;
}
/**
 * ServicePointsApi - axios parameter creator
 * @export
 */
export declare const ServicePointsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Returns a carrier service point by using the service_point_id
     * @summary Get Service Point By ID
     * @param {string} carrierCode Carrier code
     * @param {string} countryCode A two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1)
     * @param {string} servicePointId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    servicePointsGetById: (carrierCode: string, countryCode: string, servicePointId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * List carrier service points by location
     * @summary List Service Points
     * @param {GetServicePointsRequest} getServicePointsRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    servicePointsList: (getServicePointsRequest: GetServicePointsRequest, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * ServicePointsApi - functional programming interface
 * @export
 */
export declare const ServicePointsApiFp: (configuration?: Configuration) => {
    /**
     * Returns a carrier service point by using the service_point_id
     * @summary Get Service Point By ID
     * @param {string} carrierCode Carrier code
     * @param {string} countryCode A two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1)
     * @param {string} servicePointId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    servicePointsGetById(carrierCode: string, countryCode: string, servicePointId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetServicePointByIdResponseBody>>;
    /**
     * List carrier service points by location
     * @summary List Service Points
     * @param {GetServicePointsRequest} getServicePointsRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    servicePointsList(getServicePointsRequest: GetServicePointsRequest, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ListServicePointsResponseBody>>;
};
/**
 * ServicePointsApi - factory interface
 * @export
 */
export declare const ServicePointsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Returns a carrier service point by using the service_point_id
     * @summary Get Service Point By ID
     * @param {string} carrierCode Carrier code
     * @param {string} countryCode A two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1)
     * @param {string} servicePointId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    servicePointsGetById(carrierCode: string, countryCode: string, servicePointId: string, options?: any): AxiosPromise<GetServicePointByIdResponseBody>;
    /**
     * List carrier service points by location
     * @summary List Service Points
     * @param {GetServicePointsRequest} getServicePointsRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    servicePointsList(getServicePointsRequest: GetServicePointsRequest, options?: any): AxiosPromise<ListServicePointsResponseBody>;
};
/**
 * ServicePointsApi - object-oriented interface
 * @export
 * @class ServicePointsApi
 * @extends {BaseAPI}
 */
export declare class ServicePointsApi extends BaseAPI {
    /**
     * Returns a carrier service point by using the service_point_id
     * @summary Get Service Point By ID
     * @param {string} carrierCode Carrier code
     * @param {string} countryCode A two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1)
     * @param {string} servicePointId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ServicePointsApi
     */
    servicePointsGetById(carrierCode: string, countryCode: string, servicePointId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetServicePointByIdResponseBody, any>>;
    /**
     * List carrier service points by location
     * @summary List Service Points
     * @param {GetServicePointsRequest} getServicePointsRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ServicePointsApi
     */
    servicePointsList(getServicePointsRequest: GetServicePointsRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<ListServicePointsResponseBody, any>>;
}
/**
 * ShipmentsApi - axios parameter creator
 * @export
 */
export declare const ShipmentsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Mark a shipment cancelled, if it is no longer needed or being used by your organized. Any label associated with the shipment needs to be voided first An example use case would be if a batch label creation job is going to run at a set time and only queries `pending` shipments. Marking a shipment as cancelled would remove it from this process
     * @summary Cancel a Shipment
     * @param {string} shipmentId Shipment ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    cancelShipments: (shipmentId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Create one or multiple shipments.
     * @summary Create Shipments
     * @param {CreateShipmentsRequestBody} createShipmentsRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createShipments: (createShipmentsRequestBody: CreateShipmentsRequestBody, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Query Shipments created using your own custom ID convention using this endpint
     * @summary Get Shipment By External ID
     * @param {string} externalShipmentId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getShipmentByExternalId: (externalShipmentId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get an individual shipment based on its ID
     * @summary Get Shipment By ID
     * @param {string} shipmentId Shipment ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getShipmentById: (shipmentId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get Rates for the shipment information associated with the shipment ID
     * @summary Get Shipment Rates
     * @param {string} shipmentId Shipment ID
     * @param {string} [createdAtStart] Used to create a filter for when a resource was created (ex. A shipment that was created after a certain time)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listShipmentRates: (shipmentId: string, createdAtStart?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get list of Shipments
     * @summary List Shipments
     * @param {ShipmentStatus} [shipmentStatus]
     * @param {string} [batchId] Batch ID
     * @param {string} [tag] Search for shipments based on the custom tag added to the shipment object
     * @param {string} [createdAtStart] Used to create a filter for when a resource was created (ex. A shipment that was created after a certain time)
     * @param {string} [createdAtEnd] Used to create a filter for when a resource was created, (ex. A shipment that was created before a certain time)
     * @param {string} [modifiedAtStart] Used to create a filter for when a resource was modified (ex. A shipment that was modified after a certain time)
     * @param {string} [modifiedAtEnd] Used to create a filter for when a resource was modified (ex. A shipment that was modified before a certain time)
     * @param {number} [page] Return a specific page of results. Defaults to the first page. If set to a number that\&#39;s greater than the number of pages of results, an empty page is returned.
     * @param {number} [pageSize] The number of results to return per response.
     * @param {string} [salesOrderId] Sales Order ID
     * @param {SortDir} [sortDir] Controls the sort order of the query.
     * @param {ShipmentsSortBy} [sortBy]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listShipments: (shipmentStatus?: ShipmentStatus, batchId?: string, tag?: string, createdAtStart?: string, createdAtEnd?: string, modifiedAtStart?: string, modifiedAtEnd?: string, page?: number, pageSize?: number, salesOrderId?: string, sortDir?: SortDir, sortBy?: ShipmentsSortBy, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * The shipment-recognition API makes it easy for you to extract shipping data from unstructured text, including people\'s names, addresses, package weights and dimensions, insurance and delivery requirements, and more.  Data often enters your system as unstructured text (for example: emails, SMS messages, support tickets, or other documents). ShipEngine\'s shipment-recognition API helps you extract meaningful, structured data from this unstructured text. The parsed shipment data is returned in the same structure that\'s used for other ShipEngine APIs, so you can easily use the parsed data to create a shipping label.  > **Note:** Shipment recognition is currently supported for the United States, Canada, Australia, New Zealand, the United Kingdom, and Ireland.
     * @summary Parse shipping info
     * @param {ParseShipmentRequestBody} parseShipmentRequestBody The only required field is &#x60;text&#x60;, which is the text to be parsed. You can optionally also provide a &#x60;shipment&#x60; containing any already-known values. For example, you probably already know the &#x60;ship_from&#x60; address, and you may also already know what carrier and service you want to use.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    parseShipment: (parseShipmentRequestBody: ParseShipmentRequestBody, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Add a tag to the shipment object
     * @summary Add Tag to Shipment
     * @param {string} shipmentId Shipment ID
     * @param {string} tagName
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    tagShipment: (shipmentId: string, tagName: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Remove an existing tag from the Shipment object
     * @summary Remove Tag from Shipment
     * @param {string} shipmentId Shipment ID
     * @param {string} tagName
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    untagShipment: (shipmentId: string, tagName: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Update a shipment object based on its ID
     * @summary Update Shipment By ID
     * @param {string} shipmentId Shipment ID
     * @param {UpdateShipmentRequestBody} updateShipmentRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateShipment: (shipmentId: string, updateShipmentRequestBody: UpdateShipmentRequestBody, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * ShipmentsApi - functional programming interface
 * @export
 */
export declare const ShipmentsApiFp: (configuration?: Configuration) => {
    /**
     * Mark a shipment cancelled, if it is no longer needed or being used by your organized. Any label associated with the shipment needs to be voided first An example use case would be if a batch label creation job is going to run at a set time and only queries `pending` shipments. Marking a shipment as cancelled would remove it from this process
     * @summary Cancel a Shipment
     * @param {string} shipmentId Shipment ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    cancelShipments(shipmentId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>>;
    /**
     * Create one or multiple shipments.
     * @summary Create Shipments
     * @param {CreateShipmentsRequestBody} createShipmentsRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createShipments(createShipmentsRequestBody: CreateShipmentsRequestBody, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CreateShipmentsResponseBody>>;
    /**
     * Query Shipments created using your own custom ID convention using this endpint
     * @summary Get Shipment By External ID
     * @param {string} externalShipmentId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getShipmentByExternalId(externalShipmentId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetShipmentByExternalIdResponseBody>>;
    /**
     * Get an individual shipment based on its ID
     * @summary Get Shipment By ID
     * @param {string} shipmentId Shipment ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getShipmentById(shipmentId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetShipmentByIdResponseBody>>;
    /**
     * Get Rates for the shipment information associated with the shipment ID
     * @summary Get Shipment Rates
     * @param {string} shipmentId Shipment ID
     * @param {string} [createdAtStart] Used to create a filter for when a resource was created (ex. A shipment that was created after a certain time)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listShipmentRates(shipmentId: string, createdAtStart?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ListShipmentRatesResponseBody>>;
    /**
     * Get list of Shipments
     * @summary List Shipments
     * @param {ShipmentStatus} [shipmentStatus]
     * @param {string} [batchId] Batch ID
     * @param {string} [tag] Search for shipments based on the custom tag added to the shipment object
     * @param {string} [createdAtStart] Used to create a filter for when a resource was created (ex. A shipment that was created after a certain time)
     * @param {string} [createdAtEnd] Used to create a filter for when a resource was created, (ex. A shipment that was created before a certain time)
     * @param {string} [modifiedAtStart] Used to create a filter for when a resource was modified (ex. A shipment that was modified after a certain time)
     * @param {string} [modifiedAtEnd] Used to create a filter for when a resource was modified (ex. A shipment that was modified before a certain time)
     * @param {number} [page] Return a specific page of results. Defaults to the first page. If set to a number that\&#39;s greater than the number of pages of results, an empty page is returned.
     * @param {number} [pageSize] The number of results to return per response.
     * @param {string} [salesOrderId] Sales Order ID
     * @param {SortDir} [sortDir] Controls the sort order of the query.
     * @param {ShipmentsSortBy} [sortBy]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listShipments(shipmentStatus?: ShipmentStatus, batchId?: string, tag?: string, createdAtStart?: string, createdAtEnd?: string, modifiedAtStart?: string, modifiedAtEnd?: string, page?: number, pageSize?: number, salesOrderId?: string, sortDir?: SortDir, sortBy?: ShipmentsSortBy, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ListShipmentsResponseBody>>;
    /**
     * The shipment-recognition API makes it easy for you to extract shipping data from unstructured text, including people\'s names, addresses, package weights and dimensions, insurance and delivery requirements, and more.  Data often enters your system as unstructured text (for example: emails, SMS messages, support tickets, or other documents). ShipEngine\'s shipment-recognition API helps you extract meaningful, structured data from this unstructured text. The parsed shipment data is returned in the same structure that\'s used for other ShipEngine APIs, so you can easily use the parsed data to create a shipping label.  > **Note:** Shipment recognition is currently supported for the United States, Canada, Australia, New Zealand, the United Kingdom, and Ireland.
     * @summary Parse shipping info
     * @param {ParseShipmentRequestBody} parseShipmentRequestBody The only required field is &#x60;text&#x60;, which is the text to be parsed. You can optionally also provide a &#x60;shipment&#x60; containing any already-known values. For example, you probably already know the &#x60;ship_from&#x60; address, and you may also already know what carrier and service you want to use.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    parseShipment(parseShipmentRequestBody: ParseShipmentRequestBody, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ParseShipmentResponseBody>>;
    /**
     * Add a tag to the shipment object
     * @summary Add Tag to Shipment
     * @param {string} shipmentId Shipment ID
     * @param {string} tagName
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    tagShipment(shipmentId: string, tagName: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<TagShipmentResponseBody>>;
    /**
     * Remove an existing tag from the Shipment object
     * @summary Remove Tag from Shipment
     * @param {string} shipmentId Shipment ID
     * @param {string} tagName
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    untagShipment(shipmentId: string, tagName: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>>;
    /**
     * Update a shipment object based on its ID
     * @summary Update Shipment By ID
     * @param {string} shipmentId Shipment ID
     * @param {UpdateShipmentRequestBody} updateShipmentRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateShipment(shipmentId: string, updateShipmentRequestBody: UpdateShipmentRequestBody, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<UpdateShipmentResponseBody>>;
};
/**
 * ShipmentsApi - factory interface
 * @export
 */
export declare const ShipmentsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Mark a shipment cancelled, if it is no longer needed or being used by your organized. Any label associated with the shipment needs to be voided first An example use case would be if a batch label creation job is going to run at a set time and only queries `pending` shipments. Marking a shipment as cancelled would remove it from this process
     * @summary Cancel a Shipment
     * @param {string} shipmentId Shipment ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    cancelShipments(shipmentId: string, options?: any): AxiosPromise<string>;
    /**
     * Create one or multiple shipments.
     * @summary Create Shipments
     * @param {CreateShipmentsRequestBody} createShipmentsRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createShipments(createShipmentsRequestBody: CreateShipmentsRequestBody, options?: any): AxiosPromise<CreateShipmentsResponseBody>;
    /**
     * Query Shipments created using your own custom ID convention using this endpint
     * @summary Get Shipment By External ID
     * @param {string} externalShipmentId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getShipmentByExternalId(externalShipmentId: string, options?: any): AxiosPromise<GetShipmentByExternalIdResponseBody>;
    /**
     * Get an individual shipment based on its ID
     * @summary Get Shipment By ID
     * @param {string} shipmentId Shipment ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getShipmentById(shipmentId: string, options?: any): AxiosPromise<GetShipmentByIdResponseBody>;
    /**
     * Get Rates for the shipment information associated with the shipment ID
     * @summary Get Shipment Rates
     * @param {string} shipmentId Shipment ID
     * @param {string} [createdAtStart] Used to create a filter for when a resource was created (ex. A shipment that was created after a certain time)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listShipmentRates(shipmentId: string, createdAtStart?: string, options?: any): AxiosPromise<ListShipmentRatesResponseBody>;
    /**
     * Get list of Shipments
     * @summary List Shipments
     * @param {ShipmentStatus} [shipmentStatus]
     * @param {string} [batchId] Batch ID
     * @param {string} [tag] Search for shipments based on the custom tag added to the shipment object
     * @param {string} [createdAtStart] Used to create a filter for when a resource was created (ex. A shipment that was created after a certain time)
     * @param {string} [createdAtEnd] Used to create a filter for when a resource was created, (ex. A shipment that was created before a certain time)
     * @param {string} [modifiedAtStart] Used to create a filter for when a resource was modified (ex. A shipment that was modified after a certain time)
     * @param {string} [modifiedAtEnd] Used to create a filter for when a resource was modified (ex. A shipment that was modified before a certain time)
     * @param {number} [page] Return a specific page of results. Defaults to the first page. If set to a number that\&#39;s greater than the number of pages of results, an empty page is returned.
     * @param {number} [pageSize] The number of results to return per response.
     * @param {string} [salesOrderId] Sales Order ID
     * @param {SortDir} [sortDir] Controls the sort order of the query.
     * @param {ShipmentsSortBy} [sortBy]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listShipments(shipmentStatus?: ShipmentStatus, batchId?: string, tag?: string, createdAtStart?: string, createdAtEnd?: string, modifiedAtStart?: string, modifiedAtEnd?: string, page?: number, pageSize?: number, salesOrderId?: string, sortDir?: SortDir, sortBy?: ShipmentsSortBy, options?: any): AxiosPromise<ListShipmentsResponseBody>;
    /**
     * The shipment-recognition API makes it easy for you to extract shipping data from unstructured text, including people\'s names, addresses, package weights and dimensions, insurance and delivery requirements, and more.  Data often enters your system as unstructured text (for example: emails, SMS messages, support tickets, or other documents). ShipEngine\'s shipment-recognition API helps you extract meaningful, structured data from this unstructured text. The parsed shipment data is returned in the same structure that\'s used for other ShipEngine APIs, so you can easily use the parsed data to create a shipping label.  > **Note:** Shipment recognition is currently supported for the United States, Canada, Australia, New Zealand, the United Kingdom, and Ireland.
     * @summary Parse shipping info
     * @param {ParseShipmentRequestBody} parseShipmentRequestBody The only required field is &#x60;text&#x60;, which is the text to be parsed. You can optionally also provide a &#x60;shipment&#x60; containing any already-known values. For example, you probably already know the &#x60;ship_from&#x60; address, and you may also already know what carrier and service you want to use.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    parseShipment(parseShipmentRequestBody: ParseShipmentRequestBody, options?: any): AxiosPromise<ParseShipmentResponseBody>;
    /**
     * Add a tag to the shipment object
     * @summary Add Tag to Shipment
     * @param {string} shipmentId Shipment ID
     * @param {string} tagName
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    tagShipment(shipmentId: string, tagName: string, options?: any): AxiosPromise<TagShipmentResponseBody>;
    /**
     * Remove an existing tag from the Shipment object
     * @summary Remove Tag from Shipment
     * @param {string} shipmentId Shipment ID
     * @param {string} tagName
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    untagShipment(shipmentId: string, tagName: string, options?: any): AxiosPromise<string>;
    /**
     * Update a shipment object based on its ID
     * @summary Update Shipment By ID
     * @param {string} shipmentId Shipment ID
     * @param {UpdateShipmentRequestBody} updateShipmentRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateShipment(shipmentId: string, updateShipmentRequestBody: UpdateShipmentRequestBody, options?: any): AxiosPromise<UpdateShipmentResponseBody>;
};
/**
 * ShipmentsApi - object-oriented interface
 * @export
 * @class ShipmentsApi
 * @extends {BaseAPI}
 */
export declare class ShipmentsApi extends BaseAPI {
    /**
     * Mark a shipment cancelled, if it is no longer needed or being used by your organized. Any label associated with the shipment needs to be voided first An example use case would be if a batch label creation job is going to run at a set time and only queries `pending` shipments. Marking a shipment as cancelled would remove it from this process
     * @summary Cancel a Shipment
     * @param {string} shipmentId Shipment ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ShipmentsApi
     */
    cancelShipments(shipmentId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<string, any>>;
    /**
     * Create one or multiple shipments.
     * @summary Create Shipments
     * @param {CreateShipmentsRequestBody} createShipmentsRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ShipmentsApi
     */
    createShipments(createShipmentsRequestBody: CreateShipmentsRequestBody, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<CreateShipmentsResponseBody, any>>;
    /**
     * Query Shipments created using your own custom ID convention using this endpint
     * @summary Get Shipment By External ID
     * @param {string} externalShipmentId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ShipmentsApi
     */
    getShipmentByExternalId(externalShipmentId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetShipmentByExternalIdResponseBody, any>>;
    /**
     * Get an individual shipment based on its ID
     * @summary Get Shipment By ID
     * @param {string} shipmentId Shipment ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ShipmentsApi
     */
    getShipmentById(shipmentId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetShipmentByIdResponseBody, any>>;
    /**
     * Get Rates for the shipment information associated with the shipment ID
     * @summary Get Shipment Rates
     * @param {string} shipmentId Shipment ID
     * @param {string} [createdAtStart] Used to create a filter for when a resource was created (ex. A shipment that was created after a certain time)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ShipmentsApi
     */
    listShipmentRates(shipmentId: string, createdAtStart?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<ListShipmentRatesResponseBody, any>>;
    /**
     * Get list of Shipments
     * @summary List Shipments
     * @param {ShipmentStatus} [shipmentStatus]
     * @param {string} [batchId] Batch ID
     * @param {string} [tag] Search for shipments based on the custom tag added to the shipment object
     * @param {string} [createdAtStart] Used to create a filter for when a resource was created (ex. A shipment that was created after a certain time)
     * @param {string} [createdAtEnd] Used to create a filter for when a resource was created, (ex. A shipment that was created before a certain time)
     * @param {string} [modifiedAtStart] Used to create a filter for when a resource was modified (ex. A shipment that was modified after a certain time)
     * @param {string} [modifiedAtEnd] Used to create a filter for when a resource was modified (ex. A shipment that was modified before a certain time)
     * @param {number} [page] Return a specific page of results. Defaults to the first page. If set to a number that\&#39;s greater than the number of pages of results, an empty page is returned.
     * @param {number} [pageSize] The number of results to return per response.
     * @param {string} [salesOrderId] Sales Order ID
     * @param {SortDir} [sortDir] Controls the sort order of the query.
     * @param {ShipmentsSortBy} [sortBy]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ShipmentsApi
     */
    listShipments(shipmentStatus?: ShipmentStatus, batchId?: string, tag?: string, createdAtStart?: string, createdAtEnd?: string, modifiedAtStart?: string, modifiedAtEnd?: string, page?: number, pageSize?: number, salesOrderId?: string, sortDir?: SortDir, sortBy?: ShipmentsSortBy, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<ListShipmentsResponseBody, any>>;
    /**
     * The shipment-recognition API makes it easy for you to extract shipping data from unstructured text, including people\'s names, addresses, package weights and dimensions, insurance and delivery requirements, and more.  Data often enters your system as unstructured text (for example: emails, SMS messages, support tickets, or other documents). ShipEngine\'s shipment-recognition API helps you extract meaningful, structured data from this unstructured text. The parsed shipment data is returned in the same structure that\'s used for other ShipEngine APIs, so you can easily use the parsed data to create a shipping label.  > **Note:** Shipment recognition is currently supported for the United States, Canada, Australia, New Zealand, the United Kingdom, and Ireland.
     * @summary Parse shipping info
     * @param {ParseShipmentRequestBody} parseShipmentRequestBody The only required field is &#x60;text&#x60;, which is the text to be parsed. You can optionally also provide a &#x60;shipment&#x60; containing any already-known values. For example, you probably already know the &#x60;ship_from&#x60; address, and you may also already know what carrier and service you want to use.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ShipmentsApi
     */
    parseShipment(parseShipmentRequestBody: ParseShipmentRequestBody, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<ParseShipmentResponseBody, any>>;
    /**
     * Add a tag to the shipment object
     * @summary Add Tag to Shipment
     * @param {string} shipmentId Shipment ID
     * @param {string} tagName
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ShipmentsApi
     */
    tagShipment(shipmentId: string, tagName: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<TagShipmentResponseBody, any>>;
    /**
     * Remove an existing tag from the Shipment object
     * @summary Remove Tag from Shipment
     * @param {string} shipmentId Shipment ID
     * @param {string} tagName
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ShipmentsApi
     */
    untagShipment(shipmentId: string, tagName: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<string, any>>;
    /**
     * Update a shipment object based on its ID
     * @summary Update Shipment By ID
     * @param {string} shipmentId Shipment ID
     * @param {UpdateShipmentRequestBody} updateShipmentRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ShipmentsApi
     */
    updateShipment(shipmentId: string, updateShipmentRequestBody: UpdateShipmentRequestBody, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<UpdateShipmentResponseBody, any>>;
}
/**
 * TagsApi - axios parameter creator
 * @export
 */
export declare const TagsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Create a new Tag for customizing how you track your shipments
     * @summary Create a New Tag
     * @param {string} tagName
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createTag: (tagName: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Delete a tag that is no longer needed
     * @summary Delete Tag
     * @param {string} tagName
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteTag: (tagName: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get a list of all tags associated with an account.
     * @summary Get Tags
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listTags: (options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Change a tag name while still keeping the relevant shipments attached to it
     * @summary Update Tag Name
     * @param {string} tagName
     * @param {string} newTagName
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    renameTag: (tagName: string, newTagName: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * TagsApi - functional programming interface
 * @export
 */
export declare const TagsApiFp: (configuration?: Configuration) => {
    /**
     * Create a new Tag for customizing how you track your shipments
     * @summary Create a New Tag
     * @param {string} tagName
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createTag(tagName: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CreateTagResponseBody>>;
    /**
     * Delete a tag that is no longer needed
     * @summary Delete Tag
     * @param {string} tagName
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteTag(tagName: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>>;
    /**
     * Get a list of all tags associated with an account.
     * @summary Get Tags
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listTags(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ListTagsResponseBody>>;
    /**
     * Change a tag name while still keeping the relevant shipments attached to it
     * @summary Update Tag Name
     * @param {string} tagName
     * @param {string} newTagName
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    renameTag(tagName: string, newTagName: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>>;
};
/**
 * TagsApi - factory interface
 * @export
 */
export declare const TagsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Create a new Tag for customizing how you track your shipments
     * @summary Create a New Tag
     * @param {string} tagName
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createTag(tagName: string, options?: any): AxiosPromise<CreateTagResponseBody>;
    /**
     * Delete a tag that is no longer needed
     * @summary Delete Tag
     * @param {string} tagName
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteTag(tagName: string, options?: any): AxiosPromise<string>;
    /**
     * Get a list of all tags associated with an account.
     * @summary Get Tags
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listTags(options?: any): AxiosPromise<ListTagsResponseBody>;
    /**
     * Change a tag name while still keeping the relevant shipments attached to it
     * @summary Update Tag Name
     * @param {string} tagName
     * @param {string} newTagName
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    renameTag(tagName: string, newTagName: string, options?: any): AxiosPromise<string>;
};
/**
 * TagsApi - object-oriented interface
 * @export
 * @class TagsApi
 * @extends {BaseAPI}
 */
export declare class TagsApi extends BaseAPI {
    /**
     * Create a new Tag for customizing how you track your shipments
     * @summary Create a New Tag
     * @param {string} tagName
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TagsApi
     */
    createTag(tagName: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<CreateTagResponseBody, any>>;
    /**
     * Delete a tag that is no longer needed
     * @summary Delete Tag
     * @param {string} tagName
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TagsApi
     */
    deleteTag(tagName: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<string, any>>;
    /**
     * Get a list of all tags associated with an account.
     * @summary Get Tags
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TagsApi
     */
    listTags(options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<ListTagsResponseBody, any>>;
    /**
     * Change a tag name while still keeping the relevant shipments attached to it
     * @summary Update Tag Name
     * @param {string} tagName
     * @param {string} newTagName
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TagsApi
     */
    renameTag(tagName: string, newTagName: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<string, any>>;
}
/**
 * TokensApi - axios parameter creator
 * @export
 */
export declare const TokensApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * This endpoint returns a token that can be passed to an application for authorized access.  The lifetime of this token is 10 seconds.
     * @summary Get Ephemeral Token
     * @param {Redirect} [redirect] Include a redirect url to the application formatted with the ephemeral token.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    tokensGetEphemeralToken: (redirect?: Redirect, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * TokensApi - functional programming interface
 * @export
 */
export declare const TokensApiFp: (configuration?: Configuration) => {
    /**
     * This endpoint returns a token that can be passed to an application for authorized access.  The lifetime of this token is 10 seconds.
     * @summary Get Ephemeral Token
     * @param {Redirect} [redirect] Include a redirect url to the application formatted with the ephemeral token.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    tokensGetEphemeralToken(redirect?: Redirect, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<TokensGetEphemeralTokenResponseBodyYaml>>;
};
/**
 * TokensApi - factory interface
 * @export
 */
export declare const TokensApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * This endpoint returns a token that can be passed to an application for authorized access.  The lifetime of this token is 10 seconds.
     * @summary Get Ephemeral Token
     * @param {Redirect} [redirect] Include a redirect url to the application formatted with the ephemeral token.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    tokensGetEphemeralToken(redirect?: Redirect, options?: any): AxiosPromise<TokensGetEphemeralTokenResponseBodyYaml>;
};
/**
 * TokensApi - object-oriented interface
 * @export
 * @class TokensApi
 * @extends {BaseAPI}
 */
export declare class TokensApi extends BaseAPI {
    /**
     * This endpoint returns a token that can be passed to an application for authorized access.  The lifetime of this token is 10 seconds.
     * @summary Get Ephemeral Token
     * @param {Redirect} [redirect] Include a redirect url to the application formatted with the ephemeral token.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TokensApi
     */
    tokensGetEphemeralToken(redirect?: Redirect, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<TokensGetEphemeralTokenResponseBodyYaml, any>>;
}
/**
 * TrackingApi - axios parameter creator
 * @export
 */
export declare const TrackingApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Retrieve package tracking information
     * @summary Get Tracking Information
     * @param {string} [carrierCode] A [shipping carrier](https://www.shipengine.com/docs/carriers/setup/), such as &#x60;fedex&#x60;, &#x60;dhl_express&#x60;, &#x60;stamps_com&#x60;, etc.
     * @param {string} [trackingNumber] The tracking number associated with a shipment
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getTrackingLog: (carrierCode?: string, trackingNumber?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Allows you to subscribe to tracking updates for a package. You specify the carrier_code and tracking_number of the package, and receive notifications via webhooks whenever the shipping status changes.
     * @summary Start Tracking a Package
     * @param {string} [carrierCode] A [shipping carrier](https://www.shipengine.com/docs/carriers/setup/), such as &#x60;fedex&#x60;, &#x60;dhl_express&#x60;, &#x60;stamps_com&#x60;, etc.
     * @param {string} [trackingNumber] The tracking number associated with a shipment
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    startTracking: (carrierCode?: string, trackingNumber?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Unsubscribe from tracking updates for a package.
     * @summary Stop Tracking a Package
     * @param {string} [carrierCode] A [shipping carrier](https://www.shipengine.com/docs/carriers/setup/), such as &#x60;fedex&#x60;, &#x60;dhl_express&#x60;, &#x60;stamps_com&#x60;, etc.
     * @param {string} [trackingNumber] The tracking number associated with a shipment
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    stopTracking: (carrierCode?: string, trackingNumber?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * TrackingApi - functional programming interface
 * @export
 */
export declare const TrackingApiFp: (configuration?: Configuration) => {
    /**
     * Retrieve package tracking information
     * @summary Get Tracking Information
     * @param {string} [carrierCode] A [shipping carrier](https://www.shipengine.com/docs/carriers/setup/), such as &#x60;fedex&#x60;, &#x60;dhl_express&#x60;, &#x60;stamps_com&#x60;, etc.
     * @param {string} [trackingNumber] The tracking number associated with a shipment
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getTrackingLog(carrierCode?: string, trackingNumber?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetTrackingLogResponseBody>>;
    /**
     * Allows you to subscribe to tracking updates for a package. You specify the carrier_code and tracking_number of the package, and receive notifications via webhooks whenever the shipping status changes.
     * @summary Start Tracking a Package
     * @param {string} [carrierCode] A [shipping carrier](https://www.shipengine.com/docs/carriers/setup/), such as &#x60;fedex&#x60;, &#x60;dhl_express&#x60;, &#x60;stamps_com&#x60;, etc.
     * @param {string} [trackingNumber] The tracking number associated with a shipment
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    startTracking(carrierCode?: string, trackingNumber?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>>;
    /**
     * Unsubscribe from tracking updates for a package.
     * @summary Stop Tracking a Package
     * @param {string} [carrierCode] A [shipping carrier](https://www.shipengine.com/docs/carriers/setup/), such as &#x60;fedex&#x60;, &#x60;dhl_express&#x60;, &#x60;stamps_com&#x60;, etc.
     * @param {string} [trackingNumber] The tracking number associated with a shipment
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    stopTracking(carrierCode?: string, trackingNumber?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>>;
};
/**
 * TrackingApi - factory interface
 * @export
 */
export declare const TrackingApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Retrieve package tracking information
     * @summary Get Tracking Information
     * @param {string} [carrierCode] A [shipping carrier](https://www.shipengine.com/docs/carriers/setup/), such as &#x60;fedex&#x60;, &#x60;dhl_express&#x60;, &#x60;stamps_com&#x60;, etc.
     * @param {string} [trackingNumber] The tracking number associated with a shipment
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getTrackingLog(carrierCode?: string, trackingNumber?: string, options?: any): AxiosPromise<GetTrackingLogResponseBody>;
    /**
     * Allows you to subscribe to tracking updates for a package. You specify the carrier_code and tracking_number of the package, and receive notifications via webhooks whenever the shipping status changes.
     * @summary Start Tracking a Package
     * @param {string} [carrierCode] A [shipping carrier](https://www.shipengine.com/docs/carriers/setup/), such as &#x60;fedex&#x60;, &#x60;dhl_express&#x60;, &#x60;stamps_com&#x60;, etc.
     * @param {string} [trackingNumber] The tracking number associated with a shipment
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    startTracking(carrierCode?: string, trackingNumber?: string, options?: any): AxiosPromise<string>;
    /**
     * Unsubscribe from tracking updates for a package.
     * @summary Stop Tracking a Package
     * @param {string} [carrierCode] A [shipping carrier](https://www.shipengine.com/docs/carriers/setup/), such as &#x60;fedex&#x60;, &#x60;dhl_express&#x60;, &#x60;stamps_com&#x60;, etc.
     * @param {string} [trackingNumber] The tracking number associated with a shipment
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    stopTracking(carrierCode?: string, trackingNumber?: string, options?: any): AxiosPromise<string>;
};
/**
 * TrackingApi - object-oriented interface
 * @export
 * @class TrackingApi
 * @extends {BaseAPI}
 */
export declare class TrackingApi extends BaseAPI {
    /**
     * Retrieve package tracking information
     * @summary Get Tracking Information
     * @param {string} [carrierCode] A [shipping carrier](https://www.shipengine.com/docs/carriers/setup/), such as &#x60;fedex&#x60;, &#x60;dhl_express&#x60;, &#x60;stamps_com&#x60;, etc.
     * @param {string} [trackingNumber] The tracking number associated with a shipment
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TrackingApi
     */
    getTrackingLog(carrierCode?: string, trackingNumber?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetTrackingLogResponseBody, any>>;
    /**
     * Allows you to subscribe to tracking updates for a package. You specify the carrier_code and tracking_number of the package, and receive notifications via webhooks whenever the shipping status changes.
     * @summary Start Tracking a Package
     * @param {string} [carrierCode] A [shipping carrier](https://www.shipengine.com/docs/carriers/setup/), such as &#x60;fedex&#x60;, &#x60;dhl_express&#x60;, &#x60;stamps_com&#x60;, etc.
     * @param {string} [trackingNumber] The tracking number associated with a shipment
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TrackingApi
     */
    startTracking(carrierCode?: string, trackingNumber?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<string, any>>;
    /**
     * Unsubscribe from tracking updates for a package.
     * @summary Stop Tracking a Package
     * @param {string} [carrierCode] A [shipping carrier](https://www.shipengine.com/docs/carriers/setup/), such as &#x60;fedex&#x60;, &#x60;dhl_express&#x60;, &#x60;stamps_com&#x60;, etc.
     * @param {string} [trackingNumber] The tracking number associated with a shipment
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TrackingApi
     */
    stopTracking(carrierCode?: string, trackingNumber?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<string, any>>;
}
/**
 * WarehousesApi - axios parameter creator
 * @export
 */
export declare const WarehousesApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Create a warehouse location that you can use to create shipping items by simply passing in the generated warehouse id. If the return address is not supplied in the request body then it is assumed that the origin address is the return address as well
     * @summary Create Warehouse
     * @param {CreateWarehouseRequestBody} createWarehouseRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createWarehouse: (createWarehouseRequestBody: CreateWarehouseRequestBody, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Delete a warehouse by ID
     * @summary Delete Warehouse By ID
     * @param {string} warehouseId Warehouse ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteWarehouse: (warehouseId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Retrieve warehouse data based on the warehouse ID
     * @summary Get Warehouse By Id
     * @param {string} warehouseId Warehouse ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getWarehouseById: (warehouseId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Retrieve a list of warehouses associated with this account.
     * @summary List Warehouses
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listWarehouses: (options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Update Warehouse object information
     * @summary Update Warehouse By Id
     * @param {string} warehouseId Warehouse ID
     * @param {UpdateWarehouseRequestBody} updateWarehouseRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateWarehouse: (warehouseId: string, updateWarehouseRequestBody: UpdateWarehouseRequestBody, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Update Warehouse settings object information
     * @summary Update Warehouse Settings
     * @param {string} warehouseId Warehouse ID
     * @param {UpdateWarehouseSettingsRequestBody} updateWarehouseSettingsRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateWarehouseSettings: (warehouseId: string, updateWarehouseSettingsRequestBody: UpdateWarehouseSettingsRequestBody, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * WarehousesApi - functional programming interface
 * @export
 */
export declare const WarehousesApiFp: (configuration?: Configuration) => {
    /**
     * Create a warehouse location that you can use to create shipping items by simply passing in the generated warehouse id. If the return address is not supplied in the request body then it is assumed that the origin address is the return address as well
     * @summary Create Warehouse
     * @param {CreateWarehouseRequestBody} createWarehouseRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createWarehouse(createWarehouseRequestBody: CreateWarehouseRequestBody, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CreateWarehouseResponseBody>>;
    /**
     * Delete a warehouse by ID
     * @summary Delete Warehouse By ID
     * @param {string} warehouseId Warehouse ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteWarehouse(warehouseId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>>;
    /**
     * Retrieve warehouse data based on the warehouse ID
     * @summary Get Warehouse By Id
     * @param {string} warehouseId Warehouse ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getWarehouseById(warehouseId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetWarehouseByIdResponseBody>>;
    /**
     * Retrieve a list of warehouses associated with this account.
     * @summary List Warehouses
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listWarehouses(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ListWarehousesResponseBody>>;
    /**
     * Update Warehouse object information
     * @summary Update Warehouse By Id
     * @param {string} warehouseId Warehouse ID
     * @param {UpdateWarehouseRequestBody} updateWarehouseRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateWarehouse(warehouseId: string, updateWarehouseRequestBody: UpdateWarehouseRequestBody, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>>;
    /**
     * Update Warehouse settings object information
     * @summary Update Warehouse Settings
     * @param {string} warehouseId Warehouse ID
     * @param {UpdateWarehouseSettingsRequestBody} updateWarehouseSettingsRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateWarehouseSettings(warehouseId: string, updateWarehouseSettingsRequestBody: UpdateWarehouseSettingsRequestBody, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>>;
};
/**
 * WarehousesApi - factory interface
 * @export
 */
export declare const WarehousesApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Create a warehouse location that you can use to create shipping items by simply passing in the generated warehouse id. If the return address is not supplied in the request body then it is assumed that the origin address is the return address as well
     * @summary Create Warehouse
     * @param {CreateWarehouseRequestBody} createWarehouseRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createWarehouse(createWarehouseRequestBody: CreateWarehouseRequestBody, options?: any): AxiosPromise<CreateWarehouseResponseBody>;
    /**
     * Delete a warehouse by ID
     * @summary Delete Warehouse By ID
     * @param {string} warehouseId Warehouse ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteWarehouse(warehouseId: string, options?: any): AxiosPromise<string>;
    /**
     * Retrieve warehouse data based on the warehouse ID
     * @summary Get Warehouse By Id
     * @param {string} warehouseId Warehouse ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getWarehouseById(warehouseId: string, options?: any): AxiosPromise<GetWarehouseByIdResponseBody>;
    /**
     * Retrieve a list of warehouses associated with this account.
     * @summary List Warehouses
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listWarehouses(options?: any): AxiosPromise<ListWarehousesResponseBody>;
    /**
     * Update Warehouse object information
     * @summary Update Warehouse By Id
     * @param {string} warehouseId Warehouse ID
     * @param {UpdateWarehouseRequestBody} updateWarehouseRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateWarehouse(warehouseId: string, updateWarehouseRequestBody: UpdateWarehouseRequestBody, options?: any): AxiosPromise<string>;
    /**
     * Update Warehouse settings object information
     * @summary Update Warehouse Settings
     * @param {string} warehouseId Warehouse ID
     * @param {UpdateWarehouseSettingsRequestBody} updateWarehouseSettingsRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateWarehouseSettings(warehouseId: string, updateWarehouseSettingsRequestBody: UpdateWarehouseSettingsRequestBody, options?: any): AxiosPromise<string>;
};
/**
 * WarehousesApi - object-oriented interface
 * @export
 * @class WarehousesApi
 * @extends {BaseAPI}
 */
export declare class WarehousesApi extends BaseAPI {
    /**
     * Create a warehouse location that you can use to create shipping items by simply passing in the generated warehouse id. If the return address is not supplied in the request body then it is assumed that the origin address is the return address as well
     * @summary Create Warehouse
     * @param {CreateWarehouseRequestBody} createWarehouseRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WarehousesApi
     */
    createWarehouse(createWarehouseRequestBody: CreateWarehouseRequestBody, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<CreateWarehouseResponseBody, any>>;
    /**
     * Delete a warehouse by ID
     * @summary Delete Warehouse By ID
     * @param {string} warehouseId Warehouse ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WarehousesApi
     */
    deleteWarehouse(warehouseId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<string, any>>;
    /**
     * Retrieve warehouse data based on the warehouse ID
     * @summary Get Warehouse By Id
     * @param {string} warehouseId Warehouse ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WarehousesApi
     */
    getWarehouseById(warehouseId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetWarehouseByIdResponseBody, any>>;
    /**
     * Retrieve a list of warehouses associated with this account.
     * @summary List Warehouses
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WarehousesApi
     */
    listWarehouses(options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<ListWarehousesResponseBody, any>>;
    /**
     * Update Warehouse object information
     * @summary Update Warehouse By Id
     * @param {string} warehouseId Warehouse ID
     * @param {UpdateWarehouseRequestBody} updateWarehouseRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WarehousesApi
     */
    updateWarehouse(warehouseId: string, updateWarehouseRequestBody: UpdateWarehouseRequestBody, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<string, any>>;
    /**
     * Update Warehouse settings object information
     * @summary Update Warehouse Settings
     * @param {string} warehouseId Warehouse ID
     * @param {UpdateWarehouseSettingsRequestBody} updateWarehouseSettingsRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WarehousesApi
     */
    updateWarehouseSettings(warehouseId: string, updateWarehouseSettingsRequestBody: UpdateWarehouseSettingsRequestBody, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<string, any>>;
}
/**
 * WebhooksApi - axios parameter creator
 * @export
 */
export declare const WebhooksApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Create a webook for specific events in the environment.
     * @summary Create a Webhook
     * @param {CreateWebhookRequestBody} createWebhookRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createWebhook: (createWebhookRequestBody: CreateWebhookRequestBody, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Delete a webhook
     * @summary Delete Webhook By ID
     * @param {string} webhookId Webhook ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteWebhook: (webhookId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Retrieve individual webhook by an ID
     * @summary Get Webhook By ID
     * @param {string} webhookId Webhook ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getWebhookById: (webhookId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * List all webhooks currently enabled for the account.
     * @summary List Webhooks
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listWebhooks: (options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Update the webhook url property
     * @summary Update a Webhook
     * @param {string} webhookId Webhook ID
     * @param {UpdateWebhookRequestBody} updateWebhookRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateWebhook: (webhookId: string, updateWebhookRequestBody: UpdateWebhookRequestBody, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * WebhooksApi - functional programming interface
 * @export
 */
export declare const WebhooksApiFp: (configuration?: Configuration) => {
    /**
     * Create a webook for specific events in the environment.
     * @summary Create a Webhook
     * @param {CreateWebhookRequestBody} createWebhookRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createWebhook(createWebhookRequestBody: CreateWebhookRequestBody, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CreateWebhookResponseBody>>;
    /**
     * Delete a webhook
     * @summary Delete Webhook By ID
     * @param {string} webhookId Webhook ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteWebhook(webhookId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>>;
    /**
     * Retrieve individual webhook by an ID
     * @summary Get Webhook By ID
     * @param {string} webhookId Webhook ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getWebhookById(webhookId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetWebhookByIdResponseBody>>;
    /**
     * List all webhooks currently enabled for the account.
     * @summary List Webhooks
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listWebhooks(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<Webhook>>>;
    /**
     * Update the webhook url property
     * @summary Update a Webhook
     * @param {string} webhookId Webhook ID
     * @param {UpdateWebhookRequestBody} updateWebhookRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateWebhook(webhookId: string, updateWebhookRequestBody: UpdateWebhookRequestBody, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>>;
};
/**
 * WebhooksApi - factory interface
 * @export
 */
export declare const WebhooksApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Create a webook for specific events in the environment.
     * @summary Create a Webhook
     * @param {CreateWebhookRequestBody} createWebhookRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createWebhook(createWebhookRequestBody: CreateWebhookRequestBody, options?: any): AxiosPromise<CreateWebhookResponseBody>;
    /**
     * Delete a webhook
     * @summary Delete Webhook By ID
     * @param {string} webhookId Webhook ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteWebhook(webhookId: string, options?: any): AxiosPromise<string>;
    /**
     * Retrieve individual webhook by an ID
     * @summary Get Webhook By ID
     * @param {string} webhookId Webhook ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getWebhookById(webhookId: string, options?: any): AxiosPromise<GetWebhookByIdResponseBody>;
    /**
     * List all webhooks currently enabled for the account.
     * @summary List Webhooks
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listWebhooks(options?: any): AxiosPromise<Array<Webhook>>;
    /**
     * Update the webhook url property
     * @summary Update a Webhook
     * @param {string} webhookId Webhook ID
     * @param {UpdateWebhookRequestBody} updateWebhookRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateWebhook(webhookId: string, updateWebhookRequestBody: UpdateWebhookRequestBody, options?: any): AxiosPromise<string>;
};
/**
 * WebhooksApi - object-oriented interface
 * @export
 * @class WebhooksApi
 * @extends {BaseAPI}
 */
export declare class WebhooksApi extends BaseAPI {
    /**
     * Create a webook for specific events in the environment.
     * @summary Create a Webhook
     * @param {CreateWebhookRequestBody} createWebhookRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WebhooksApi
     */
    createWebhook(createWebhookRequestBody: CreateWebhookRequestBody, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<CreateWebhookResponseBody, any>>;
    /**
     * Delete a webhook
     * @summary Delete Webhook By ID
     * @param {string} webhookId Webhook ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WebhooksApi
     */
    deleteWebhook(webhookId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<string, any>>;
    /**
     * Retrieve individual webhook by an ID
     * @summary Get Webhook By ID
     * @param {string} webhookId Webhook ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WebhooksApi
     */
    getWebhookById(webhookId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetWebhookByIdResponseBody, any>>;
    /**
     * List all webhooks currently enabled for the account.
     * @summary List Webhooks
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WebhooksApi
     */
    listWebhooks(options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<Webhook[], any>>;
    /**
     * Update the webhook url property
     * @summary Update a Webhook
     * @param {string} webhookId Webhook ID
     * @param {UpdateWebhookRequestBody} updateWebhookRequestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WebhooksApi
     */
    updateWebhook(webhookId: string, updateWebhookRequestBody: UpdateWebhookRequestBody, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<string, any>>;
}
//# sourceMappingURL=api.d.ts.map